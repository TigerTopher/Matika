
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'BACFA5B8819311824C17FED24CF8E13B'
    
_lr_action_items = {'END':([0,9,12,16,],[2,-5,2,-6,]),'SEMICOLON':([14,],[16,]),'INT':([0,9,12,16,],[13,-5,13,-6,]),'DOUBLE':([0,9,12,16,],[4,-5,4,-6,]),'FLOAT':([0,9,12,16,],[5,-5,5,-6,]),'LONG':([0,9,12,16,],[6,-5,6,-6,]),'CHAR':([0,9,12,16,],[7,-5,7,-6,]),'BOOLEAN':([0,9,12,16,],[10,-5,10,-6,]),'IDENTIFIER':([4,5,6,7,8,10,13,],[-12,-11,-10,-9,14,-8,-7,]),'$end':([1,2,3,11,15,],[-1,-2,0,-3,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementTop':([0,12,],[1,15,]),'statementAug':([0,],[3,]),'dataType':([0,12,],[8,8,]),'identifierDeclaration':([0,12,],[9,9,]),'statement':([0,12,],[11,11,]),'declaration':([0,12,],[12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statementAug","S'",1,None,None,None),
  ('statementAug -> statementTop','statementAug',1,'p_statementAug','try1.py',9),
  ('statementTop -> END','statementTop',1,'p_statementTop','try1.py',12),
  ('statementTop -> statement','statementTop',1,'p_statementTop','try1.py',13),
  ('statement -> declaration statementTop','statement',2,'p_statement','try1.py',16),
  ('declaration -> identifierDeclaration','declaration',1,'p_declaration','try1.py',19),
  ('identifierDeclaration -> dataType IDENTIFIER SEMICOLON','identifierDeclaration',3,'p_identifierDeclaration','try1.py',22),
  ('dataType -> INT','dataType',1,'p_dataType','try1.py',26),
  ('dataType -> BOOLEAN','dataType',1,'p_dataType','try1.py',27),
  ('dataType -> CHAR','dataType',1,'p_dataType','try1.py',28),
  ('dataType -> LONG','dataType',1,'p_dataType','try1.py',29),
  ('dataType -> FLOAT','dataType',1,'p_dataType','try1.py',30),
  ('dataType -> DOUBLE','dataType',1,'p_dataType','try1.py',31),
]
