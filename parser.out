Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    QUOTE

Grammar

Rule 0     S' -> statementTop
Rule 1     statementTop -> END
Rule 2     statementTop -> statement
Rule 3     statement -> declaration statementTop
Rule 4     statement -> expression statementTop
Rule 5     statement -> IfThenElse statementTop
Rule 6     statement -> AssignmentHead statementTop
Rule 7     statement -> WhileLoop statementTop
Rule 8     statement -> ForLoop statementTop
Rule 9     statement -> DoWhileLoop statementTop
Rule 10    statement -> unionAdd statementTop
Rule 11    statement -> unionKeys statementTop
Rule 12    statement -> typeCastToInt statementTop
Rule 13    statement -> typecastToFloat statementTop
Rule 14    statement -> FunctionDefinition statementTop
Rule 15    statement -> FunctionCall statementTop
Rule 16    statement -> returnDec statementTop
Rule 17    statement -> stringOpStatement statementTop
Rule 18    statement -> listOpStatement statementTop
Rule 19    statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
Rule 20    statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop
Rule 21    statement1 -> declaration
Rule 22    statement1 -> expression
Rule 23    statement1 -> IfThenElse
Rule 24    statement1 -> AssignmentHead
Rule 25    statement1 -> WhileLoop
Rule 26    statement1 -> ForLoop
Rule 27    statement1 -> DoWhileLoop
Rule 28    statement1 -> unionAdd
Rule 29    statement1 -> unionKeys
Rule 30    statement1 -> typeCastToInt
Rule 31    statement1 -> typecastToFloat
Rule 32    statement1 -> FunctionDefinition
Rule 33    statement1 -> FunctionCall
Rule 34    statement1 -> returnDec
Rule 35    statement1 -> stringOpStatement
Rule 36    statement1 -> listOpStatement statementTop
Rule 37    statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 38    statement1 -> PRINT LPAREN content RPAREN SEMICOLON
Rule 39    content -> toPrint morePrint
Rule 40    morePrint -> PLUS toPrint morePrint
Rule 41    morePrint -> EMPTY
Rule 42    toPrint -> STRINGVALUE
Rule 43    toPrint -> CONSTANT
Rule 44    toPrint -> IDENTIFIER
Rule 45    declaration -> identifierDeclaration
Rule 46    declaration -> listDec
Rule 47    declaration -> unionDec
Rule 48    identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON
Rule 49    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
Rule 50    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
Rule 51    identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
Rule 52    dataType -> INT
Rule 53    dataType -> BOOLEAN
Rule 54    dataType -> FLOAT
Rule 55    stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
Rule 56    stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 57    listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
Rule 58    listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
Rule 59    listOpChoice -> CONSTANT
Rule 60    listOpChoice -> EMPTY
Rule 61    stringOp -> SPLIT
Rule 62    stringOp -> STRIP
Rule 63    stringOp -> CONCAT
Rule 64    stringOp -> COPY
Rule 65    listDec -> IDENTIFIER EQUAL list SEMICOLON
Rule 66    list -> LBRACK listElem RBRACK
Rule 67    listElem -> validListUnionValues
Rule 68    listElem -> validListUnionValues COMMA listElem
Rule 69    listElem -> EMPTY
Rule 70    listEval -> IDENTIFIER LBRACK CONSTANT RBRACK
Rule 71    unionDec -> IDENTIFIER EQUAL union SEMICOLON
Rule 72    union -> LCURLY unionElement RCURLY
Rule 73    unionElement -> STRING EQUAL validListUnionValues
Rule 74    unionElement -> STRING EQUAL validListUnionValues COMMA unionElement
Rule 75    unionElement -> EMPTY
Rule 76    unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
Rule 77    validListUnionValues -> CONSTANT
Rule 78    validListUnionValues -> FLOATVALUE
Rule 79    validListUnionValues -> booleanValue
Rule 80    validListUnionValues -> STRINGVALUE
Rule 81    unionKeys -> IDENTIFIER KEYS SEMICOLON
Rule 82    unionEval -> IDENTIFIER ARROW STRING
Rule 83    typeCastToInt -> TC_INT IDENTIFIER SEMICOLON
Rule 84    typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON
Rule 85    WhileLoop -> WHILE Condition COLON Body
Rule 86    Body -> statementMore
Rule 87    statementMore -> statementMoreCont
Rule 88    statementMore -> END
Rule 89    statementMoreCont -> statement1 statementMore
Rule 90    ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body
Rule 91    DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON
Rule 92    Increment -> SEMICOLON Operand Options
Rule 93    Options -> Iterator
Rule 94    Options -> AssignmentOperator Operand
Rule 95    IfThenElse -> IF Condition COLON Body addElif
Rule 96    addElif -> addElif2
Rule 97    addElif -> FI
Rule 98    addElif -> ELSE COLON Body
Rule 99    addElif2 -> elifClause addElif
Rule 100   elifClause -> ELIF Condition COLON Body
Rule 101   Condition -> RelationExpression
Rule 102   Condition -> LPAREN Condition Compound Condition RPAREN
Rule 103   Condition -> LPAREN NOT Condition RPAREN
Rule 104   Operand -> IDENTIFIER
Rule 105   Operand -> CONSTANT
Rule 106   Operand -> booleanValue
Rule 107   Compound -> AND
Rule 108   Compound -> OR
Rule 109   Iterator -> PLUSPLUS
Rule 110   Iterator -> MINUSMINUS
Rule 111   Iterator -> EMPTY
Rule 112   AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON
Rule 113   AssignmentOption -> EQUAL AssignmentOptionChain
Rule 114   AssignmentOption -> AssignmentOperator AssignmentOptions2
Rule 115   AssignmentOptions2 -> CONSTANT
Rule 116   AssignmentOptions2 -> ArithmeticExpression
Rule 117   AssignmentOptionChain -> listEval
Rule 118   AssignmentOptionChain -> Function
Rule 119   AssignmentOptionChain -> unionEval
Rule 120   AssignmentOptionChain -> AssignmentOptions2
Rule 121   AssignmentOperator -> PLUSEQUAL
Rule 122   AssignmentOperator -> MINUSEQUAL
Rule 123   AssignmentOperator -> MULTEQUAL
Rule 124   AssignmentOperator -> DIVEQUAL
Rule 125   AssignmentOperator -> MODEQUAL
Rule 126   expression -> ArithmeticExpression
Rule 127   expression -> listEval
Rule 128   expression -> list
Rule 129   expression -> union
Rule 130   expression -> RelationExpression
Rule 131   RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN
Rule 132   ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
Rule 133   ArithmeticOperator -> PLUS
Rule 134   ArithmeticOperator -> MINUS
Rule 135   ArithmeticOperator -> MULT
Rule 136   ArithmeticOperator -> DIV
Rule 137   ArithmeticOperator -> MOD
Rule 138   RelationOperator -> EQUALEQUAL
Rule 139   RelationOperator -> EQUAL
Rule 140   RelationOperator -> LESSTHAN
Rule 141   RelationOperator -> GREATERTHAN
Rule 142   RelationOperator -> GREATEREQ
Rule 143   RelationOperator -> LESSEREQ
Rule 144   RelationOperator -> NOTEQ
Rule 145   FunctionDefinition -> dataType Function COLON Body
Rule 146   Function -> IDENTIFIER LPAREN Parameter RPAREN
Rule 147   Parameter -> dataType IDENTIFIER
Rule 148   Parameter -> dataType IDENTIFIER COMMA Parameter
Rule 149   Parameter -> EMPTY
Rule 150   FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
Rule 151   FunctionCallParameter -> IDENTIFIER
Rule 152   FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter
Rule 153   FunctionCallParameter -> EMPTY
Rule 154   returnDec -> RETURN CONSTANT SEMICOLON
Rule 155   returnDec -> RETURN IDENTIFIER SEMICOLON
Rule 156   returnDec -> RETURN expression SEMICOLON
Rule 157   booleanValue -> TRUE
Rule 158   booleanValue -> FALSE

Terminals, with rules where they appear

AND                  : 107
ARROW                : 82
BAR                  : 48 48 49 49 50 50 51 51 112 112
BOOLEAN              : 53
COLON                : 85 91 95 98 100 145
COMMA                : 57 68 74 148 152
COMMENT              : 
CONCAT               : 63
CONSTANT             : 43 49 50 57 59 70 77 105 115 154
COPY                 : 64
DIV                  : 136
DIVEQUAL             : 124
DO                   : 91
ELIF                 : 100
ELSE                 : 98
EMPTY                : 41 60 69 75 111 149 153
END                  : 1 88
EQUAL                : 50 51 65 71 73 74 76 113 139
EQUALEQUAL           : 138
FALSE                : 158
FI                   : 97
FLOAT                : 54
FLOATVALUE           : 78
GREATEREQ            : 142
GREATERTHAN          : 132 141
IDENTIFIER           : 19 37 44 48 49 50 51 55 56 56 57 58 65 70 71 76 81 82 83 84 104 112 146 147 148 150 151 152 155
IF                   : 95
INSERT               : 57
INT                  : 52
KEYS                 : 81
LBRACK               : 49 50 66 70 76
LCURLY               : 72
LESSEREQ             : 143
LESSTHAN             : 132 140
LPAREN               : 19 20 37 38 55 56 57 58 90 102 103 131 146 150
MINUS                : 134
MINUSEQUAL           : 122
MINUSMINUS           : 110
MOD                  : 137
MODEQUAL             : 125
MULT                 : 135
MULTEQUAL            : 123
NOT                  : 103
NOTEQ                : 144
OR                   : 108
PLUS                 : 40 133
PLUSEQUAL            : 121
PLUSPLUS             : 109
POP                  : 58
PRINT                : 20 38
QUOTE                : 
RBRACK               : 49 50 66 70 76
RCURLY               : 72
READ                 : 19 37
RETURN               : 154 155 156
RPAREN               : 19 20 37 38 55 56 57 58 90 102 103 131 146 150
SEMICOLON            : 19 20 37 38 48 49 50 51 55 56 57 58 65 71 76 81 83 84 91 92 112 150 154 155 156
SPLIT                : 61
STRING               : 55 73 74 82
STRINGVALUE          : 42 76 80
STRIP                : 62
TC_FLOAT             : 84
TC_INT               : 83
TRUE                 : 157
WHILE                : 85 91
error                : 
for                  : 90

Nonterminals, with rules where they appear

ArithmeticExpression : 116 126
ArithmeticOperator   : 132
AssignmentHead       : 6 24 90
AssignmentOperator   : 94 114
AssignmentOption     : 112
AssignmentOptionChain : 113
AssignmentOptions2   : 114 120
Body                 : 85 90 91 95 98 100 145
Compound             : 102
Condition            : 85 90 91 95 100 102 102 103
DoWhileLoop          : 9 27
ForLoop              : 8 26
Function             : 118 145
FunctionCall         : 15 33
FunctionCallParameter : 150 152
FunctionDefinition   : 14 32
IfThenElse           : 5 23
Increment            : 90
Iterator             : 93
Operand              : 92 94 131 131 132 132
Options              : 92
Parameter            : 146 148
RelationExpression   : 101 130
RelationOperator     : 131
WhileLoop            : 7 25
addElif              : 95 99
addElif2             : 96
booleanValue         : 79 106
content              : 20 38
dataType             : 48 49 50 51 145 147 148
declaration          : 3 21
elifClause           : 99
expression           : 4 22 50 51 156
identifierDeclaration : 45
list                 : 65 128
listDec              : 46
listElem             : 66 68
listEval             : 117 127
listOpChoice         : 58
listOpStatement      : 18 36
morePrint            : 39 40
returnDec            : 16 34
statement            : 2
statement1           : 89
statementMore        : 86 89
statementMoreCont    : 87
statementTop         : 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 36 0
stringOp             : 55 56
stringOpStatement    : 17 35
toPrint              : 39 40
typeCastToInt        : 12 30
typecastToFloat      : 13 31
union                : 71 129
unionAdd             : 10 28
unionDec             : 47
unionElement         : 72 74
unionEval            : 119
unionKeys            : 11 29
validListUnionValues : 57 67 68 73 74 76

Parsing method: LALR

state 0

    (0) S' -> . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 1
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 1

    (0) S' -> statementTop .



state 2

    (91) DoWhileLoop -> DO . COLON Body WHILE Condition SEMICOLON

    COLON           shift and go to state 47


state 3

    (16) statement -> returnDec . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 48
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 4

    (112) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON
    (48) identifierDeclaration -> BAR . dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> BAR . dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    IDENTIFIER      shift and go to state 50
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    dataType                       shift and go to state 49

state 5

    (19) statement -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 51


state 6

    (10) statement -> unionAdd . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 52
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 7

    (72) union -> LCURLY . unionElement RCURLY
    (73) unionElement -> . STRING EQUAL validListUnionValues
    (74) unionElement -> . STRING EQUAL validListUnionValues COMMA unionElement
    (75) unionElement -> . EMPTY

    STRING          shift and go to state 53
    EMPTY           shift and go to state 55

    unionElement                   shift and go to state 54

state 8

    (85) WhileLoop -> WHILE . Condition COLON Body
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 58

state 9

    (18) statement -> listOpStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 59
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 10

    (11) statement -> unionKeys . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 60
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 11

    (46) declaration -> listDec .

    END             reduce using rule 46 (declaration -> listDec .)
    READ            reduce using rule 46 (declaration -> listDec .)
    PRINT           reduce using rule 46 (declaration -> listDec .)
    IF              reduce using rule 46 (declaration -> listDec .)
    BAR             reduce using rule 46 (declaration -> listDec .)
    WHILE           reduce using rule 46 (declaration -> listDec .)
    for             reduce using rule 46 (declaration -> listDec .)
    DO              reduce using rule 46 (declaration -> listDec .)
    IDENTIFIER      reduce using rule 46 (declaration -> listDec .)
    TC_INT          reduce using rule 46 (declaration -> listDec .)
    TC_FLOAT        reduce using rule 46 (declaration -> listDec .)
    RETURN          reduce using rule 46 (declaration -> listDec .)
    LESSTHAN        reduce using rule 46 (declaration -> listDec .)
    LBRACK          reduce using rule 46 (declaration -> listDec .)
    LCURLY          reduce using rule 46 (declaration -> listDec .)
    LPAREN          reduce using rule 46 (declaration -> listDec .)
    INT             reduce using rule 46 (declaration -> listDec .)
    BOOLEAN         reduce using rule 46 (declaration -> listDec .)
    FLOAT           reduce using rule 46 (declaration -> listDec .)


state 12

    (20) statement -> PRINT . LPAREN content RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 61


state 13

    (154) returnDec -> RETURN . CONSTANT SEMICOLON
    (155) returnDec -> RETURN . IDENTIFIER SEMICOLON
    (156) returnDec -> RETURN . expression SEMICOLON
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    CONSTANT        shift and go to state 62
    IDENTIFIER      shift and go to state 63
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28

    listEval                       shift and go to state 23
    union                          shift and go to state 17
    list                           shift and go to state 39
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    expression                     shift and go to state 64

state 14

    (83) typeCastToInt -> TC_INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 65


state 15

    (13) statement -> typecastToFloat . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 66
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 16

    (5) statement -> IfThenElse . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 67
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 17

    (129) expression -> union .

    END             reduce using rule 129 (expression -> union .)
    READ            reduce using rule 129 (expression -> union .)
    PRINT           reduce using rule 129 (expression -> union .)
    IF              reduce using rule 129 (expression -> union .)
    BAR             reduce using rule 129 (expression -> union .)
    WHILE           reduce using rule 129 (expression -> union .)
    for             reduce using rule 129 (expression -> union .)
    DO              reduce using rule 129 (expression -> union .)
    IDENTIFIER      reduce using rule 129 (expression -> union .)
    TC_INT          reduce using rule 129 (expression -> union .)
    TC_FLOAT        reduce using rule 129 (expression -> union .)
    RETURN          reduce using rule 129 (expression -> union .)
    LESSTHAN        reduce using rule 129 (expression -> union .)
    LBRACK          reduce using rule 129 (expression -> union .)
    LCURLY          reduce using rule 129 (expression -> union .)
    LPAREN          reduce using rule 129 (expression -> union .)
    INT             reduce using rule 129 (expression -> union .)
    BOOLEAN         reduce using rule 129 (expression -> union .)
    FLOAT           reduce using rule 129 (expression -> union .)
    SEMICOLON       reduce using rule 129 (expression -> union .)


state 18

    (53) dataType -> BOOLEAN .

    IDENTIFIER      reduce using rule 53 (dataType -> BOOLEAN .)


state 19

    (12) statement -> typeCastToInt . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 68
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 20

    (2) statementTop -> statement .

    END             reduce using rule 2 (statementTop -> statement .)
    READ            reduce using rule 2 (statementTop -> statement .)
    PRINT           reduce using rule 2 (statementTop -> statement .)
    IF              reduce using rule 2 (statementTop -> statement .)
    BAR             reduce using rule 2 (statementTop -> statement .)
    WHILE           reduce using rule 2 (statementTop -> statement .)
    for             reduce using rule 2 (statementTop -> statement .)
    DO              reduce using rule 2 (statementTop -> statement .)
    IDENTIFIER      reduce using rule 2 (statementTop -> statement .)
    TC_INT          reduce using rule 2 (statementTop -> statement .)
    TC_FLOAT        reduce using rule 2 (statementTop -> statement .)
    RETURN          reduce using rule 2 (statementTop -> statement .)
    LESSTHAN        reduce using rule 2 (statementTop -> statement .)
    LBRACK          reduce using rule 2 (statementTop -> statement .)
    LCURLY          reduce using rule 2 (statementTop -> statement .)
    LPAREN          reduce using rule 2 (statementTop -> statement .)
    INT             reduce using rule 2 (statementTop -> statement .)
    BOOLEAN         reduce using rule 2 (statementTop -> statement .)
    FLOAT           reduce using rule 2 (statementTop -> statement .)
    $end            reduce using rule 2 (statementTop -> statement .)


state 21

    (76) unionAdd -> IDENTIFIER . LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> IDENTIFIER . KEYS SEMICOLON
    (150) FunctionCall -> IDENTIFIER . LPAREN FunctionCallParameter RPAREN SEMICOLON
    (55) stringOpStatement -> IDENTIFIER . stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> IDENTIFIER . stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> IDENTIFIER . INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> IDENTIFIER . POP LPAREN listOpChoice RPAREN SEMICOLON
    (65) listDec -> IDENTIFIER . EQUAL list SEMICOLON
    (71) unionDec -> IDENTIFIER . EQUAL union SEMICOLON
    (70) listEval -> IDENTIFIER . LBRACK CONSTANT RBRACK
    (61) stringOp -> . SPLIT
    (62) stringOp -> . STRIP
    (63) stringOp -> . CONCAT
    (64) stringOp -> . COPY

    LBRACK          shift and go to state 79
    KEYS            shift and go to state 75
    LPAREN          shift and go to state 77
    INSERT          shift and go to state 71
    POP             shift and go to state 73
    EQUAL           shift and go to state 69
    SPLIT           shift and go to state 76
    STRIP           shift and go to state 74
    CONCAT          shift and go to state 70
    COPY            shift and go to state 78

    stringOp                       shift and go to state 72

state 22

    (14) statement -> FunctionDefinition . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 80
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    WhileLoop                      shift and go to state 32
    expression                     shift and go to state 46

state 23

    (127) expression -> listEval .

    END             reduce using rule 127 (expression -> listEval .)
    READ            reduce using rule 127 (expression -> listEval .)
    PRINT           reduce using rule 127 (expression -> listEval .)
    IF              reduce using rule 127 (expression -> listEval .)
    BAR             reduce using rule 127 (expression -> listEval .)
    WHILE           reduce using rule 127 (expression -> listEval .)
    for             reduce using rule 127 (expression -> listEval .)
    DO              reduce using rule 127 (expression -> listEval .)
    IDENTIFIER      reduce using rule 127 (expression -> listEval .)
    TC_INT          reduce using rule 127 (expression -> listEval .)
    TC_FLOAT        reduce using rule 127 (expression -> listEval .)
    RETURN          reduce using rule 127 (expression -> listEval .)
    LESSTHAN        reduce using rule 127 (expression -> listEval .)
    LBRACK          reduce using rule 127 (expression -> listEval .)
    LCURLY          reduce using rule 127 (expression -> listEval .)
    LPAREN          reduce using rule 127 (expression -> listEval .)
    INT             reduce using rule 127 (expression -> listEval .)
    BOOLEAN         reduce using rule 127 (expression -> listEval .)
    FLOAT           reduce using rule 127 (expression -> listEval .)
    SEMICOLON       reduce using rule 127 (expression -> listEval .)


state 24

    (1) statementTop -> END .

    END             reduce using rule 1 (statementTop -> END .)
    READ            reduce using rule 1 (statementTop -> END .)
    PRINT           reduce using rule 1 (statementTop -> END .)
    IF              reduce using rule 1 (statementTop -> END .)
    BAR             reduce using rule 1 (statementTop -> END .)
    WHILE           reduce using rule 1 (statementTop -> END .)
    for             reduce using rule 1 (statementTop -> END .)
    DO              reduce using rule 1 (statementTop -> END .)
    IDENTIFIER      reduce using rule 1 (statementTop -> END .)
    TC_INT          reduce using rule 1 (statementTop -> END .)
    TC_FLOAT        reduce using rule 1 (statementTop -> END .)
    RETURN          reduce using rule 1 (statementTop -> END .)
    LESSTHAN        reduce using rule 1 (statementTop -> END .)
    LBRACK          reduce using rule 1 (statementTop -> END .)
    LCURLY          reduce using rule 1 (statementTop -> END .)
    LPAREN          reduce using rule 1 (statementTop -> END .)
    INT             reduce using rule 1 (statementTop -> END .)
    BOOLEAN         reduce using rule 1 (statementTop -> END .)
    FLOAT           reduce using rule 1 (statementTop -> END .)
    $end            reduce using rule 1 (statementTop -> END .)


state 25

    (126) expression -> ArithmeticExpression .

    END             reduce using rule 126 (expression -> ArithmeticExpression .)
    READ            reduce using rule 126 (expression -> ArithmeticExpression .)
    PRINT           reduce using rule 126 (expression -> ArithmeticExpression .)
    IF              reduce using rule 126 (expression -> ArithmeticExpression .)
    BAR             reduce using rule 126 (expression -> ArithmeticExpression .)
    WHILE           reduce using rule 126 (expression -> ArithmeticExpression .)
    for             reduce using rule 126 (expression -> ArithmeticExpression .)
    DO              reduce using rule 126 (expression -> ArithmeticExpression .)
    IDENTIFIER      reduce using rule 126 (expression -> ArithmeticExpression .)
    TC_INT          reduce using rule 126 (expression -> ArithmeticExpression .)
    TC_FLOAT        reduce using rule 126 (expression -> ArithmeticExpression .)
    RETURN          reduce using rule 126 (expression -> ArithmeticExpression .)
    LESSTHAN        reduce using rule 126 (expression -> ArithmeticExpression .)
    LBRACK          reduce using rule 126 (expression -> ArithmeticExpression .)
    LCURLY          reduce using rule 126 (expression -> ArithmeticExpression .)
    LPAREN          reduce using rule 126 (expression -> ArithmeticExpression .)
    INT             reduce using rule 126 (expression -> ArithmeticExpression .)
    BOOLEAN         reduce using rule 126 (expression -> ArithmeticExpression .)
    FLOAT           reduce using rule 126 (expression -> ArithmeticExpression .)
    SEMICOLON       reduce using rule 126 (expression -> ArithmeticExpression .)


state 26

    (130) expression -> RelationExpression .

    END             reduce using rule 130 (expression -> RelationExpression .)
    READ            reduce using rule 130 (expression -> RelationExpression .)
    PRINT           reduce using rule 130 (expression -> RelationExpression .)
    IF              reduce using rule 130 (expression -> RelationExpression .)
    BAR             reduce using rule 130 (expression -> RelationExpression .)
    WHILE           reduce using rule 130 (expression -> RelationExpression .)
    for             reduce using rule 130 (expression -> RelationExpression .)
    DO              reduce using rule 130 (expression -> RelationExpression .)
    IDENTIFIER      reduce using rule 130 (expression -> RelationExpression .)
    TC_INT          reduce using rule 130 (expression -> RelationExpression .)
    TC_FLOAT        reduce using rule 130 (expression -> RelationExpression .)
    RETURN          reduce using rule 130 (expression -> RelationExpression .)
    LESSTHAN        reduce using rule 130 (expression -> RelationExpression .)
    LBRACK          reduce using rule 130 (expression -> RelationExpression .)
    LCURLY          reduce using rule 130 (expression -> RelationExpression .)
    LPAREN          reduce using rule 130 (expression -> RelationExpression .)
    INT             reduce using rule 130 (expression -> RelationExpression .)
    BOOLEAN         reduce using rule 130 (expression -> RelationExpression .)
    FLOAT           reduce using rule 130 (expression -> RelationExpression .)
    SEMICOLON       reduce using rule 130 (expression -> RelationExpression .)


state 27

    (45) declaration -> identifierDeclaration .

    END             reduce using rule 45 (declaration -> identifierDeclaration .)
    READ            reduce using rule 45 (declaration -> identifierDeclaration .)
    PRINT           reduce using rule 45 (declaration -> identifierDeclaration .)
    IF              reduce using rule 45 (declaration -> identifierDeclaration .)
    BAR             reduce using rule 45 (declaration -> identifierDeclaration .)
    WHILE           reduce using rule 45 (declaration -> identifierDeclaration .)
    for             reduce using rule 45 (declaration -> identifierDeclaration .)
    DO              reduce using rule 45 (declaration -> identifierDeclaration .)
    IDENTIFIER      reduce using rule 45 (declaration -> identifierDeclaration .)
    TC_INT          reduce using rule 45 (declaration -> identifierDeclaration .)
    TC_FLOAT        reduce using rule 45 (declaration -> identifierDeclaration .)
    RETURN          reduce using rule 45 (declaration -> identifierDeclaration .)
    LESSTHAN        reduce using rule 45 (declaration -> identifierDeclaration .)
    LBRACK          reduce using rule 45 (declaration -> identifierDeclaration .)
    LCURLY          reduce using rule 45 (declaration -> identifierDeclaration .)
    LPAREN          reduce using rule 45 (declaration -> identifierDeclaration .)
    INT             reduce using rule 45 (declaration -> identifierDeclaration .)
    BOOLEAN         reduce using rule 45 (declaration -> identifierDeclaration .)
    FLOAT           reduce using rule 45 (declaration -> identifierDeclaration .)


state 28

    (131) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 84
    booleanValue                   shift and go to state 81

state 29

    (3) statement -> declaration . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 87
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 30

    (8) statement -> ForLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 88
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    WhileLoop                      shift and go to state 32
    expression                     shift and go to state 46

state 31

    (95) IfThenElse -> IF . Condition COLON Body addElif
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 89

state 32

    (7) statement -> WhileLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 90
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 33

    (9) statement -> DoWhileLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 91
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 34

    (17) statement -> stringOpStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 92
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 35

    (90) ForLoop -> for . LPAREN AssignmentHead Condition Increment RPAREN Body

    LPAREN          shift and go to state 93


state 36

    (52) dataType -> INT .

    IDENTIFIER      reduce using rule 52 (dataType -> INT .)


state 37

    (84) typecastToFloat -> TC_FLOAT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 94


state 38

    (54) dataType -> FLOAT .

    IDENTIFIER      reduce using rule 54 (dataType -> FLOAT .)


state 39

    (128) expression -> list .

    END             reduce using rule 128 (expression -> list .)
    READ            reduce using rule 128 (expression -> list .)
    PRINT           reduce using rule 128 (expression -> list .)
    IF              reduce using rule 128 (expression -> list .)
    BAR             reduce using rule 128 (expression -> list .)
    WHILE           reduce using rule 128 (expression -> list .)
    for             reduce using rule 128 (expression -> list .)
    DO              reduce using rule 128 (expression -> list .)
    IDENTIFIER      reduce using rule 128 (expression -> list .)
    TC_INT          reduce using rule 128 (expression -> list .)
    TC_FLOAT        reduce using rule 128 (expression -> list .)
    RETURN          reduce using rule 128 (expression -> list .)
    LESSTHAN        reduce using rule 128 (expression -> list .)
    LBRACK          reduce using rule 128 (expression -> list .)
    LCURLY          reduce using rule 128 (expression -> list .)
    LPAREN          reduce using rule 128 (expression -> list .)
    INT             reduce using rule 128 (expression -> list .)
    BOOLEAN         reduce using rule 128 (expression -> list .)
    FLOAT           reduce using rule 128 (expression -> list .)
    SEMICOLON       reduce using rule 128 (expression -> list .)


state 40

    (66) list -> LBRACK . listElem RBRACK
    (67) listElem -> . validListUnionValues
    (68) listElem -> . validListUnionValues COMMA listElem
    (69) listElem -> . EMPTY
    (77) validListUnionValues -> . CONSTANT
    (78) validListUnionValues -> . FLOATVALUE
    (79) validListUnionValues -> . booleanValue
    (80) validListUnionValues -> . STRINGVALUE
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    EMPTY           shift and go to state 101
    CONSTANT        shift and go to state 96
    FLOATVALUE      shift and go to state 95
    STRINGVALUE     shift and go to state 98
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    listElem                       shift and go to state 99
    booleanValue                   shift and go to state 100
    validListUnionValues           shift and go to state 97

state 41

    (132) ArithmeticExpression -> LESSTHAN . Operand ArithmeticOperator Operand GREATERTHAN
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 102
    booleanValue                   shift and go to state 81

state 42

    (47) declaration -> unionDec .

    END             reduce using rule 47 (declaration -> unionDec .)
    READ            reduce using rule 47 (declaration -> unionDec .)
    PRINT           reduce using rule 47 (declaration -> unionDec .)
    IF              reduce using rule 47 (declaration -> unionDec .)
    BAR             reduce using rule 47 (declaration -> unionDec .)
    WHILE           reduce using rule 47 (declaration -> unionDec .)
    for             reduce using rule 47 (declaration -> unionDec .)
    DO              reduce using rule 47 (declaration -> unionDec .)
    IDENTIFIER      reduce using rule 47 (declaration -> unionDec .)
    TC_INT          reduce using rule 47 (declaration -> unionDec .)
    TC_FLOAT        reduce using rule 47 (declaration -> unionDec .)
    RETURN          reduce using rule 47 (declaration -> unionDec .)
    LESSTHAN        reduce using rule 47 (declaration -> unionDec .)
    LBRACK          reduce using rule 47 (declaration -> unionDec .)
    LCURLY          reduce using rule 47 (declaration -> unionDec .)
    LPAREN          reduce using rule 47 (declaration -> unionDec .)
    INT             reduce using rule 47 (declaration -> unionDec .)
    BOOLEAN         reduce using rule 47 (declaration -> unionDec .)
    FLOAT           reduce using rule 47 (declaration -> unionDec .)


state 43

    (145) FunctionDefinition -> dataType . Function COLON Body
    (146) Function -> . IDENTIFIER LPAREN Parameter RPAREN

    IDENTIFIER      shift and go to state 104

    Function                       shift and go to state 103

state 44

    (6) statement -> AssignmentHead . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 105
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 45

    (15) statement -> FunctionCall . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 106
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 46

    (4) statement -> expression . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 107
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 47

    (91) DoWhileLoop -> DO COLON . Body WHILE Condition SEMICOLON
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 115
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 48

    (16) statement -> returnDec statementTop .

    $end            reduce using rule 16 (statement -> returnDec statementTop .)
    END             reduce using rule 16 (statement -> returnDec statementTop .)
    READ            reduce using rule 16 (statement -> returnDec statementTop .)
    PRINT           reduce using rule 16 (statement -> returnDec statementTop .)
    IF              reduce using rule 16 (statement -> returnDec statementTop .)
    BAR             reduce using rule 16 (statement -> returnDec statementTop .)
    WHILE           reduce using rule 16 (statement -> returnDec statementTop .)
    for             reduce using rule 16 (statement -> returnDec statementTop .)
    DO              reduce using rule 16 (statement -> returnDec statementTop .)
    IDENTIFIER      reduce using rule 16 (statement -> returnDec statementTop .)
    TC_INT          reduce using rule 16 (statement -> returnDec statementTop .)
    TC_FLOAT        reduce using rule 16 (statement -> returnDec statementTop .)
    RETURN          reduce using rule 16 (statement -> returnDec statementTop .)
    LESSTHAN        reduce using rule 16 (statement -> returnDec statementTop .)
    LBRACK          reduce using rule 16 (statement -> returnDec statementTop .)
    LCURLY          reduce using rule 16 (statement -> returnDec statementTop .)
    LPAREN          reduce using rule 16 (statement -> returnDec statementTop .)
    INT             reduce using rule 16 (statement -> returnDec statementTop .)
    BOOLEAN         reduce using rule 16 (statement -> returnDec statementTop .)
    FLOAT           reduce using rule 16 (statement -> returnDec statementTop .)


state 49

    (48) identifierDeclaration -> BAR dataType . IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> BAR dataType . IDENTIFIER EQUAL expression BAR SEMICOLON

    IDENTIFIER      shift and go to state 131


state 50

    (112) AssignmentHead -> BAR IDENTIFIER . AssignmentOption BAR SEMICOLON
    (113) AssignmentOption -> . EQUAL AssignmentOptionChain
    (114) AssignmentOption -> . AssignmentOperator AssignmentOptions2
    (121) AssignmentOperator -> . PLUSEQUAL
    (122) AssignmentOperator -> . MINUSEQUAL
    (123) AssignmentOperator -> . MULTEQUAL
    (124) AssignmentOperator -> . DIVEQUAL
    (125) AssignmentOperator -> . MODEQUAL

    EQUAL           shift and go to state 138
    PLUSEQUAL       shift and go to state 133
    MINUSEQUAL      shift and go to state 136
    MULTEQUAL       shift and go to state 139
    DIVEQUAL        shift and go to state 132
    MODEQUAL        shift and go to state 137

    AssignmentOption               shift and go to state 134
    AssignmentOperator             shift and go to state 135

state 51

    (19) statement -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON statementTop

    IDENTIFIER      shift and go to state 140


state 52

    (10) statement -> unionAdd statementTop .

    $end            reduce using rule 10 (statement -> unionAdd statementTop .)
    END             reduce using rule 10 (statement -> unionAdd statementTop .)
    READ            reduce using rule 10 (statement -> unionAdd statementTop .)
    PRINT           reduce using rule 10 (statement -> unionAdd statementTop .)
    IF              reduce using rule 10 (statement -> unionAdd statementTop .)
    BAR             reduce using rule 10 (statement -> unionAdd statementTop .)
    WHILE           reduce using rule 10 (statement -> unionAdd statementTop .)
    for             reduce using rule 10 (statement -> unionAdd statementTop .)
    DO              reduce using rule 10 (statement -> unionAdd statementTop .)
    IDENTIFIER      reduce using rule 10 (statement -> unionAdd statementTop .)
    TC_INT          reduce using rule 10 (statement -> unionAdd statementTop .)
    TC_FLOAT        reduce using rule 10 (statement -> unionAdd statementTop .)
    RETURN          reduce using rule 10 (statement -> unionAdd statementTop .)
    LESSTHAN        reduce using rule 10 (statement -> unionAdd statementTop .)
    LBRACK          reduce using rule 10 (statement -> unionAdd statementTop .)
    LCURLY          reduce using rule 10 (statement -> unionAdd statementTop .)
    LPAREN          reduce using rule 10 (statement -> unionAdd statementTop .)
    INT             reduce using rule 10 (statement -> unionAdd statementTop .)
    BOOLEAN         reduce using rule 10 (statement -> unionAdd statementTop .)
    FLOAT           reduce using rule 10 (statement -> unionAdd statementTop .)


state 53

    (73) unionElement -> STRING . EQUAL validListUnionValues
    (74) unionElement -> STRING . EQUAL validListUnionValues COMMA unionElement

    EQUAL           shift and go to state 141


state 54

    (72) union -> LCURLY unionElement . RCURLY

    RCURLY          shift and go to state 142


state 55

    (75) unionElement -> EMPTY .

    RCURLY          reduce using rule 75 (unionElement -> EMPTY .)


state 56

    (101) Condition -> RelationExpression .

    COLON           reduce using rule 101 (Condition -> RelationExpression .)
    SEMICOLON       reduce using rule 101 (Condition -> RelationExpression .)
    RPAREN          reduce using rule 101 (Condition -> RelationExpression .)
    AND             reduce using rule 101 (Condition -> RelationExpression .)
    OR              reduce using rule 101 (Condition -> RelationExpression .)


state 57

    (102) Condition -> LPAREN . Condition Compound Condition RPAREN
    (103) Condition -> LPAREN . NOT Condition RPAREN
    (131) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    NOT             shift and go to state 143
    LPAREN          shift and go to state 57
    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    RelationExpression             shift and go to state 56
    Operand                        shift and go to state 84
    booleanValue                   shift and go to state 81
    Condition                      shift and go to state 144

state 58

    (85) WhileLoop -> WHILE Condition . COLON Body

    COLON           shift and go to state 145


state 59

    (18) statement -> listOpStatement statementTop .

    $end            reduce using rule 18 (statement -> listOpStatement statementTop .)
    END             reduce using rule 18 (statement -> listOpStatement statementTop .)
    READ            reduce using rule 18 (statement -> listOpStatement statementTop .)
    PRINT           reduce using rule 18 (statement -> listOpStatement statementTop .)
    IF              reduce using rule 18 (statement -> listOpStatement statementTop .)
    BAR             reduce using rule 18 (statement -> listOpStatement statementTop .)
    WHILE           reduce using rule 18 (statement -> listOpStatement statementTop .)
    for             reduce using rule 18 (statement -> listOpStatement statementTop .)
    DO              reduce using rule 18 (statement -> listOpStatement statementTop .)
    IDENTIFIER      reduce using rule 18 (statement -> listOpStatement statementTop .)
    TC_INT          reduce using rule 18 (statement -> listOpStatement statementTop .)
    TC_FLOAT        reduce using rule 18 (statement -> listOpStatement statementTop .)
    RETURN          reduce using rule 18 (statement -> listOpStatement statementTop .)
    LESSTHAN        reduce using rule 18 (statement -> listOpStatement statementTop .)
    LBRACK          reduce using rule 18 (statement -> listOpStatement statementTop .)
    LCURLY          reduce using rule 18 (statement -> listOpStatement statementTop .)
    LPAREN          reduce using rule 18 (statement -> listOpStatement statementTop .)
    INT             reduce using rule 18 (statement -> listOpStatement statementTop .)
    BOOLEAN         reduce using rule 18 (statement -> listOpStatement statementTop .)
    FLOAT           reduce using rule 18 (statement -> listOpStatement statementTop .)


state 60

    (11) statement -> unionKeys statementTop .

    $end            reduce using rule 11 (statement -> unionKeys statementTop .)
    END             reduce using rule 11 (statement -> unionKeys statementTop .)
    READ            reduce using rule 11 (statement -> unionKeys statementTop .)
    PRINT           reduce using rule 11 (statement -> unionKeys statementTop .)
    IF              reduce using rule 11 (statement -> unionKeys statementTop .)
    BAR             reduce using rule 11 (statement -> unionKeys statementTop .)
    WHILE           reduce using rule 11 (statement -> unionKeys statementTop .)
    for             reduce using rule 11 (statement -> unionKeys statementTop .)
    DO              reduce using rule 11 (statement -> unionKeys statementTop .)
    IDENTIFIER      reduce using rule 11 (statement -> unionKeys statementTop .)
    TC_INT          reduce using rule 11 (statement -> unionKeys statementTop .)
    TC_FLOAT        reduce using rule 11 (statement -> unionKeys statementTop .)
    RETURN          reduce using rule 11 (statement -> unionKeys statementTop .)
    LESSTHAN        reduce using rule 11 (statement -> unionKeys statementTop .)
    LBRACK          reduce using rule 11 (statement -> unionKeys statementTop .)
    LCURLY          reduce using rule 11 (statement -> unionKeys statementTop .)
    LPAREN          reduce using rule 11 (statement -> unionKeys statementTop .)
    INT             reduce using rule 11 (statement -> unionKeys statementTop .)
    BOOLEAN         reduce using rule 11 (statement -> unionKeys statementTop .)
    FLOAT           reduce using rule 11 (statement -> unionKeys statementTop .)


state 61

    (20) statement -> PRINT LPAREN . content RPAREN SEMICOLON statementTop
    (39) content -> . toPrint morePrint
    (42) toPrint -> . STRINGVALUE
    (43) toPrint -> . CONSTANT
    (44) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 149
    CONSTANT        shift and go to state 148
    IDENTIFIER      shift and go to state 146

    content                        shift and go to state 147
    toPrint                        shift and go to state 150

state 62

    (154) returnDec -> RETURN CONSTANT . SEMICOLON

    SEMICOLON       shift and go to state 151


state 63

    (155) returnDec -> RETURN IDENTIFIER . SEMICOLON
    (70) listEval -> IDENTIFIER . LBRACK CONSTANT RBRACK

    SEMICOLON       shift and go to state 152
    LBRACK          shift and go to state 153


state 64

    (156) returnDec -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 154


state 65

    (83) typeCastToInt -> TC_INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 155


state 66

    (13) statement -> typecastToFloat statementTop .

    $end            reduce using rule 13 (statement -> typecastToFloat statementTop .)
    END             reduce using rule 13 (statement -> typecastToFloat statementTop .)
    READ            reduce using rule 13 (statement -> typecastToFloat statementTop .)
    PRINT           reduce using rule 13 (statement -> typecastToFloat statementTop .)
    IF              reduce using rule 13 (statement -> typecastToFloat statementTop .)
    BAR             reduce using rule 13 (statement -> typecastToFloat statementTop .)
    WHILE           reduce using rule 13 (statement -> typecastToFloat statementTop .)
    for             reduce using rule 13 (statement -> typecastToFloat statementTop .)
    DO              reduce using rule 13 (statement -> typecastToFloat statementTop .)
    IDENTIFIER      reduce using rule 13 (statement -> typecastToFloat statementTop .)
    TC_INT          reduce using rule 13 (statement -> typecastToFloat statementTop .)
    TC_FLOAT        reduce using rule 13 (statement -> typecastToFloat statementTop .)
    RETURN          reduce using rule 13 (statement -> typecastToFloat statementTop .)
    LESSTHAN        reduce using rule 13 (statement -> typecastToFloat statementTop .)
    LBRACK          reduce using rule 13 (statement -> typecastToFloat statementTop .)
    LCURLY          reduce using rule 13 (statement -> typecastToFloat statementTop .)
    LPAREN          reduce using rule 13 (statement -> typecastToFloat statementTop .)
    INT             reduce using rule 13 (statement -> typecastToFloat statementTop .)
    BOOLEAN         reduce using rule 13 (statement -> typecastToFloat statementTop .)
    FLOAT           reduce using rule 13 (statement -> typecastToFloat statementTop .)


state 67

    (5) statement -> IfThenElse statementTop .

    $end            reduce using rule 5 (statement -> IfThenElse statementTop .)
    END             reduce using rule 5 (statement -> IfThenElse statementTop .)
    READ            reduce using rule 5 (statement -> IfThenElse statementTop .)
    PRINT           reduce using rule 5 (statement -> IfThenElse statementTop .)
    IF              reduce using rule 5 (statement -> IfThenElse statementTop .)
    BAR             reduce using rule 5 (statement -> IfThenElse statementTop .)
    WHILE           reduce using rule 5 (statement -> IfThenElse statementTop .)
    for             reduce using rule 5 (statement -> IfThenElse statementTop .)
    DO              reduce using rule 5 (statement -> IfThenElse statementTop .)
    IDENTIFIER      reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_INT          reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_FLOAT        reduce using rule 5 (statement -> IfThenElse statementTop .)
    RETURN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LESSTHAN        reduce using rule 5 (statement -> IfThenElse statementTop .)
    LBRACK          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LCURLY          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LPAREN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    INT             reduce using rule 5 (statement -> IfThenElse statementTop .)
    BOOLEAN         reduce using rule 5 (statement -> IfThenElse statementTop .)
    FLOAT           reduce using rule 5 (statement -> IfThenElse statementTop .)


state 68

    (12) statement -> typeCastToInt statementTop .

    $end            reduce using rule 12 (statement -> typeCastToInt statementTop .)
    END             reduce using rule 12 (statement -> typeCastToInt statementTop .)
    READ            reduce using rule 12 (statement -> typeCastToInt statementTop .)
    PRINT           reduce using rule 12 (statement -> typeCastToInt statementTop .)
    IF              reduce using rule 12 (statement -> typeCastToInt statementTop .)
    BAR             reduce using rule 12 (statement -> typeCastToInt statementTop .)
    WHILE           reduce using rule 12 (statement -> typeCastToInt statementTop .)
    for             reduce using rule 12 (statement -> typeCastToInt statementTop .)
    DO              reduce using rule 12 (statement -> typeCastToInt statementTop .)
    IDENTIFIER      reduce using rule 12 (statement -> typeCastToInt statementTop .)
    TC_INT          reduce using rule 12 (statement -> typeCastToInt statementTop .)
    TC_FLOAT        reduce using rule 12 (statement -> typeCastToInt statementTop .)
    RETURN          reduce using rule 12 (statement -> typeCastToInt statementTop .)
    LESSTHAN        reduce using rule 12 (statement -> typeCastToInt statementTop .)
    LBRACK          reduce using rule 12 (statement -> typeCastToInt statementTop .)
    LCURLY          reduce using rule 12 (statement -> typeCastToInt statementTop .)
    LPAREN          reduce using rule 12 (statement -> typeCastToInt statementTop .)
    INT             reduce using rule 12 (statement -> typeCastToInt statementTop .)
    BOOLEAN         reduce using rule 12 (statement -> typeCastToInt statementTop .)
    FLOAT           reduce using rule 12 (statement -> typeCastToInt statementTop .)


state 69

    (65) listDec -> IDENTIFIER EQUAL . list SEMICOLON
    (71) unionDec -> IDENTIFIER EQUAL . union SEMICOLON
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY

    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7

    union                          shift and go to state 156
    list                           shift and go to state 157

state 70

    (63) stringOp -> CONCAT .

    LPAREN          reduce using rule 63 (stringOp -> CONCAT .)


state 71

    (57) listOpStatement -> IDENTIFIER INSERT . LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    LPAREN          shift and go to state 158


state 72

    (55) stringOpStatement -> IDENTIFIER stringOp . LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> IDENTIFIER stringOp . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 159


state 73

    (58) listOpStatement -> IDENTIFIER POP . LPAREN listOpChoice RPAREN SEMICOLON

    LPAREN          shift and go to state 160


state 74

    (62) stringOp -> STRIP .

    LPAREN          reduce using rule 62 (stringOp -> STRIP .)


state 75

    (81) unionKeys -> IDENTIFIER KEYS . SEMICOLON

    SEMICOLON       shift and go to state 161


state 76

    (61) stringOp -> SPLIT .

    LPAREN          reduce using rule 61 (stringOp -> SPLIT .)


state 77

    (150) FunctionCall -> IDENTIFIER LPAREN . FunctionCallParameter RPAREN SEMICOLON
    (151) FunctionCallParameter -> . IDENTIFIER
    (152) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (153) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 163
    EMPTY           shift and go to state 164

    FunctionCallParameter          shift and go to state 162

state 78

    (64) stringOp -> COPY .

    LPAREN          reduce using rule 64 (stringOp -> COPY .)


state 79

    (76) unionAdd -> IDENTIFIER LBRACK . STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (70) listEval -> IDENTIFIER LBRACK . CONSTANT RBRACK

    STRINGVALUE     shift and go to state 166
    CONSTANT        shift and go to state 165


state 80

    (14) statement -> FunctionDefinition statementTop .

    $end            reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    END             reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    READ            reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    PRINT           reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    IF              reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    BAR             reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    WHILE           reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    for             reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    DO              reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    IDENTIFIER      reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    TC_INT          reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    TC_FLOAT        reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    RETURN          reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    LESSTHAN        reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    LBRACK          reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    LCURLY          reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    LPAREN          reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    INT             reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    BOOLEAN         reduce using rule 14 (statement -> FunctionDefinition statementTop .)
    FLOAT           reduce using rule 14 (statement -> FunctionDefinition statementTop .)


state 81

    (106) Operand -> booleanValue .

    RPAREN          reduce using rule 106 (Operand -> booleanValue .)
    GREATERTHAN     reduce using rule 106 (Operand -> booleanValue .)
    PLUSPLUS        reduce using rule 106 (Operand -> booleanValue .)
    MINUSMINUS      reduce using rule 106 (Operand -> booleanValue .)
    EMPTY           reduce using rule 106 (Operand -> booleanValue .)
    PLUSEQUAL       reduce using rule 106 (Operand -> booleanValue .)
    MINUSEQUAL      reduce using rule 106 (Operand -> booleanValue .)
    MULTEQUAL       reduce using rule 106 (Operand -> booleanValue .)
    DIVEQUAL        reduce using rule 106 (Operand -> booleanValue .)
    MODEQUAL        reduce using rule 106 (Operand -> booleanValue .)
    EQUALEQUAL      reduce using rule 106 (Operand -> booleanValue .)
    EQUAL           reduce using rule 106 (Operand -> booleanValue .)
    LESSTHAN        reduce using rule 106 (Operand -> booleanValue .)
    GREATEREQ       reduce using rule 106 (Operand -> booleanValue .)
    LESSEREQ        reduce using rule 106 (Operand -> booleanValue .)
    NOTEQ           reduce using rule 106 (Operand -> booleanValue .)
    PLUS            reduce using rule 106 (Operand -> booleanValue .)
    MINUS           reduce using rule 106 (Operand -> booleanValue .)
    MULT            reduce using rule 106 (Operand -> booleanValue .)
    DIV             reduce using rule 106 (Operand -> booleanValue .)
    MOD             reduce using rule 106 (Operand -> booleanValue .)


state 82

    (157) booleanValue -> TRUE .

    RPAREN          reduce using rule 157 (booleanValue -> TRUE .)
    PLUS            reduce using rule 157 (booleanValue -> TRUE .)
    MINUS           reduce using rule 157 (booleanValue -> TRUE .)
    MULT            reduce using rule 157 (booleanValue -> TRUE .)
    DIV             reduce using rule 157 (booleanValue -> TRUE .)
    MOD             reduce using rule 157 (booleanValue -> TRUE .)
    COMMA           reduce using rule 157 (booleanValue -> TRUE .)
    RCURLY          reduce using rule 157 (booleanValue -> TRUE .)
    EQUALEQUAL      reduce using rule 157 (booleanValue -> TRUE .)
    EQUAL           reduce using rule 157 (booleanValue -> TRUE .)
    LESSTHAN        reduce using rule 157 (booleanValue -> TRUE .)
    GREATERTHAN     reduce using rule 157 (booleanValue -> TRUE .)
    GREATEREQ       reduce using rule 157 (booleanValue -> TRUE .)
    LESSEREQ        reduce using rule 157 (booleanValue -> TRUE .)
    NOTEQ           reduce using rule 157 (booleanValue -> TRUE .)
    SEMICOLON       reduce using rule 157 (booleanValue -> TRUE .)
    RBRACK          reduce using rule 157 (booleanValue -> TRUE .)
    PLUSPLUS        reduce using rule 157 (booleanValue -> TRUE .)
    MINUSMINUS      reduce using rule 157 (booleanValue -> TRUE .)
    EMPTY           reduce using rule 157 (booleanValue -> TRUE .)
    PLUSEQUAL       reduce using rule 157 (booleanValue -> TRUE .)
    MINUSEQUAL      reduce using rule 157 (booleanValue -> TRUE .)
    MULTEQUAL       reduce using rule 157 (booleanValue -> TRUE .)
    DIVEQUAL        reduce using rule 157 (booleanValue -> TRUE .)
    MODEQUAL        reduce using rule 157 (booleanValue -> TRUE .)


state 83

    (158) booleanValue -> FALSE .

    RPAREN          reduce using rule 158 (booleanValue -> FALSE .)
    PLUS            reduce using rule 158 (booleanValue -> FALSE .)
    MINUS           reduce using rule 158 (booleanValue -> FALSE .)
    MULT            reduce using rule 158 (booleanValue -> FALSE .)
    DIV             reduce using rule 158 (booleanValue -> FALSE .)
    MOD             reduce using rule 158 (booleanValue -> FALSE .)
    COMMA           reduce using rule 158 (booleanValue -> FALSE .)
    RCURLY          reduce using rule 158 (booleanValue -> FALSE .)
    EQUALEQUAL      reduce using rule 158 (booleanValue -> FALSE .)
    EQUAL           reduce using rule 158 (booleanValue -> FALSE .)
    LESSTHAN        reduce using rule 158 (booleanValue -> FALSE .)
    GREATERTHAN     reduce using rule 158 (booleanValue -> FALSE .)
    GREATEREQ       reduce using rule 158 (booleanValue -> FALSE .)
    LESSEREQ        reduce using rule 158 (booleanValue -> FALSE .)
    NOTEQ           reduce using rule 158 (booleanValue -> FALSE .)
    SEMICOLON       reduce using rule 158 (booleanValue -> FALSE .)
    RBRACK          reduce using rule 158 (booleanValue -> FALSE .)
    PLUSPLUS        reduce using rule 158 (booleanValue -> FALSE .)
    MINUSMINUS      reduce using rule 158 (booleanValue -> FALSE .)
    EMPTY           reduce using rule 158 (booleanValue -> FALSE .)
    PLUSEQUAL       reduce using rule 158 (booleanValue -> FALSE .)
    MINUSEQUAL      reduce using rule 158 (booleanValue -> FALSE .)
    MULTEQUAL       reduce using rule 158 (booleanValue -> FALSE .)
    DIVEQUAL        reduce using rule 158 (booleanValue -> FALSE .)
    MODEQUAL        reduce using rule 158 (booleanValue -> FALSE .)


state 84

    (131) RelationExpression -> LPAREN Operand . RelationOperator Operand RPAREN
    (138) RelationOperator -> . EQUALEQUAL
    (139) RelationOperator -> . EQUAL
    (140) RelationOperator -> . LESSTHAN
    (141) RelationOperator -> . GREATERTHAN
    (142) RelationOperator -> . GREATEREQ
    (143) RelationOperator -> . LESSEREQ
    (144) RelationOperator -> . NOTEQ

    EQUALEQUAL      shift and go to state 173
    EQUAL           shift and go to state 169
    LESSTHAN        shift and go to state 171
    GREATERTHAN     shift and go to state 172
    GREATEREQ       shift and go to state 170
    LESSEREQ        shift and go to state 168
    NOTEQ           shift and go to state 167

    RelationOperator               shift and go to state 174

state 85

    (105) Operand -> CONSTANT .

    RPAREN          reduce using rule 105 (Operand -> CONSTANT .)
    GREATERTHAN     reduce using rule 105 (Operand -> CONSTANT .)
    PLUSPLUS        reduce using rule 105 (Operand -> CONSTANT .)
    MINUSMINUS      reduce using rule 105 (Operand -> CONSTANT .)
    EMPTY           reduce using rule 105 (Operand -> CONSTANT .)
    PLUSEQUAL       reduce using rule 105 (Operand -> CONSTANT .)
    MINUSEQUAL      reduce using rule 105 (Operand -> CONSTANT .)
    MULTEQUAL       reduce using rule 105 (Operand -> CONSTANT .)
    DIVEQUAL        reduce using rule 105 (Operand -> CONSTANT .)
    MODEQUAL        reduce using rule 105 (Operand -> CONSTANT .)
    EQUALEQUAL      reduce using rule 105 (Operand -> CONSTANT .)
    EQUAL           reduce using rule 105 (Operand -> CONSTANT .)
    LESSTHAN        reduce using rule 105 (Operand -> CONSTANT .)
    GREATEREQ       reduce using rule 105 (Operand -> CONSTANT .)
    LESSEREQ        reduce using rule 105 (Operand -> CONSTANT .)
    NOTEQ           reduce using rule 105 (Operand -> CONSTANT .)
    PLUS            reduce using rule 105 (Operand -> CONSTANT .)
    MINUS           reduce using rule 105 (Operand -> CONSTANT .)
    MULT            reduce using rule 105 (Operand -> CONSTANT .)
    DIV             reduce using rule 105 (Operand -> CONSTANT .)
    MOD             reduce using rule 105 (Operand -> CONSTANT .)


state 86

    (104) Operand -> IDENTIFIER .

    RPAREN          reduce using rule 104 (Operand -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 104 (Operand -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 104 (Operand -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 104 (Operand -> IDENTIFIER .)
    EMPTY           reduce using rule 104 (Operand -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 104 (Operand -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 104 (Operand -> IDENTIFIER .)
    MULTEQUAL       reduce using rule 104 (Operand -> IDENTIFIER .)
    DIVEQUAL        reduce using rule 104 (Operand -> IDENTIFIER .)
    MODEQUAL        reduce using rule 104 (Operand -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 104 (Operand -> IDENTIFIER .)
    EQUAL           reduce using rule 104 (Operand -> IDENTIFIER .)
    LESSTHAN        reduce using rule 104 (Operand -> IDENTIFIER .)
    GREATEREQ       reduce using rule 104 (Operand -> IDENTIFIER .)
    LESSEREQ        reduce using rule 104 (Operand -> IDENTIFIER .)
    NOTEQ           reduce using rule 104 (Operand -> IDENTIFIER .)
    PLUS            reduce using rule 104 (Operand -> IDENTIFIER .)
    MINUS           reduce using rule 104 (Operand -> IDENTIFIER .)
    MULT            reduce using rule 104 (Operand -> IDENTIFIER .)
    DIV             reduce using rule 104 (Operand -> IDENTIFIER .)
    MOD             reduce using rule 104 (Operand -> IDENTIFIER .)


state 87

    (3) statement -> declaration statementTop .

    $end            reduce using rule 3 (statement -> declaration statementTop .)
    END             reduce using rule 3 (statement -> declaration statementTop .)
    READ            reduce using rule 3 (statement -> declaration statementTop .)
    PRINT           reduce using rule 3 (statement -> declaration statementTop .)
    IF              reduce using rule 3 (statement -> declaration statementTop .)
    BAR             reduce using rule 3 (statement -> declaration statementTop .)
    WHILE           reduce using rule 3 (statement -> declaration statementTop .)
    for             reduce using rule 3 (statement -> declaration statementTop .)
    DO              reduce using rule 3 (statement -> declaration statementTop .)
    IDENTIFIER      reduce using rule 3 (statement -> declaration statementTop .)
    TC_INT          reduce using rule 3 (statement -> declaration statementTop .)
    TC_FLOAT        reduce using rule 3 (statement -> declaration statementTop .)
    RETURN          reduce using rule 3 (statement -> declaration statementTop .)
    LESSTHAN        reduce using rule 3 (statement -> declaration statementTop .)
    LBRACK          reduce using rule 3 (statement -> declaration statementTop .)
    LCURLY          reduce using rule 3 (statement -> declaration statementTop .)
    LPAREN          reduce using rule 3 (statement -> declaration statementTop .)
    INT             reduce using rule 3 (statement -> declaration statementTop .)
    BOOLEAN         reduce using rule 3 (statement -> declaration statementTop .)
    FLOAT           reduce using rule 3 (statement -> declaration statementTop .)


state 88

    (8) statement -> ForLoop statementTop .

    $end            reduce using rule 8 (statement -> ForLoop statementTop .)
    END             reduce using rule 8 (statement -> ForLoop statementTop .)
    READ            reduce using rule 8 (statement -> ForLoop statementTop .)
    PRINT           reduce using rule 8 (statement -> ForLoop statementTop .)
    IF              reduce using rule 8 (statement -> ForLoop statementTop .)
    BAR             reduce using rule 8 (statement -> ForLoop statementTop .)
    WHILE           reduce using rule 8 (statement -> ForLoop statementTop .)
    for             reduce using rule 8 (statement -> ForLoop statementTop .)
    DO              reduce using rule 8 (statement -> ForLoop statementTop .)
    IDENTIFIER      reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_INT          reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_FLOAT        reduce using rule 8 (statement -> ForLoop statementTop .)
    RETURN          reduce using rule 8 (statement -> ForLoop statementTop .)
    LESSTHAN        reduce using rule 8 (statement -> ForLoop statementTop .)
    LBRACK          reduce using rule 8 (statement -> ForLoop statementTop .)
    LCURLY          reduce using rule 8 (statement -> ForLoop statementTop .)
    LPAREN          reduce using rule 8 (statement -> ForLoop statementTop .)
    INT             reduce using rule 8 (statement -> ForLoop statementTop .)
    BOOLEAN         reduce using rule 8 (statement -> ForLoop statementTop .)
    FLOAT           reduce using rule 8 (statement -> ForLoop statementTop .)


state 89

    (95) IfThenElse -> IF Condition . COLON Body addElif

    COLON           shift and go to state 175


state 90

    (7) statement -> WhileLoop statementTop .

    $end            reduce using rule 7 (statement -> WhileLoop statementTop .)
    END             reduce using rule 7 (statement -> WhileLoop statementTop .)
    READ            reduce using rule 7 (statement -> WhileLoop statementTop .)
    PRINT           reduce using rule 7 (statement -> WhileLoop statementTop .)
    IF              reduce using rule 7 (statement -> WhileLoop statementTop .)
    BAR             reduce using rule 7 (statement -> WhileLoop statementTop .)
    WHILE           reduce using rule 7 (statement -> WhileLoop statementTop .)
    for             reduce using rule 7 (statement -> WhileLoop statementTop .)
    DO              reduce using rule 7 (statement -> WhileLoop statementTop .)
    IDENTIFIER      reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_INT          reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_FLOAT        reduce using rule 7 (statement -> WhileLoop statementTop .)
    RETURN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LESSTHAN        reduce using rule 7 (statement -> WhileLoop statementTop .)
    LBRACK          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LCURLY          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LPAREN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    INT             reduce using rule 7 (statement -> WhileLoop statementTop .)
    BOOLEAN         reduce using rule 7 (statement -> WhileLoop statementTop .)
    FLOAT           reduce using rule 7 (statement -> WhileLoop statementTop .)


state 91

    (9) statement -> DoWhileLoop statementTop .

    $end            reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    END             reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    READ            reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    PRINT           reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    IF              reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    BAR             reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    WHILE           reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    for             reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    DO              reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    IDENTIFIER      reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    TC_INT          reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    TC_FLOAT        reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    RETURN          reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    LESSTHAN        reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    LBRACK          reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    LCURLY          reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    LPAREN          reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    INT             reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    BOOLEAN         reduce using rule 9 (statement -> DoWhileLoop statementTop .)
    FLOAT           reduce using rule 9 (statement -> DoWhileLoop statementTop .)


state 92

    (17) statement -> stringOpStatement statementTop .

    $end            reduce using rule 17 (statement -> stringOpStatement statementTop .)
    END             reduce using rule 17 (statement -> stringOpStatement statementTop .)
    READ            reduce using rule 17 (statement -> stringOpStatement statementTop .)
    PRINT           reduce using rule 17 (statement -> stringOpStatement statementTop .)
    IF              reduce using rule 17 (statement -> stringOpStatement statementTop .)
    BAR             reduce using rule 17 (statement -> stringOpStatement statementTop .)
    WHILE           reduce using rule 17 (statement -> stringOpStatement statementTop .)
    for             reduce using rule 17 (statement -> stringOpStatement statementTop .)
    DO              reduce using rule 17 (statement -> stringOpStatement statementTop .)
    IDENTIFIER      reduce using rule 17 (statement -> stringOpStatement statementTop .)
    TC_INT          reduce using rule 17 (statement -> stringOpStatement statementTop .)
    TC_FLOAT        reduce using rule 17 (statement -> stringOpStatement statementTop .)
    RETURN          reduce using rule 17 (statement -> stringOpStatement statementTop .)
    LESSTHAN        reduce using rule 17 (statement -> stringOpStatement statementTop .)
    LBRACK          reduce using rule 17 (statement -> stringOpStatement statementTop .)
    LCURLY          reduce using rule 17 (statement -> stringOpStatement statementTop .)
    LPAREN          reduce using rule 17 (statement -> stringOpStatement statementTop .)
    INT             reduce using rule 17 (statement -> stringOpStatement statementTop .)
    BOOLEAN         reduce using rule 17 (statement -> stringOpStatement statementTop .)
    FLOAT           reduce using rule 17 (statement -> stringOpStatement statementTop .)


state 93

    (90) ForLoop -> for LPAREN . AssignmentHead Condition Increment RPAREN Body
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON

    BAR             shift and go to state 177

    AssignmentHead                 shift and go to state 176

state 94

    (84) typecastToFloat -> TC_FLOAT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 178


state 95

    (78) validListUnionValues -> FLOATVALUE .

    COMMA           reduce using rule 78 (validListUnionValues -> FLOATVALUE .)
    RBRACK          reduce using rule 78 (validListUnionValues -> FLOATVALUE .)
    RCURLY          reduce using rule 78 (validListUnionValues -> FLOATVALUE .)
    RPAREN          reduce using rule 78 (validListUnionValues -> FLOATVALUE .)
    SEMICOLON       reduce using rule 78 (validListUnionValues -> FLOATVALUE .)


state 96

    (77) validListUnionValues -> CONSTANT .

    COMMA           reduce using rule 77 (validListUnionValues -> CONSTANT .)
    RBRACK          reduce using rule 77 (validListUnionValues -> CONSTANT .)
    RCURLY          reduce using rule 77 (validListUnionValues -> CONSTANT .)
    RPAREN          reduce using rule 77 (validListUnionValues -> CONSTANT .)
    SEMICOLON       reduce using rule 77 (validListUnionValues -> CONSTANT .)


state 97

    (67) listElem -> validListUnionValues .
    (68) listElem -> validListUnionValues . COMMA listElem

    RBRACK          reduce using rule 67 (listElem -> validListUnionValues .)
    COMMA           shift and go to state 179


state 98

    (80) validListUnionValues -> STRINGVALUE .

    COMMA           reduce using rule 80 (validListUnionValues -> STRINGVALUE .)
    RBRACK          reduce using rule 80 (validListUnionValues -> STRINGVALUE .)
    RCURLY          reduce using rule 80 (validListUnionValues -> STRINGVALUE .)
    RPAREN          reduce using rule 80 (validListUnionValues -> STRINGVALUE .)
    SEMICOLON       reduce using rule 80 (validListUnionValues -> STRINGVALUE .)


state 99

    (66) list -> LBRACK listElem . RBRACK

    RBRACK          shift and go to state 180


state 100

    (79) validListUnionValues -> booleanValue .

    COMMA           reduce using rule 79 (validListUnionValues -> booleanValue .)
    RBRACK          reduce using rule 79 (validListUnionValues -> booleanValue .)
    RCURLY          reduce using rule 79 (validListUnionValues -> booleanValue .)
    RPAREN          reduce using rule 79 (validListUnionValues -> booleanValue .)
    SEMICOLON       reduce using rule 79 (validListUnionValues -> booleanValue .)


state 101

    (69) listElem -> EMPTY .

    RBRACK          reduce using rule 69 (listElem -> EMPTY .)


state 102

    (132) ArithmeticExpression -> LESSTHAN Operand . ArithmeticOperator Operand GREATERTHAN
    (133) ArithmeticOperator -> . PLUS
    (134) ArithmeticOperator -> . MINUS
    (135) ArithmeticOperator -> . MULT
    (136) ArithmeticOperator -> . DIV
    (137) ArithmeticOperator -> . MOD

    PLUS            shift and go to state 181
    MINUS           shift and go to state 184
    MULT            shift and go to state 185
    DIV             shift and go to state 183
    MOD             shift and go to state 186

    ArithmeticOperator             shift and go to state 182

state 103

    (145) FunctionDefinition -> dataType Function . COLON Body

    COLON           shift and go to state 187


state 104

    (146) Function -> IDENTIFIER . LPAREN Parameter RPAREN

    LPAREN          shift and go to state 188


state 105

    (6) statement -> AssignmentHead statementTop .

    $end            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    END             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    READ            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    PRINT           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IF              reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BAR             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    WHILE           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    for             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    DO              reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IDENTIFIER      reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_INT          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_FLOAT        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    RETURN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LESSTHAN        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LBRACK          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LCURLY          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LPAREN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    INT             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BOOLEAN         reduce using rule 6 (statement -> AssignmentHead statementTop .)
    FLOAT           reduce using rule 6 (statement -> AssignmentHead statementTop .)


state 106

    (15) statement -> FunctionCall statementTop .

    $end            reduce using rule 15 (statement -> FunctionCall statementTop .)
    END             reduce using rule 15 (statement -> FunctionCall statementTop .)
    READ            reduce using rule 15 (statement -> FunctionCall statementTop .)
    PRINT           reduce using rule 15 (statement -> FunctionCall statementTop .)
    IF              reduce using rule 15 (statement -> FunctionCall statementTop .)
    BAR             reduce using rule 15 (statement -> FunctionCall statementTop .)
    WHILE           reduce using rule 15 (statement -> FunctionCall statementTop .)
    for             reduce using rule 15 (statement -> FunctionCall statementTop .)
    DO              reduce using rule 15 (statement -> FunctionCall statementTop .)
    IDENTIFIER      reduce using rule 15 (statement -> FunctionCall statementTop .)
    TC_INT          reduce using rule 15 (statement -> FunctionCall statementTop .)
    TC_FLOAT        reduce using rule 15 (statement -> FunctionCall statementTop .)
    RETURN          reduce using rule 15 (statement -> FunctionCall statementTop .)
    LESSTHAN        reduce using rule 15 (statement -> FunctionCall statementTop .)
    LBRACK          reduce using rule 15 (statement -> FunctionCall statementTop .)
    LCURLY          reduce using rule 15 (statement -> FunctionCall statementTop .)
    LPAREN          reduce using rule 15 (statement -> FunctionCall statementTop .)
    INT             reduce using rule 15 (statement -> FunctionCall statementTop .)
    BOOLEAN         reduce using rule 15 (statement -> FunctionCall statementTop .)
    FLOAT           reduce using rule 15 (statement -> FunctionCall statementTop .)


state 107

    (4) statement -> expression statementTop .

    $end            reduce using rule 4 (statement -> expression statementTop .)
    END             reduce using rule 4 (statement -> expression statementTop .)
    READ            reduce using rule 4 (statement -> expression statementTop .)
    PRINT           reduce using rule 4 (statement -> expression statementTop .)
    IF              reduce using rule 4 (statement -> expression statementTop .)
    BAR             reduce using rule 4 (statement -> expression statementTop .)
    WHILE           reduce using rule 4 (statement -> expression statementTop .)
    for             reduce using rule 4 (statement -> expression statementTop .)
    DO              reduce using rule 4 (statement -> expression statementTop .)
    IDENTIFIER      reduce using rule 4 (statement -> expression statementTop .)
    TC_INT          reduce using rule 4 (statement -> expression statementTop .)
    TC_FLOAT        reduce using rule 4 (statement -> expression statementTop .)
    RETURN          reduce using rule 4 (statement -> expression statementTop .)
    LESSTHAN        reduce using rule 4 (statement -> expression statementTop .)
    LBRACK          reduce using rule 4 (statement -> expression statementTop .)
    LCURLY          reduce using rule 4 (statement -> expression statementTop .)
    LPAREN          reduce using rule 4 (statement -> expression statementTop .)
    INT             reduce using rule 4 (statement -> expression statementTop .)
    BOOLEAN         reduce using rule 4 (statement -> expression statementTop .)
    FLOAT           reduce using rule 4 (statement -> expression statementTop .)


state 108

    (34) statement1 -> returnDec .

    END             reduce using rule 34 (statement1 -> returnDec .)
    READ            reduce using rule 34 (statement1 -> returnDec .)
    PRINT           reduce using rule 34 (statement1 -> returnDec .)
    IF              reduce using rule 34 (statement1 -> returnDec .)
    BAR             reduce using rule 34 (statement1 -> returnDec .)
    WHILE           reduce using rule 34 (statement1 -> returnDec .)
    for             reduce using rule 34 (statement1 -> returnDec .)
    DO              reduce using rule 34 (statement1 -> returnDec .)
    IDENTIFIER      reduce using rule 34 (statement1 -> returnDec .)
    TC_INT          reduce using rule 34 (statement1 -> returnDec .)
    TC_FLOAT        reduce using rule 34 (statement1 -> returnDec .)
    RETURN          reduce using rule 34 (statement1 -> returnDec .)
    LESSTHAN        reduce using rule 34 (statement1 -> returnDec .)
    LBRACK          reduce using rule 34 (statement1 -> returnDec .)
    LCURLY          reduce using rule 34 (statement1 -> returnDec .)
    LPAREN          reduce using rule 34 (statement1 -> returnDec .)
    INT             reduce using rule 34 (statement1 -> returnDec .)
    BOOLEAN         reduce using rule 34 (statement1 -> returnDec .)
    FLOAT           reduce using rule 34 (statement1 -> returnDec .)


state 109

    (37) statement1 -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 189


state 110

    (28) statement1 -> unionAdd .

    END             reduce using rule 28 (statement1 -> unionAdd .)
    READ            reduce using rule 28 (statement1 -> unionAdd .)
    PRINT           reduce using rule 28 (statement1 -> unionAdd .)
    IF              reduce using rule 28 (statement1 -> unionAdd .)
    BAR             reduce using rule 28 (statement1 -> unionAdd .)
    WHILE           reduce using rule 28 (statement1 -> unionAdd .)
    for             reduce using rule 28 (statement1 -> unionAdd .)
    DO              reduce using rule 28 (statement1 -> unionAdd .)
    IDENTIFIER      reduce using rule 28 (statement1 -> unionAdd .)
    TC_INT          reduce using rule 28 (statement1 -> unionAdd .)
    TC_FLOAT        reduce using rule 28 (statement1 -> unionAdd .)
    RETURN          reduce using rule 28 (statement1 -> unionAdd .)
    LESSTHAN        reduce using rule 28 (statement1 -> unionAdd .)
    LBRACK          reduce using rule 28 (statement1 -> unionAdd .)
    LCURLY          reduce using rule 28 (statement1 -> unionAdd .)
    LPAREN          reduce using rule 28 (statement1 -> unionAdd .)
    INT             reduce using rule 28 (statement1 -> unionAdd .)
    BOOLEAN         reduce using rule 28 (statement1 -> unionAdd .)
    FLOAT           reduce using rule 28 (statement1 -> unionAdd .)


state 111

    (36) statement1 -> listOpStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 190
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 112

    (29) statement1 -> unionKeys .

    END             reduce using rule 29 (statement1 -> unionKeys .)
    READ            reduce using rule 29 (statement1 -> unionKeys .)
    PRINT           reduce using rule 29 (statement1 -> unionKeys .)
    IF              reduce using rule 29 (statement1 -> unionKeys .)
    BAR             reduce using rule 29 (statement1 -> unionKeys .)
    WHILE           reduce using rule 29 (statement1 -> unionKeys .)
    for             reduce using rule 29 (statement1 -> unionKeys .)
    DO              reduce using rule 29 (statement1 -> unionKeys .)
    IDENTIFIER      reduce using rule 29 (statement1 -> unionKeys .)
    TC_INT          reduce using rule 29 (statement1 -> unionKeys .)
    TC_FLOAT        reduce using rule 29 (statement1 -> unionKeys .)
    RETURN          reduce using rule 29 (statement1 -> unionKeys .)
    LESSTHAN        reduce using rule 29 (statement1 -> unionKeys .)
    LBRACK          reduce using rule 29 (statement1 -> unionKeys .)
    LCURLY          reduce using rule 29 (statement1 -> unionKeys .)
    LPAREN          reduce using rule 29 (statement1 -> unionKeys .)
    INT             reduce using rule 29 (statement1 -> unionKeys .)
    BOOLEAN         reduce using rule 29 (statement1 -> unionKeys .)
    FLOAT           reduce using rule 29 (statement1 -> unionKeys .)


state 113

    (38) statement1 -> PRINT . LPAREN content RPAREN SEMICOLON

    LPAREN          shift and go to state 191


state 114

    (31) statement1 -> typecastToFloat .

    END             reduce using rule 31 (statement1 -> typecastToFloat .)
    READ            reduce using rule 31 (statement1 -> typecastToFloat .)
    PRINT           reduce using rule 31 (statement1 -> typecastToFloat .)
    IF              reduce using rule 31 (statement1 -> typecastToFloat .)
    BAR             reduce using rule 31 (statement1 -> typecastToFloat .)
    WHILE           reduce using rule 31 (statement1 -> typecastToFloat .)
    for             reduce using rule 31 (statement1 -> typecastToFloat .)
    DO              reduce using rule 31 (statement1 -> typecastToFloat .)
    IDENTIFIER      reduce using rule 31 (statement1 -> typecastToFloat .)
    TC_INT          reduce using rule 31 (statement1 -> typecastToFloat .)
    TC_FLOAT        reduce using rule 31 (statement1 -> typecastToFloat .)
    RETURN          reduce using rule 31 (statement1 -> typecastToFloat .)
    LESSTHAN        reduce using rule 31 (statement1 -> typecastToFloat .)
    LBRACK          reduce using rule 31 (statement1 -> typecastToFloat .)
    LCURLY          reduce using rule 31 (statement1 -> typecastToFloat .)
    LPAREN          reduce using rule 31 (statement1 -> typecastToFloat .)
    INT             reduce using rule 31 (statement1 -> typecastToFloat .)
    BOOLEAN         reduce using rule 31 (statement1 -> typecastToFloat .)
    FLOAT           reduce using rule 31 (statement1 -> typecastToFloat .)


state 115

    (91) DoWhileLoop -> DO COLON Body . WHILE Condition SEMICOLON

    WHILE           shift and go to state 192


state 116

    (23) statement1 -> IfThenElse .

    END             reduce using rule 23 (statement1 -> IfThenElse .)
    READ            reduce using rule 23 (statement1 -> IfThenElse .)
    PRINT           reduce using rule 23 (statement1 -> IfThenElse .)
    IF              reduce using rule 23 (statement1 -> IfThenElse .)
    BAR             reduce using rule 23 (statement1 -> IfThenElse .)
    WHILE           reduce using rule 23 (statement1 -> IfThenElse .)
    for             reduce using rule 23 (statement1 -> IfThenElse .)
    DO              reduce using rule 23 (statement1 -> IfThenElse .)
    IDENTIFIER      reduce using rule 23 (statement1 -> IfThenElse .)
    TC_INT          reduce using rule 23 (statement1 -> IfThenElse .)
    TC_FLOAT        reduce using rule 23 (statement1 -> IfThenElse .)
    RETURN          reduce using rule 23 (statement1 -> IfThenElse .)
    LESSTHAN        reduce using rule 23 (statement1 -> IfThenElse .)
    LBRACK          reduce using rule 23 (statement1 -> IfThenElse .)
    LCURLY          reduce using rule 23 (statement1 -> IfThenElse .)
    LPAREN          reduce using rule 23 (statement1 -> IfThenElse .)
    INT             reduce using rule 23 (statement1 -> IfThenElse .)
    BOOLEAN         reduce using rule 23 (statement1 -> IfThenElse .)
    FLOAT           reduce using rule 23 (statement1 -> IfThenElse .)


state 117

    (30) statement1 -> typeCastToInt .

    END             reduce using rule 30 (statement1 -> typeCastToInt .)
    READ            reduce using rule 30 (statement1 -> typeCastToInt .)
    PRINT           reduce using rule 30 (statement1 -> typeCastToInt .)
    IF              reduce using rule 30 (statement1 -> typeCastToInt .)
    BAR             reduce using rule 30 (statement1 -> typeCastToInt .)
    WHILE           reduce using rule 30 (statement1 -> typeCastToInt .)
    for             reduce using rule 30 (statement1 -> typeCastToInt .)
    DO              reduce using rule 30 (statement1 -> typeCastToInt .)
    IDENTIFIER      reduce using rule 30 (statement1 -> typeCastToInt .)
    TC_INT          reduce using rule 30 (statement1 -> typeCastToInt .)
    TC_FLOAT        reduce using rule 30 (statement1 -> typeCastToInt .)
    RETURN          reduce using rule 30 (statement1 -> typeCastToInt .)
    LESSTHAN        reduce using rule 30 (statement1 -> typeCastToInt .)
    LBRACK          reduce using rule 30 (statement1 -> typeCastToInt .)
    LCURLY          reduce using rule 30 (statement1 -> typeCastToInt .)
    LPAREN          reduce using rule 30 (statement1 -> typeCastToInt .)
    INT             reduce using rule 30 (statement1 -> typeCastToInt .)
    BOOLEAN         reduce using rule 30 (statement1 -> typeCastToInt .)
    FLOAT           reduce using rule 30 (statement1 -> typeCastToInt .)


state 118

    (27) statement1 -> DoWhileLoop .

    END             reduce using rule 27 (statement1 -> DoWhileLoop .)
    READ            reduce using rule 27 (statement1 -> DoWhileLoop .)
    PRINT           reduce using rule 27 (statement1 -> DoWhileLoop .)
    IF              reduce using rule 27 (statement1 -> DoWhileLoop .)
    BAR             reduce using rule 27 (statement1 -> DoWhileLoop .)
    WHILE           reduce using rule 27 (statement1 -> DoWhileLoop .)
    for             reduce using rule 27 (statement1 -> DoWhileLoop .)
    DO              reduce using rule 27 (statement1 -> DoWhileLoop .)
    IDENTIFIER      reduce using rule 27 (statement1 -> DoWhileLoop .)
    TC_INT          reduce using rule 27 (statement1 -> DoWhileLoop .)
    TC_FLOAT        reduce using rule 27 (statement1 -> DoWhileLoop .)
    RETURN          reduce using rule 27 (statement1 -> DoWhileLoop .)
    LESSTHAN        reduce using rule 27 (statement1 -> DoWhileLoop .)
    LBRACK          reduce using rule 27 (statement1 -> DoWhileLoop .)
    LCURLY          reduce using rule 27 (statement1 -> DoWhileLoop .)
    LPAREN          reduce using rule 27 (statement1 -> DoWhileLoop .)
    INT             reduce using rule 27 (statement1 -> DoWhileLoop .)
    BOOLEAN         reduce using rule 27 (statement1 -> DoWhileLoop .)
    FLOAT           reduce using rule 27 (statement1 -> DoWhileLoop .)


state 119

    (32) statement1 -> FunctionDefinition .

    END             reduce using rule 32 (statement1 -> FunctionDefinition .)
    READ            reduce using rule 32 (statement1 -> FunctionDefinition .)
    PRINT           reduce using rule 32 (statement1 -> FunctionDefinition .)
    IF              reduce using rule 32 (statement1 -> FunctionDefinition .)
    BAR             reduce using rule 32 (statement1 -> FunctionDefinition .)
    WHILE           reduce using rule 32 (statement1 -> FunctionDefinition .)
    for             reduce using rule 32 (statement1 -> FunctionDefinition .)
    DO              reduce using rule 32 (statement1 -> FunctionDefinition .)
    IDENTIFIER      reduce using rule 32 (statement1 -> FunctionDefinition .)
    TC_INT          reduce using rule 32 (statement1 -> FunctionDefinition .)
    TC_FLOAT        reduce using rule 32 (statement1 -> FunctionDefinition .)
    RETURN          reduce using rule 32 (statement1 -> FunctionDefinition .)
    LESSTHAN        reduce using rule 32 (statement1 -> FunctionDefinition .)
    LBRACK          reduce using rule 32 (statement1 -> FunctionDefinition .)
    LCURLY          reduce using rule 32 (statement1 -> FunctionDefinition .)
    LPAREN          reduce using rule 32 (statement1 -> FunctionDefinition .)
    INT             reduce using rule 32 (statement1 -> FunctionDefinition .)
    BOOLEAN         reduce using rule 32 (statement1 -> FunctionDefinition .)
    FLOAT           reduce using rule 32 (statement1 -> FunctionDefinition .)


state 120

    (88) statementMore -> END .

    END             reduce using rule 88 (statementMore -> END .)
    READ            reduce using rule 88 (statementMore -> END .)
    PRINT           reduce using rule 88 (statementMore -> END .)
    IF              reduce using rule 88 (statementMore -> END .)
    BAR             reduce using rule 88 (statementMore -> END .)
    WHILE           reduce using rule 88 (statementMore -> END .)
    for             reduce using rule 88 (statementMore -> END .)
    DO              reduce using rule 88 (statementMore -> END .)
    IDENTIFIER      reduce using rule 88 (statementMore -> END .)
    TC_INT          reduce using rule 88 (statementMore -> END .)
    TC_FLOAT        reduce using rule 88 (statementMore -> END .)
    RETURN          reduce using rule 88 (statementMore -> END .)
    LESSTHAN        reduce using rule 88 (statementMore -> END .)
    LBRACK          reduce using rule 88 (statementMore -> END .)
    LCURLY          reduce using rule 88 (statementMore -> END .)
    LPAREN          reduce using rule 88 (statementMore -> END .)
    INT             reduce using rule 88 (statementMore -> END .)
    BOOLEAN         reduce using rule 88 (statementMore -> END .)
    FLOAT           reduce using rule 88 (statementMore -> END .)
    FI              reduce using rule 88 (statementMore -> END .)
    ELSE            reduce using rule 88 (statementMore -> END .)
    ELIF            reduce using rule 88 (statementMore -> END .)


state 121

    (86) Body -> statementMore .

    FI              reduce using rule 86 (Body -> statementMore .)
    ELSE            reduce using rule 86 (Body -> statementMore .)
    ELIF            reduce using rule 86 (Body -> statementMore .)
    END             reduce using rule 86 (Body -> statementMore .)
    READ            reduce using rule 86 (Body -> statementMore .)
    PRINT           reduce using rule 86 (Body -> statementMore .)
    IF              reduce using rule 86 (Body -> statementMore .)
    BAR             reduce using rule 86 (Body -> statementMore .)
    WHILE           reduce using rule 86 (Body -> statementMore .)
    for             reduce using rule 86 (Body -> statementMore .)
    DO              reduce using rule 86 (Body -> statementMore .)
    IDENTIFIER      reduce using rule 86 (Body -> statementMore .)
    TC_INT          reduce using rule 86 (Body -> statementMore .)
    TC_FLOAT        reduce using rule 86 (Body -> statementMore .)
    RETURN          reduce using rule 86 (Body -> statementMore .)
    LESSTHAN        reduce using rule 86 (Body -> statementMore .)
    LBRACK          reduce using rule 86 (Body -> statementMore .)
    LCURLY          reduce using rule 86 (Body -> statementMore .)
    LPAREN          reduce using rule 86 (Body -> statementMore .)
    INT             reduce using rule 86 (Body -> statementMore .)
    BOOLEAN         reduce using rule 86 (Body -> statementMore .)
    FLOAT           reduce using rule 86 (Body -> statementMore .)


state 122

    (89) statementMoreCont -> statement1 . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    FunctionDefinition             shift and go to state 119
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 114
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    ForLoop                        shift and go to state 127
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 193
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    statementMoreCont              shift and go to state 124
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 123

    (21) statement1 -> declaration .

    END             reduce using rule 21 (statement1 -> declaration .)
    READ            reduce using rule 21 (statement1 -> declaration .)
    PRINT           reduce using rule 21 (statement1 -> declaration .)
    IF              reduce using rule 21 (statement1 -> declaration .)
    BAR             reduce using rule 21 (statement1 -> declaration .)
    WHILE           reduce using rule 21 (statement1 -> declaration .)
    for             reduce using rule 21 (statement1 -> declaration .)
    DO              reduce using rule 21 (statement1 -> declaration .)
    IDENTIFIER      reduce using rule 21 (statement1 -> declaration .)
    TC_INT          reduce using rule 21 (statement1 -> declaration .)
    TC_FLOAT        reduce using rule 21 (statement1 -> declaration .)
    RETURN          reduce using rule 21 (statement1 -> declaration .)
    LESSTHAN        reduce using rule 21 (statement1 -> declaration .)
    LBRACK          reduce using rule 21 (statement1 -> declaration .)
    LCURLY          reduce using rule 21 (statement1 -> declaration .)
    LPAREN          reduce using rule 21 (statement1 -> declaration .)
    INT             reduce using rule 21 (statement1 -> declaration .)
    BOOLEAN         reduce using rule 21 (statement1 -> declaration .)
    FLOAT           reduce using rule 21 (statement1 -> declaration .)


state 124

    (87) statementMore -> statementMoreCont .

    END             reduce using rule 87 (statementMore -> statementMoreCont .)
    READ            reduce using rule 87 (statementMore -> statementMoreCont .)
    PRINT           reduce using rule 87 (statementMore -> statementMoreCont .)
    IF              reduce using rule 87 (statementMore -> statementMoreCont .)
    BAR             reduce using rule 87 (statementMore -> statementMoreCont .)
    WHILE           reduce using rule 87 (statementMore -> statementMoreCont .)
    for             reduce using rule 87 (statementMore -> statementMoreCont .)
    DO              reduce using rule 87 (statementMore -> statementMoreCont .)
    IDENTIFIER      reduce using rule 87 (statementMore -> statementMoreCont .)
    TC_INT          reduce using rule 87 (statementMore -> statementMoreCont .)
    TC_FLOAT        reduce using rule 87 (statementMore -> statementMoreCont .)
    RETURN          reduce using rule 87 (statementMore -> statementMoreCont .)
    LESSTHAN        reduce using rule 87 (statementMore -> statementMoreCont .)
    LBRACK          reduce using rule 87 (statementMore -> statementMoreCont .)
    LCURLY          reduce using rule 87 (statementMore -> statementMoreCont .)
    LPAREN          reduce using rule 87 (statementMore -> statementMoreCont .)
    INT             reduce using rule 87 (statementMore -> statementMoreCont .)
    BOOLEAN         reduce using rule 87 (statementMore -> statementMoreCont .)
    FLOAT           reduce using rule 87 (statementMore -> statementMoreCont .)
    FI              reduce using rule 87 (statementMore -> statementMoreCont .)
    ELSE            reduce using rule 87 (statementMore -> statementMoreCont .)
    ELIF            reduce using rule 87 (statementMore -> statementMoreCont .)


state 125

    (25) statement1 -> WhileLoop .

    END             reduce using rule 25 (statement1 -> WhileLoop .)
    READ            reduce using rule 25 (statement1 -> WhileLoop .)
    PRINT           reduce using rule 25 (statement1 -> WhileLoop .)
    IF              reduce using rule 25 (statement1 -> WhileLoop .)
    BAR             reduce using rule 25 (statement1 -> WhileLoop .)
    WHILE           reduce using rule 25 (statement1 -> WhileLoop .)
    for             reduce using rule 25 (statement1 -> WhileLoop .)
    DO              reduce using rule 25 (statement1 -> WhileLoop .)
    IDENTIFIER      reduce using rule 25 (statement1 -> WhileLoop .)
    TC_INT          reduce using rule 25 (statement1 -> WhileLoop .)
    TC_FLOAT        reduce using rule 25 (statement1 -> WhileLoop .)
    RETURN          reduce using rule 25 (statement1 -> WhileLoop .)
    LESSTHAN        reduce using rule 25 (statement1 -> WhileLoop .)
    LBRACK          reduce using rule 25 (statement1 -> WhileLoop .)
    LCURLY          reduce using rule 25 (statement1 -> WhileLoop .)
    LPAREN          reduce using rule 25 (statement1 -> WhileLoop .)
    INT             reduce using rule 25 (statement1 -> WhileLoop .)
    BOOLEAN         reduce using rule 25 (statement1 -> WhileLoop .)
    FLOAT           reduce using rule 25 (statement1 -> WhileLoop .)


state 126

    (35) statement1 -> stringOpStatement .

    END             reduce using rule 35 (statement1 -> stringOpStatement .)
    READ            reduce using rule 35 (statement1 -> stringOpStatement .)
    PRINT           reduce using rule 35 (statement1 -> stringOpStatement .)
    IF              reduce using rule 35 (statement1 -> stringOpStatement .)
    BAR             reduce using rule 35 (statement1 -> stringOpStatement .)
    WHILE           reduce using rule 35 (statement1 -> stringOpStatement .)
    for             reduce using rule 35 (statement1 -> stringOpStatement .)
    DO              reduce using rule 35 (statement1 -> stringOpStatement .)
    IDENTIFIER      reduce using rule 35 (statement1 -> stringOpStatement .)
    TC_INT          reduce using rule 35 (statement1 -> stringOpStatement .)
    TC_FLOAT        reduce using rule 35 (statement1 -> stringOpStatement .)
    RETURN          reduce using rule 35 (statement1 -> stringOpStatement .)
    LESSTHAN        reduce using rule 35 (statement1 -> stringOpStatement .)
    LBRACK          reduce using rule 35 (statement1 -> stringOpStatement .)
    LCURLY          reduce using rule 35 (statement1 -> stringOpStatement .)
    LPAREN          reduce using rule 35 (statement1 -> stringOpStatement .)
    INT             reduce using rule 35 (statement1 -> stringOpStatement .)
    BOOLEAN         reduce using rule 35 (statement1 -> stringOpStatement .)
    FLOAT           reduce using rule 35 (statement1 -> stringOpStatement .)


state 127

    (26) statement1 -> ForLoop .

    END             reduce using rule 26 (statement1 -> ForLoop .)
    READ            reduce using rule 26 (statement1 -> ForLoop .)
    PRINT           reduce using rule 26 (statement1 -> ForLoop .)
    IF              reduce using rule 26 (statement1 -> ForLoop .)
    BAR             reduce using rule 26 (statement1 -> ForLoop .)
    WHILE           reduce using rule 26 (statement1 -> ForLoop .)
    for             reduce using rule 26 (statement1 -> ForLoop .)
    DO              reduce using rule 26 (statement1 -> ForLoop .)
    IDENTIFIER      reduce using rule 26 (statement1 -> ForLoop .)
    TC_INT          reduce using rule 26 (statement1 -> ForLoop .)
    TC_FLOAT        reduce using rule 26 (statement1 -> ForLoop .)
    RETURN          reduce using rule 26 (statement1 -> ForLoop .)
    LESSTHAN        reduce using rule 26 (statement1 -> ForLoop .)
    LBRACK          reduce using rule 26 (statement1 -> ForLoop .)
    LCURLY          reduce using rule 26 (statement1 -> ForLoop .)
    LPAREN          reduce using rule 26 (statement1 -> ForLoop .)
    INT             reduce using rule 26 (statement1 -> ForLoop .)
    BOOLEAN         reduce using rule 26 (statement1 -> ForLoop .)
    FLOAT           reduce using rule 26 (statement1 -> ForLoop .)


state 128

    (24) statement1 -> AssignmentHead .

    END             reduce using rule 24 (statement1 -> AssignmentHead .)
    READ            reduce using rule 24 (statement1 -> AssignmentHead .)
    PRINT           reduce using rule 24 (statement1 -> AssignmentHead .)
    IF              reduce using rule 24 (statement1 -> AssignmentHead .)
    BAR             reduce using rule 24 (statement1 -> AssignmentHead .)
    WHILE           reduce using rule 24 (statement1 -> AssignmentHead .)
    for             reduce using rule 24 (statement1 -> AssignmentHead .)
    DO              reduce using rule 24 (statement1 -> AssignmentHead .)
    IDENTIFIER      reduce using rule 24 (statement1 -> AssignmentHead .)
    TC_INT          reduce using rule 24 (statement1 -> AssignmentHead .)
    TC_FLOAT        reduce using rule 24 (statement1 -> AssignmentHead .)
    RETURN          reduce using rule 24 (statement1 -> AssignmentHead .)
    LESSTHAN        reduce using rule 24 (statement1 -> AssignmentHead .)
    LBRACK          reduce using rule 24 (statement1 -> AssignmentHead .)
    LCURLY          reduce using rule 24 (statement1 -> AssignmentHead .)
    LPAREN          reduce using rule 24 (statement1 -> AssignmentHead .)
    INT             reduce using rule 24 (statement1 -> AssignmentHead .)
    BOOLEAN         reduce using rule 24 (statement1 -> AssignmentHead .)
    FLOAT           reduce using rule 24 (statement1 -> AssignmentHead .)


state 129

    (33) statement1 -> FunctionCall .

    END             reduce using rule 33 (statement1 -> FunctionCall .)
    READ            reduce using rule 33 (statement1 -> FunctionCall .)
    PRINT           reduce using rule 33 (statement1 -> FunctionCall .)
    IF              reduce using rule 33 (statement1 -> FunctionCall .)
    BAR             reduce using rule 33 (statement1 -> FunctionCall .)
    WHILE           reduce using rule 33 (statement1 -> FunctionCall .)
    for             reduce using rule 33 (statement1 -> FunctionCall .)
    DO              reduce using rule 33 (statement1 -> FunctionCall .)
    IDENTIFIER      reduce using rule 33 (statement1 -> FunctionCall .)
    TC_INT          reduce using rule 33 (statement1 -> FunctionCall .)
    TC_FLOAT        reduce using rule 33 (statement1 -> FunctionCall .)
    RETURN          reduce using rule 33 (statement1 -> FunctionCall .)
    LESSTHAN        reduce using rule 33 (statement1 -> FunctionCall .)
    LBRACK          reduce using rule 33 (statement1 -> FunctionCall .)
    LCURLY          reduce using rule 33 (statement1 -> FunctionCall .)
    LPAREN          reduce using rule 33 (statement1 -> FunctionCall .)
    INT             reduce using rule 33 (statement1 -> FunctionCall .)
    BOOLEAN         reduce using rule 33 (statement1 -> FunctionCall .)
    FLOAT           reduce using rule 33 (statement1 -> FunctionCall .)


state 130

    (22) statement1 -> expression .

    END             reduce using rule 22 (statement1 -> expression .)
    READ            reduce using rule 22 (statement1 -> expression .)
    PRINT           reduce using rule 22 (statement1 -> expression .)
    IF              reduce using rule 22 (statement1 -> expression .)
    BAR             reduce using rule 22 (statement1 -> expression .)
    WHILE           reduce using rule 22 (statement1 -> expression .)
    for             reduce using rule 22 (statement1 -> expression .)
    DO              reduce using rule 22 (statement1 -> expression .)
    IDENTIFIER      reduce using rule 22 (statement1 -> expression .)
    TC_INT          reduce using rule 22 (statement1 -> expression .)
    TC_FLOAT        reduce using rule 22 (statement1 -> expression .)
    RETURN          reduce using rule 22 (statement1 -> expression .)
    LESSTHAN        reduce using rule 22 (statement1 -> expression .)
    LBRACK          reduce using rule 22 (statement1 -> expression .)
    LCURLY          reduce using rule 22 (statement1 -> expression .)
    LPAREN          reduce using rule 22 (statement1 -> expression .)
    INT             reduce using rule 22 (statement1 -> expression .)
    BOOLEAN         reduce using rule 22 (statement1 -> expression .)
    FLOAT           reduce using rule 22 (statement1 -> expression .)


state 131

    (48) identifierDeclaration -> BAR dataType IDENTIFIER . BAR SEMICOLON
    (49) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> BAR dataType IDENTIFIER . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 196
    LBRACK          shift and go to state 194
    EQUAL           shift and go to state 195


state 132

    (124) AssignmentOperator -> DIVEQUAL .

    CONSTANT        reduce using rule 124 (AssignmentOperator -> DIVEQUAL .)
    LESSTHAN        reduce using rule 124 (AssignmentOperator -> DIVEQUAL .)
    IDENTIFIER      reduce using rule 124 (AssignmentOperator -> DIVEQUAL .)
    TRUE            reduce using rule 124 (AssignmentOperator -> DIVEQUAL .)
    FALSE           reduce using rule 124 (AssignmentOperator -> DIVEQUAL .)


state 133

    (121) AssignmentOperator -> PLUSEQUAL .

    CONSTANT        reduce using rule 121 (AssignmentOperator -> PLUSEQUAL .)
    LESSTHAN        reduce using rule 121 (AssignmentOperator -> PLUSEQUAL .)
    IDENTIFIER      reduce using rule 121 (AssignmentOperator -> PLUSEQUAL .)
    TRUE            reduce using rule 121 (AssignmentOperator -> PLUSEQUAL .)
    FALSE           reduce using rule 121 (AssignmentOperator -> PLUSEQUAL .)


state 134

    (112) AssignmentHead -> BAR IDENTIFIER AssignmentOption . BAR SEMICOLON

    BAR             shift and go to state 197


state 135

    (114) AssignmentOption -> AssignmentOperator . AssignmentOptions2
    (115) AssignmentOptions2 -> . CONSTANT
    (116) AssignmentOptions2 -> . ArithmeticExpression
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN

    CONSTANT        shift and go to state 198
    LESSTHAN        shift and go to state 41

    ArithmeticExpression           shift and go to state 199
    AssignmentOptions2             shift and go to state 200

state 136

    (122) AssignmentOperator -> MINUSEQUAL .

    CONSTANT        reduce using rule 122 (AssignmentOperator -> MINUSEQUAL .)
    LESSTHAN        reduce using rule 122 (AssignmentOperator -> MINUSEQUAL .)
    IDENTIFIER      reduce using rule 122 (AssignmentOperator -> MINUSEQUAL .)
    TRUE            reduce using rule 122 (AssignmentOperator -> MINUSEQUAL .)
    FALSE           reduce using rule 122 (AssignmentOperator -> MINUSEQUAL .)


state 137

    (125) AssignmentOperator -> MODEQUAL .

    CONSTANT        reduce using rule 125 (AssignmentOperator -> MODEQUAL .)
    LESSTHAN        reduce using rule 125 (AssignmentOperator -> MODEQUAL .)
    IDENTIFIER      reduce using rule 125 (AssignmentOperator -> MODEQUAL .)
    TRUE            reduce using rule 125 (AssignmentOperator -> MODEQUAL .)
    FALSE           reduce using rule 125 (AssignmentOperator -> MODEQUAL .)


state 138

    (113) AssignmentOption -> EQUAL . AssignmentOptionChain
    (117) AssignmentOptionChain -> . listEval
    (118) AssignmentOptionChain -> . Function
    (119) AssignmentOptionChain -> . unionEval
    (120) AssignmentOptionChain -> . AssignmentOptions2
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (146) Function -> . IDENTIFIER LPAREN Parameter RPAREN
    (82) unionEval -> . IDENTIFIER ARROW STRING
    (115) AssignmentOptions2 -> . CONSTANT
    (116) AssignmentOptions2 -> . ArithmeticExpression
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN

    IDENTIFIER      shift and go to state 206
    CONSTANT        shift and go to state 198
    LESSTHAN        shift and go to state 41

    Function                       shift and go to state 201
    listEval                       shift and go to state 202
    AssignmentOptionChain          shift and go to state 203
    AssignmentOptions2             shift and go to state 204
    ArithmeticExpression           shift and go to state 199
    unionEval                      shift and go to state 205

state 139

    (123) AssignmentOperator -> MULTEQUAL .

    CONSTANT        reduce using rule 123 (AssignmentOperator -> MULTEQUAL .)
    LESSTHAN        reduce using rule 123 (AssignmentOperator -> MULTEQUAL .)
    IDENTIFIER      reduce using rule 123 (AssignmentOperator -> MULTEQUAL .)
    TRUE            reduce using rule 123 (AssignmentOperator -> MULTEQUAL .)
    FALSE           reduce using rule 123 (AssignmentOperator -> MULTEQUAL .)


state 140

    (19) statement -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 207


state 141

    (73) unionElement -> STRING EQUAL . validListUnionValues
    (74) unionElement -> STRING EQUAL . validListUnionValues COMMA unionElement
    (77) validListUnionValues -> . CONSTANT
    (78) validListUnionValues -> . FLOATVALUE
    (79) validListUnionValues -> . booleanValue
    (80) validListUnionValues -> . STRINGVALUE
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    CONSTANT        shift and go to state 96
    FLOATVALUE      shift and go to state 95
    STRINGVALUE     shift and go to state 98
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    booleanValue                   shift and go to state 100
    validListUnionValues           shift and go to state 208

state 142

    (72) union -> LCURLY unionElement RCURLY .

    END             reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    READ            reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    PRINT           reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    IF              reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    BAR             reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    WHILE           reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    for             reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    DO              reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    IDENTIFIER      reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    TC_INT          reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    TC_FLOAT        reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    RETURN          reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    LESSTHAN        reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    LBRACK          reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    LCURLY          reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    LPAREN          reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    INT             reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    BOOLEAN         reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    FLOAT           reduce using rule 72 (union -> LCURLY unionElement RCURLY .)
    SEMICOLON       reduce using rule 72 (union -> LCURLY unionElement RCURLY .)


state 143

    (103) Condition -> LPAREN NOT . Condition RPAREN
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 209

state 144

    (102) Condition -> LPAREN Condition . Compound Condition RPAREN
    (107) Compound -> . AND
    (108) Compound -> . OR

    AND             shift and go to state 210
    OR              shift and go to state 212

    Compound                       shift and go to state 211

state 145

    (85) WhileLoop -> WHILE Condition COLON . Body
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 213
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 146

    (44) toPrint -> IDENTIFIER .

    PLUS            reduce using rule 44 (toPrint -> IDENTIFIER .)
    EMPTY           reduce using rule 44 (toPrint -> IDENTIFIER .)


state 147

    (20) statement -> PRINT LPAREN content . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 214


state 148

    (43) toPrint -> CONSTANT .

    PLUS            reduce using rule 43 (toPrint -> CONSTANT .)
    EMPTY           reduce using rule 43 (toPrint -> CONSTANT .)


state 149

    (42) toPrint -> STRINGVALUE .

    PLUS            reduce using rule 42 (toPrint -> STRINGVALUE .)
    EMPTY           reduce using rule 42 (toPrint -> STRINGVALUE .)


state 150

    (39) content -> toPrint . morePrint
    (40) morePrint -> . PLUS toPrint morePrint
    (41) morePrint -> . EMPTY

    PLUS            shift and go to state 215
    EMPTY           shift and go to state 217

    morePrint                      shift and go to state 216

state 151

    (154) returnDec -> RETURN CONSTANT SEMICOLON .

    END             reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    READ            reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    PRINT           reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IF              reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BAR             reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    WHILE           reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    for             reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    DO              reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IDENTIFIER      reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_INT          reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_FLOAT        reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    RETURN          reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LESSTHAN        reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LBRACK          reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LCURLY          reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LPAREN          reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    INT             reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BOOLEAN         reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)
    FLOAT           reduce using rule 154 (returnDec -> RETURN CONSTANT SEMICOLON .)


state 152

    (155) returnDec -> RETURN IDENTIFIER SEMICOLON .

    END             reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    READ            reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    for             reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    DO              reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    INT             reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 155 (returnDec -> RETURN IDENTIFIER SEMICOLON .)


state 153

    (70) listEval -> IDENTIFIER LBRACK . CONSTANT RBRACK

    CONSTANT        shift and go to state 165


state 154

    (156) returnDec -> RETURN expression SEMICOLON .

    END             reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    READ            reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    IF              reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    BAR             reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    for             reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    DO              reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    TC_INT          reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    TC_FLOAT        reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    LESSTHAN        reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    LBRACK          reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    LCURLY          reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    INT             reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 156 (returnDec -> RETURN expression SEMICOLON .)


state 155

    (83) typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .

    END             reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    for             reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    DO              reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 83 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)


state 156

    (71) unionDec -> IDENTIFIER EQUAL union . SEMICOLON

    SEMICOLON       shift and go to state 218


state 157

    (65) listDec -> IDENTIFIER EQUAL list . SEMICOLON

    SEMICOLON       shift and go to state 219


state 158

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN . CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    CONSTANT        shift and go to state 220


state 159

    (55) stringOpStatement -> IDENTIFIER stringOp LPAREN . STRING RPAREN SEMICOLON
    (56) stringOpStatement -> IDENTIFIER stringOp LPAREN . IDENTIFIER RPAREN SEMICOLON

    STRING          shift and go to state 221
    IDENTIFIER      shift and go to state 222


state 160

    (58) listOpStatement -> IDENTIFIER POP LPAREN . listOpChoice RPAREN SEMICOLON
    (59) listOpChoice -> . CONSTANT
    (60) listOpChoice -> . EMPTY

    CONSTANT        shift and go to state 224
    EMPTY           shift and go to state 225

    listOpChoice                   shift and go to state 223

state 161

    (81) unionKeys -> IDENTIFIER KEYS SEMICOLON .

    END             reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    READ            reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    PRINT           reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    IF              reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    BAR             reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    WHILE           reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    for             reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    DO              reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    IDENTIFIER      reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    TC_INT          reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    TC_FLOAT        reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    RETURN          reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    LESSTHAN        reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    LBRACK          reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    LCURLY          reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    LPAREN          reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    INT             reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    BOOLEAN         reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)
    FLOAT           reduce using rule 81 (unionKeys -> IDENTIFIER KEYS SEMICOLON .)


state 162

    (150) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter . RPAREN SEMICOLON

    RPAREN          shift and go to state 226


state 163

    (151) FunctionCallParameter -> IDENTIFIER .
    (152) FunctionCallParameter -> IDENTIFIER . COMMA FunctionCallParameter

    RPAREN          reduce using rule 151 (FunctionCallParameter -> IDENTIFIER .)
    COMMA           shift and go to state 227


state 164

    (153) FunctionCallParameter -> EMPTY .

    RPAREN          reduce using rule 153 (FunctionCallParameter -> EMPTY .)


state 165

    (70) listEval -> IDENTIFIER LBRACK CONSTANT . RBRACK

    RBRACK          shift and go to state 228


state 166

    (76) unionAdd -> IDENTIFIER LBRACK STRINGVALUE . RBRACK EQUAL validListUnionValues SEMICOLON

    RBRACK          shift and go to state 229


state 167

    (144) RelationOperator -> NOTEQ .

    IDENTIFIER      reduce using rule 144 (RelationOperator -> NOTEQ .)
    CONSTANT        reduce using rule 144 (RelationOperator -> NOTEQ .)
    TRUE            reduce using rule 144 (RelationOperator -> NOTEQ .)
    FALSE           reduce using rule 144 (RelationOperator -> NOTEQ .)


state 168

    (143) RelationOperator -> LESSEREQ .

    IDENTIFIER      reduce using rule 143 (RelationOperator -> LESSEREQ .)
    CONSTANT        reduce using rule 143 (RelationOperator -> LESSEREQ .)
    TRUE            reduce using rule 143 (RelationOperator -> LESSEREQ .)
    FALSE           reduce using rule 143 (RelationOperator -> LESSEREQ .)


state 169

    (139) RelationOperator -> EQUAL .

    IDENTIFIER      reduce using rule 139 (RelationOperator -> EQUAL .)
    CONSTANT        reduce using rule 139 (RelationOperator -> EQUAL .)
    TRUE            reduce using rule 139 (RelationOperator -> EQUAL .)
    FALSE           reduce using rule 139 (RelationOperator -> EQUAL .)


state 170

    (142) RelationOperator -> GREATEREQ .

    IDENTIFIER      reduce using rule 142 (RelationOperator -> GREATEREQ .)
    CONSTANT        reduce using rule 142 (RelationOperator -> GREATEREQ .)
    TRUE            reduce using rule 142 (RelationOperator -> GREATEREQ .)
    FALSE           reduce using rule 142 (RelationOperator -> GREATEREQ .)


state 171

    (140) RelationOperator -> LESSTHAN .

    IDENTIFIER      reduce using rule 140 (RelationOperator -> LESSTHAN .)
    CONSTANT        reduce using rule 140 (RelationOperator -> LESSTHAN .)
    TRUE            reduce using rule 140 (RelationOperator -> LESSTHAN .)
    FALSE           reduce using rule 140 (RelationOperator -> LESSTHAN .)


state 172

    (141) RelationOperator -> GREATERTHAN .

    IDENTIFIER      reduce using rule 141 (RelationOperator -> GREATERTHAN .)
    CONSTANT        reduce using rule 141 (RelationOperator -> GREATERTHAN .)
    TRUE            reduce using rule 141 (RelationOperator -> GREATERTHAN .)
    FALSE           reduce using rule 141 (RelationOperator -> GREATERTHAN .)


state 173

    (138) RelationOperator -> EQUALEQUAL .

    IDENTIFIER      reduce using rule 138 (RelationOperator -> EQUALEQUAL .)
    CONSTANT        reduce using rule 138 (RelationOperator -> EQUALEQUAL .)
    TRUE            reduce using rule 138 (RelationOperator -> EQUALEQUAL .)
    FALSE           reduce using rule 138 (RelationOperator -> EQUALEQUAL .)


state 174

    (131) RelationExpression -> LPAREN Operand RelationOperator . Operand RPAREN
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 230
    booleanValue                   shift and go to state 81

state 175

    (95) IfThenElse -> IF Condition COLON . Body addElif
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 231
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 176

    (90) ForLoop -> for LPAREN AssignmentHead . Condition Increment RPAREN Body
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 232

state 177

    (112) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON

    IDENTIFIER      shift and go to state 50


state 178

    (84) typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .

    END             reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    for             reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    DO              reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 84 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)


state 179

    (68) listElem -> validListUnionValues COMMA . listElem
    (67) listElem -> . validListUnionValues
    (68) listElem -> . validListUnionValues COMMA listElem
    (69) listElem -> . EMPTY
    (77) validListUnionValues -> . CONSTANT
    (78) validListUnionValues -> . FLOATVALUE
    (79) validListUnionValues -> . booleanValue
    (80) validListUnionValues -> . STRINGVALUE
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    EMPTY           shift and go to state 101
    CONSTANT        shift and go to state 96
    FLOATVALUE      shift and go to state 95
    STRINGVALUE     shift and go to state 98
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    listElem                       shift and go to state 233
    booleanValue                   shift and go to state 100
    validListUnionValues           shift and go to state 97

state 180

    (66) list -> LBRACK listElem RBRACK .

    SEMICOLON       reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    END             reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    READ            reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    PRINT           reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    IF              reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    BAR             reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    WHILE           reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    for             reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    DO              reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    IDENTIFIER      reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    TC_INT          reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    TC_FLOAT        reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    RETURN          reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    LESSTHAN        reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    LBRACK          reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    LCURLY          reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    LPAREN          reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    INT             reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    BOOLEAN         reduce using rule 66 (list -> LBRACK listElem RBRACK .)
    FLOAT           reduce using rule 66 (list -> LBRACK listElem RBRACK .)


state 181

    (133) ArithmeticOperator -> PLUS .

    IDENTIFIER      reduce using rule 133 (ArithmeticOperator -> PLUS .)
    CONSTANT        reduce using rule 133 (ArithmeticOperator -> PLUS .)
    TRUE            reduce using rule 133 (ArithmeticOperator -> PLUS .)
    FALSE           reduce using rule 133 (ArithmeticOperator -> PLUS .)


state 182

    (132) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator . Operand GREATERTHAN
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 234
    booleanValue                   shift and go to state 81

state 183

    (136) ArithmeticOperator -> DIV .

    IDENTIFIER      reduce using rule 136 (ArithmeticOperator -> DIV .)
    CONSTANT        reduce using rule 136 (ArithmeticOperator -> DIV .)
    TRUE            reduce using rule 136 (ArithmeticOperator -> DIV .)
    FALSE           reduce using rule 136 (ArithmeticOperator -> DIV .)


state 184

    (134) ArithmeticOperator -> MINUS .

    IDENTIFIER      reduce using rule 134 (ArithmeticOperator -> MINUS .)
    CONSTANT        reduce using rule 134 (ArithmeticOperator -> MINUS .)
    TRUE            reduce using rule 134 (ArithmeticOperator -> MINUS .)
    FALSE           reduce using rule 134 (ArithmeticOperator -> MINUS .)


state 185

    (135) ArithmeticOperator -> MULT .

    IDENTIFIER      reduce using rule 135 (ArithmeticOperator -> MULT .)
    CONSTANT        reduce using rule 135 (ArithmeticOperator -> MULT .)
    TRUE            reduce using rule 135 (ArithmeticOperator -> MULT .)
    FALSE           reduce using rule 135 (ArithmeticOperator -> MULT .)


state 186

    (137) ArithmeticOperator -> MOD .

    IDENTIFIER      reduce using rule 137 (ArithmeticOperator -> MOD .)
    CONSTANT        reduce using rule 137 (ArithmeticOperator -> MOD .)
    TRUE            reduce using rule 137 (ArithmeticOperator -> MOD .)
    FALSE           reduce using rule 137 (ArithmeticOperator -> MOD .)


state 187

    (145) FunctionDefinition -> dataType Function COLON . Body
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    FunctionDefinition             shift and go to state 119
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 114
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    Body                           shift and go to state 235
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    statementMoreCont              shift and go to state 124
    ForLoop                        shift and go to state 127
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    WhileLoop                      shift and go to state 125
    expression                     shift and go to state 130

state 188

    (146) Function -> IDENTIFIER LPAREN . Parameter RPAREN
    (147) Parameter -> . dataType IDENTIFIER
    (148) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (149) Parameter -> . EMPTY
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    EMPTY           shift and go to state 238
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    dataType                       shift and go to state 236
    Parameter                      shift and go to state 237

state 189

    (37) statement1 -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 239


state 190

    (36) statement1 -> listOpStatement statementTop .

    END             reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    READ            reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    PRINT           reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    IF              reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    BAR             reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    WHILE           reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    for             reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    DO              reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    IDENTIFIER      reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    TC_INT          reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    TC_FLOAT        reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    RETURN          reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    LESSTHAN        reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    LBRACK          reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    LCURLY          reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    LPAREN          reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    INT             reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    BOOLEAN         reduce using rule 36 (statement1 -> listOpStatement statementTop .)
    FLOAT           reduce using rule 36 (statement1 -> listOpStatement statementTop .)


state 191

    (38) statement1 -> PRINT LPAREN . content RPAREN SEMICOLON
    (39) content -> . toPrint morePrint
    (42) toPrint -> . STRINGVALUE
    (43) toPrint -> . CONSTANT
    (44) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 149
    CONSTANT        shift and go to state 148
    IDENTIFIER      shift and go to state 146

    content                        shift and go to state 240
    toPrint                        shift and go to state 150

state 192

    (91) DoWhileLoop -> DO COLON Body WHILE . Condition SEMICOLON
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 241

state 193

    (89) statementMoreCont -> statement1 statementMore .

    END             reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    READ            reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    PRINT           reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    IF              reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    BAR             reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    WHILE           reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    for             reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    DO              reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    IDENTIFIER      reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    TC_INT          reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    TC_FLOAT        reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    RETURN          reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    LESSTHAN        reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    LBRACK          reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    LCURLY          reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    LPAREN          reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    INT             reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    BOOLEAN         reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    FLOAT           reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    FI              reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    ELSE            reduce using rule 89 (statementMoreCont -> statement1 statementMore .)
    ELIF            reduce using rule 89 (statementMoreCont -> statement1 statementMore .)


state 194

    (49) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK EQUAL expression BAR SEMICOLON

    CONSTANT        shift and go to state 242


state 195

    (51) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL . expression BAR SEMICOLON
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 41
    IDENTIFIER      shift and go to state 243
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28

    listEval                       shift and go to state 23
    list                           shift and go to state 39
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    union                          shift and go to state 17
    expression                     shift and go to state 244

state 196

    (48) identifierDeclaration -> BAR dataType IDENTIFIER BAR . SEMICOLON

    SEMICOLON       shift and go to state 245


state 197

    (112) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR . SEMICOLON

    SEMICOLON       shift and go to state 246


state 198

    (115) AssignmentOptions2 -> CONSTANT .

    BAR             reduce using rule 115 (AssignmentOptions2 -> CONSTANT .)


state 199

    (116) AssignmentOptions2 -> ArithmeticExpression .

    BAR             reduce using rule 116 (AssignmentOptions2 -> ArithmeticExpression .)


state 200

    (114) AssignmentOption -> AssignmentOperator AssignmentOptions2 .

    BAR             reduce using rule 114 (AssignmentOption -> AssignmentOperator AssignmentOptions2 .)


state 201

    (118) AssignmentOptionChain -> Function .

    BAR             reduce using rule 118 (AssignmentOptionChain -> Function .)


state 202

    (117) AssignmentOptionChain -> listEval .

    BAR             reduce using rule 117 (AssignmentOptionChain -> listEval .)


state 203

    (113) AssignmentOption -> EQUAL AssignmentOptionChain .

    BAR             reduce using rule 113 (AssignmentOption -> EQUAL AssignmentOptionChain .)


state 204

    (120) AssignmentOptionChain -> AssignmentOptions2 .

    BAR             reduce using rule 120 (AssignmentOptionChain -> AssignmentOptions2 .)


state 205

    (119) AssignmentOptionChain -> unionEval .

    BAR             reduce using rule 119 (AssignmentOptionChain -> unionEval .)


state 206

    (70) listEval -> IDENTIFIER . LBRACK CONSTANT RBRACK
    (146) Function -> IDENTIFIER . LPAREN Parameter RPAREN
    (82) unionEval -> IDENTIFIER . ARROW STRING

    LBRACK          shift and go to state 153
    LPAREN          shift and go to state 188
    ARROW           shift and go to state 247


state 207

    (19) statement -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 248


state 208

    (73) unionElement -> STRING EQUAL validListUnionValues .
    (74) unionElement -> STRING EQUAL validListUnionValues . COMMA unionElement

    RCURLY          reduce using rule 73 (unionElement -> STRING EQUAL validListUnionValues .)
    COMMA           shift and go to state 249


state 209

    (103) Condition -> LPAREN NOT Condition . RPAREN

    RPAREN          shift and go to state 250


state 210

    (107) Compound -> AND .

    LPAREN          reduce using rule 107 (Compound -> AND .)


state 211

    (102) Condition -> LPAREN Condition Compound . Condition RPAREN
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 251

state 212

    (108) Compound -> OR .

    LPAREN          reduce using rule 108 (Compound -> OR .)


state 213

    (85) WhileLoop -> WHILE Condition COLON Body .

    END             reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    READ            reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    PRINT           reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    IF              reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    BAR             reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    WHILE           reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    for             reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    DO              reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    IDENTIFIER      reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    TC_INT          reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    TC_FLOAT        reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    RETURN          reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    LESSTHAN        reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    LBRACK          reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    LCURLY          reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    LPAREN          reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    INT             reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    BOOLEAN         reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)
    FLOAT           reduce using rule 85 (WhileLoop -> WHILE Condition COLON Body .)


state 214

    (20) statement -> PRINT LPAREN content RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 252


state 215

    (40) morePrint -> PLUS . toPrint morePrint
    (42) toPrint -> . STRINGVALUE
    (43) toPrint -> . CONSTANT
    (44) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 149
    CONSTANT        shift and go to state 148
    IDENTIFIER      shift and go to state 146

    toPrint                        shift and go to state 253

state 216

    (39) content -> toPrint morePrint .

    RPAREN          reduce using rule 39 (content -> toPrint morePrint .)


state 217

    (41) morePrint -> EMPTY .

    RPAREN          reduce using rule 41 (morePrint -> EMPTY .)


state 218

    (71) unionDec -> IDENTIFIER EQUAL union SEMICOLON .

    END             reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    READ            reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    PRINT           reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    IF              reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    BAR             reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    WHILE           reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    for             reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    DO              reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    TC_INT          reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    TC_FLOAT        reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    RETURN          reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    LESSTHAN        reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    LBRACK          reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    LCURLY          reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    LPAREN          reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    INT             reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    BOOLEAN         reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)
    FLOAT           reduce using rule 71 (unionDec -> IDENTIFIER EQUAL union SEMICOLON .)


state 219

    (65) listDec -> IDENTIFIER EQUAL list SEMICOLON .

    END             reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    READ            reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    PRINT           reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    IF              reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    BAR             reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    WHILE           reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    for             reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    DO              reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    TC_INT          reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    TC_FLOAT        reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    RETURN          reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    LESSTHAN        reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    LBRACK          reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    LCURLY          reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    LPAREN          reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    INT             reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    BOOLEAN         reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)
    FLOAT           reduce using rule 65 (listDec -> IDENTIFIER EQUAL list SEMICOLON .)


state 220

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT . COMMA validListUnionValues RPAREN SEMICOLON

    COMMA           shift and go to state 254


state 221

    (55) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 255


state 222

    (56) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 256


state 223

    (58) listOpStatement -> IDENTIFIER POP LPAREN listOpChoice . RPAREN SEMICOLON

    RPAREN          shift and go to state 257


state 224

    (59) listOpChoice -> CONSTANT .

    RPAREN          reduce using rule 59 (listOpChoice -> CONSTANT .)


state 225

    (60) listOpChoice -> EMPTY .

    RPAREN          reduce using rule 60 (listOpChoice -> EMPTY .)


state 226

    (150) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 258


state 227

    (152) FunctionCallParameter -> IDENTIFIER COMMA . FunctionCallParameter
    (151) FunctionCallParameter -> . IDENTIFIER
    (152) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (153) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 163
    EMPTY           shift and go to state 164

    FunctionCallParameter          shift and go to state 259

state 228

    (70) listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .

    END             reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    READ            reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    PRINT           reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    IF              reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    BAR             reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    WHILE           reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    for             reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    DO              reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    IDENTIFIER      reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    TC_INT          reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    TC_FLOAT        reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    RETURN          reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    LESSTHAN        reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    LBRACK          reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    LCURLY          reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    LPAREN          reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    INT             reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    BOOLEAN         reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    FLOAT           reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)
    SEMICOLON       reduce using rule 70 (listEval -> IDENTIFIER LBRACK CONSTANT RBRACK .)


state 229

    (76) unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK . EQUAL validListUnionValues SEMICOLON

    EQUAL           shift and go to state 260


state 230

    (131) RelationExpression -> LPAREN Operand RelationOperator Operand . RPAREN

    RPAREN          shift and go to state 261


state 231

    (95) IfThenElse -> IF Condition COLON Body . addElif
    (96) addElif -> . addElif2
    (97) addElif -> . FI
    (98) addElif -> . ELSE COLON Body
    (99) addElif2 -> . elifClause addElif
    (100) elifClause -> . ELIF Condition COLON Body

    FI              shift and go to state 266
    ELSE            shift and go to state 264
    ELIF            shift and go to state 262

    addElif                        shift and go to state 263
    elifClause                     shift and go to state 267
    addElif2                       shift and go to state 265

state 232

    (90) ForLoop -> for LPAREN AssignmentHead Condition . Increment RPAREN Body
    (92) Increment -> . SEMICOLON Operand Options

    SEMICOLON       shift and go to state 268

    Increment                      shift and go to state 269

state 233

    (68) listElem -> validListUnionValues COMMA listElem .

    RBRACK          reduce using rule 68 (listElem -> validListUnionValues COMMA listElem .)


state 234

    (132) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand . GREATERTHAN

    GREATERTHAN     shift and go to state 270


state 235

    (145) FunctionDefinition -> dataType Function COLON Body .

    END             reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    READ            reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    PRINT           reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    IF              reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    BAR             reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    WHILE           reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    for             reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    DO              reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    IDENTIFIER      reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    TC_INT          reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    TC_FLOAT        reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    RETURN          reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    LESSTHAN        reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    LBRACK          reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    LCURLY          reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    LPAREN          reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    INT             reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    BOOLEAN         reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)
    FLOAT           reduce using rule 145 (FunctionDefinition -> dataType Function COLON Body .)


state 236

    (147) Parameter -> dataType . IDENTIFIER
    (148) Parameter -> dataType . IDENTIFIER COMMA Parameter

    IDENTIFIER      shift and go to state 271


state 237

    (146) Function -> IDENTIFIER LPAREN Parameter . RPAREN

    RPAREN          shift and go to state 272


state 238

    (149) Parameter -> EMPTY .

    RPAREN          reduce using rule 149 (Parameter -> EMPTY .)


state 239

    (37) statement1 -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 273


state 240

    (38) statement1 -> PRINT LPAREN content . RPAREN SEMICOLON

    RPAREN          shift and go to state 274


state 241

    (91) DoWhileLoop -> DO COLON Body WHILE Condition . SEMICOLON

    SEMICOLON       shift and go to state 275


state 242

    (49) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK EQUAL expression BAR SEMICOLON

    RBRACK          shift and go to state 276


state 243

    (70) listEval -> IDENTIFIER . LBRACK CONSTANT RBRACK

    LBRACK          shift and go to state 153


state 244

    (51) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 277


state 245

    (48) identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .

    END             reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    READ            reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    PRINT           reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IF              reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BAR             reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    WHILE           reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    for             reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    DO              reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_INT          reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    RETURN          reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LESSTHAN        reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LBRACK          reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LCURLY          reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LPAREN          reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    INT             reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BOOLEAN         reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    FLOAT           reduce using rule 48 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)


state 246

    (112) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .

    LPAREN          reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    END             reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    READ            reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    PRINT           reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IF              reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BAR             reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    WHILE           reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    for             reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    DO              reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_INT          reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    RETURN          reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LESSTHAN        reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LBRACK          reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LCURLY          reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    INT             reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BOOLEAN         reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    FLOAT           reduce using rule 112 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)


state 247

    (82) unionEval -> IDENTIFIER ARROW . STRING

    STRING          shift and go to state 278


state 248

    (19) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 279
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 249

    (74) unionElement -> STRING EQUAL validListUnionValues COMMA . unionElement
    (73) unionElement -> . STRING EQUAL validListUnionValues
    (74) unionElement -> . STRING EQUAL validListUnionValues COMMA unionElement
    (75) unionElement -> . EMPTY

    STRING          shift and go to state 53
    EMPTY           shift and go to state 55

    unionElement                   shift and go to state 280

state 250

    (103) Condition -> LPAREN NOT Condition RPAREN .

    COLON           reduce using rule 103 (Condition -> LPAREN NOT Condition RPAREN .)
    SEMICOLON       reduce using rule 103 (Condition -> LPAREN NOT Condition RPAREN .)
    RPAREN          reduce using rule 103 (Condition -> LPAREN NOT Condition RPAREN .)
    AND             reduce using rule 103 (Condition -> LPAREN NOT Condition RPAREN .)
    OR              reduce using rule 103 (Condition -> LPAREN NOT Condition RPAREN .)


state 251

    (102) Condition -> LPAREN Condition Compound Condition . RPAREN

    RPAREN          shift and go to state 281


state 252

    (20) statement -> PRINT LPAREN content RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . DoWhileLoop statementTop
    (10) statement -> . unionAdd statementTop
    (11) statement -> . unionKeys statementTop
    (12) statement -> . typeCastToInt statementTop
    (13) statement -> . typecastToFloat statementTop
    (14) statement -> . FunctionDefinition statementTop
    (15) statement -> . FunctionCall statementTop
    (16) statement -> . returnDec statementTop
    (17) statement -> . stringOpStatement statementTop
    (18) statement -> . listOpStatement statementTop
    (19) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (20) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 24
    READ            shift and go to state 5
    PRINT           shift and go to state 12
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    statementTop                   shift and go to state 282
    returnDec                      shift and go to state 3
    unionAdd                       shift and go to state 6
    listOpStatement                shift and go to state 9
    unionKeys                      shift and go to state 10
    listDec                        shift and go to state 11
    typecastToFloat                shift and go to state 15
    IfThenElse                     shift and go to state 16
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 19
    statement                      shift and go to state 20
    DoWhileLoop                    shift and go to state 33
    FunctionDefinition             shift and go to state 22
    listEval                       shift and go to state 23
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 29
    ForLoop                        shift and go to state 30
    WhileLoop                      shift and go to state 32
    stringOpStatement              shift and go to state 34
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 44
    FunctionCall                   shift and go to state 45
    expression                     shift and go to state 46

state 253

    (40) morePrint -> PLUS toPrint . morePrint
    (40) morePrint -> . PLUS toPrint morePrint
    (41) morePrint -> . EMPTY

    PLUS            shift and go to state 215
    EMPTY           shift and go to state 217

    morePrint                      shift and go to state 283

state 254

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA . validListUnionValues RPAREN SEMICOLON
    (77) validListUnionValues -> . CONSTANT
    (78) validListUnionValues -> . FLOATVALUE
    (79) validListUnionValues -> . booleanValue
    (80) validListUnionValues -> . STRINGVALUE
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    CONSTANT        shift and go to state 96
    FLOATVALUE      shift and go to state 95
    STRINGVALUE     shift and go to state 98
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    booleanValue                   shift and go to state 100
    validListUnionValues           shift and go to state 284

state 255

    (55) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 285


state 256

    (56) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 286


state 257

    (58) listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 287


state 258

    (150) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .

    END             reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    READ            reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    PRINT           reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IF              reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BAR             reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    WHILE           reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    for             reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    DO              reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_INT          reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    RETURN          reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LBRACK          reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LCURLY          reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LPAREN          reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    INT             reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    FLOAT           reduce using rule 150 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)


state 259

    (152) FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .

    RPAREN          reduce using rule 152 (FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .)


state 260

    (76) unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL . validListUnionValues SEMICOLON
    (77) validListUnionValues -> . CONSTANT
    (78) validListUnionValues -> . FLOATVALUE
    (79) validListUnionValues -> . booleanValue
    (80) validListUnionValues -> . STRINGVALUE
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    CONSTANT        shift and go to state 96
    FLOATVALUE      shift and go to state 95
    STRINGVALUE     shift and go to state 98
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    booleanValue                   shift and go to state 100
    validListUnionValues           shift and go to state 288

state 261

    (131) RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .

    END             reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    READ            reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    PRINT           reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IF              reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BAR             reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    WHILE           reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    for             reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    DO              reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IDENTIFIER      reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_INT          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_FLOAT        reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RETURN          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LESSTHAN        reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LBRACK          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LCURLY          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LPAREN          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    INT             reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BOOLEAN         reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    FLOAT           reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    AND             reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    OR              reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RPAREN          reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    COLON           reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    SEMICOLON       reduce using rule 131 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)


state 262

    (100) elifClause -> ELIF . Condition COLON Body
    (101) Condition -> . RelationExpression
    (102) Condition -> . LPAREN Condition Compound Condition RPAREN
    (103) Condition -> . LPAREN NOT Condition RPAREN
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 57

    RelationExpression             shift and go to state 56
    Condition                      shift and go to state 289

state 263

    (95) IfThenElse -> IF Condition COLON Body addElif .

    END             reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    READ            reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    PRINT           reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    IF              reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    BAR             reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    WHILE           reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    for             reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    DO              reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    IDENTIFIER      reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    TC_INT          reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    TC_FLOAT        reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    RETURN          reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    LESSTHAN        reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    LBRACK          reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    LCURLY          reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    LPAREN          reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    INT             reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    BOOLEAN         reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)
    FLOAT           reduce using rule 95 (IfThenElse -> IF Condition COLON Body addElif .)


state 264

    (98) addElif -> ELSE . COLON Body

    COLON           shift and go to state 290


state 265

    (96) addElif -> addElif2 .

    END             reduce using rule 96 (addElif -> addElif2 .)
    READ            reduce using rule 96 (addElif -> addElif2 .)
    PRINT           reduce using rule 96 (addElif -> addElif2 .)
    IF              reduce using rule 96 (addElif -> addElif2 .)
    BAR             reduce using rule 96 (addElif -> addElif2 .)
    WHILE           reduce using rule 96 (addElif -> addElif2 .)
    for             reduce using rule 96 (addElif -> addElif2 .)
    DO              reduce using rule 96 (addElif -> addElif2 .)
    IDENTIFIER      reduce using rule 96 (addElif -> addElif2 .)
    TC_INT          reduce using rule 96 (addElif -> addElif2 .)
    TC_FLOAT        reduce using rule 96 (addElif -> addElif2 .)
    RETURN          reduce using rule 96 (addElif -> addElif2 .)
    LESSTHAN        reduce using rule 96 (addElif -> addElif2 .)
    LBRACK          reduce using rule 96 (addElif -> addElif2 .)
    LCURLY          reduce using rule 96 (addElif -> addElif2 .)
    LPAREN          reduce using rule 96 (addElif -> addElif2 .)
    INT             reduce using rule 96 (addElif -> addElif2 .)
    BOOLEAN         reduce using rule 96 (addElif -> addElif2 .)
    FLOAT           reduce using rule 96 (addElif -> addElif2 .)


state 266

    (97) addElif -> FI .

    END             reduce using rule 97 (addElif -> FI .)
    READ            reduce using rule 97 (addElif -> FI .)
    PRINT           reduce using rule 97 (addElif -> FI .)
    IF              reduce using rule 97 (addElif -> FI .)
    BAR             reduce using rule 97 (addElif -> FI .)
    WHILE           reduce using rule 97 (addElif -> FI .)
    for             reduce using rule 97 (addElif -> FI .)
    DO              reduce using rule 97 (addElif -> FI .)
    IDENTIFIER      reduce using rule 97 (addElif -> FI .)
    TC_INT          reduce using rule 97 (addElif -> FI .)
    TC_FLOAT        reduce using rule 97 (addElif -> FI .)
    RETURN          reduce using rule 97 (addElif -> FI .)
    LESSTHAN        reduce using rule 97 (addElif -> FI .)
    LBRACK          reduce using rule 97 (addElif -> FI .)
    LCURLY          reduce using rule 97 (addElif -> FI .)
    LPAREN          reduce using rule 97 (addElif -> FI .)
    INT             reduce using rule 97 (addElif -> FI .)
    BOOLEAN         reduce using rule 97 (addElif -> FI .)
    FLOAT           reduce using rule 97 (addElif -> FI .)


state 267

    (99) addElif2 -> elifClause . addElif
    (96) addElif -> . addElif2
    (97) addElif -> . FI
    (98) addElif -> . ELSE COLON Body
    (99) addElif2 -> . elifClause addElif
    (100) elifClause -> . ELIF Condition COLON Body

    FI              shift and go to state 266
    ELSE            shift and go to state 264
    ELIF            shift and go to state 262

    addElif                        shift and go to state 291
    addElif2                       shift and go to state 265
    elifClause                     shift and go to state 267

state 268

    (92) Increment -> SEMICOLON . Operand Options
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 292
    booleanValue                   shift and go to state 81

state 269

    (90) ForLoop -> for LPAREN AssignmentHead Condition Increment . RPAREN Body

    RPAREN          shift and go to state 293


state 270

    (132) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .

    END             reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    READ            reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    PRINT           reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IF              reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BAR             reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    WHILE           reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    for             reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    DO              reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IDENTIFIER      reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_INT          reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_FLOAT        reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    RETURN          reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LESSTHAN        reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LBRACK          reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LCURLY          reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LPAREN          reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    INT             reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BOOLEAN         reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    FLOAT           reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    SEMICOLON       reduce using rule 132 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)


state 271

    (147) Parameter -> dataType IDENTIFIER .
    (148) Parameter -> dataType IDENTIFIER . COMMA Parameter

    RPAREN          reduce using rule 147 (Parameter -> dataType IDENTIFIER .)
    COMMA           shift and go to state 294


state 272

    (146) Function -> IDENTIFIER LPAREN Parameter RPAREN .

    COLON           reduce using rule 146 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)
    BAR             reduce using rule 146 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)


state 273

    (37) statement1 -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 295


state 274

    (38) statement1 -> PRINT LPAREN content RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 296


state 275

    (91) DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .

    END             reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    READ            reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    PRINT           reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    IF              reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    BAR             reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    WHILE           reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    for             reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    DO              reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    IDENTIFIER      reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    TC_INT          reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    TC_FLOAT        reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    RETURN          reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    LESSTHAN        reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    LBRACK          reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    LCURLY          reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    LPAREN          reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    INT             reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    BOOLEAN         reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)
    FLOAT           reduce using rule 91 (DoWhileLoop -> DO COLON Body WHILE Condition SEMICOLON .)


state 276

    (49) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . BAR SEMICOLON
    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 298
    EQUAL           shift and go to state 297


state 277

    (51) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 299


state 278

    (82) unionEval -> IDENTIFIER ARROW STRING .

    BAR             reduce using rule 82 (unionEval -> IDENTIFIER ARROW STRING .)


state 279

    (19) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .

    $end            reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    END             reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    for             reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    DO              reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LCURLY          reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 19 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)


state 280

    (74) unionElement -> STRING EQUAL validListUnionValues COMMA unionElement .

    RCURLY          reduce using rule 74 (unionElement -> STRING EQUAL validListUnionValues COMMA unionElement .)


state 281

    (102) Condition -> LPAREN Condition Compound Condition RPAREN .

    COLON           reduce using rule 102 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    SEMICOLON       reduce using rule 102 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    RPAREN          reduce using rule 102 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    AND             reduce using rule 102 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    OR              reduce using rule 102 (Condition -> LPAREN Condition Compound Condition RPAREN .)


state 282

    (20) statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .

    $end            reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    END             reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    for             reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    DO              reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LCURLY          reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 20 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)


state 283

    (40) morePrint -> PLUS toPrint morePrint .

    RPAREN          reduce using rule 40 (morePrint -> PLUS toPrint morePrint .)


state 284

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 300


state 285

    (55) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .

    END             reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    READ            reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IF              reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BAR             reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    for             reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    DO              reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_INT          reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LBRACK          reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LCURLY          reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    INT             reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 55 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)


state 286

    (56) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    DO              reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LCURLY          reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 56 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 287

    (58) listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .

    END             reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    READ            reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IF              reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BAR             reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    for             reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    DO              reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_INT          reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LBRACK          reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LCURLY          reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LPAREN          reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    INT             reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    FLOAT           reduce using rule 58 (listOpStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)


state 288

    (76) unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues . SEMICOLON

    SEMICOLON       shift and go to state 301


state 289

    (100) elifClause -> ELIF Condition . COLON Body

    COLON           shift and go to state 302


state 290

    (98) addElif -> ELSE COLON . Body
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 303
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 291

    (99) addElif2 -> elifClause addElif .

    END             reduce using rule 99 (addElif2 -> elifClause addElif .)
    READ            reduce using rule 99 (addElif2 -> elifClause addElif .)
    PRINT           reduce using rule 99 (addElif2 -> elifClause addElif .)
    IF              reduce using rule 99 (addElif2 -> elifClause addElif .)
    BAR             reduce using rule 99 (addElif2 -> elifClause addElif .)
    WHILE           reduce using rule 99 (addElif2 -> elifClause addElif .)
    for             reduce using rule 99 (addElif2 -> elifClause addElif .)
    DO              reduce using rule 99 (addElif2 -> elifClause addElif .)
    IDENTIFIER      reduce using rule 99 (addElif2 -> elifClause addElif .)
    TC_INT          reduce using rule 99 (addElif2 -> elifClause addElif .)
    TC_FLOAT        reduce using rule 99 (addElif2 -> elifClause addElif .)
    RETURN          reduce using rule 99 (addElif2 -> elifClause addElif .)
    LESSTHAN        reduce using rule 99 (addElif2 -> elifClause addElif .)
    LBRACK          reduce using rule 99 (addElif2 -> elifClause addElif .)
    LCURLY          reduce using rule 99 (addElif2 -> elifClause addElif .)
    LPAREN          reduce using rule 99 (addElif2 -> elifClause addElif .)
    INT             reduce using rule 99 (addElif2 -> elifClause addElif .)
    BOOLEAN         reduce using rule 99 (addElif2 -> elifClause addElif .)
    FLOAT           reduce using rule 99 (addElif2 -> elifClause addElif .)


state 292

    (92) Increment -> SEMICOLON Operand . Options
    (93) Options -> . Iterator
    (94) Options -> . AssignmentOperator Operand
    (109) Iterator -> . PLUSPLUS
    (110) Iterator -> . MINUSMINUS
    (111) Iterator -> . EMPTY
    (121) AssignmentOperator -> . PLUSEQUAL
    (122) AssignmentOperator -> . MINUSEQUAL
    (123) AssignmentOperator -> . MULTEQUAL
    (124) AssignmentOperator -> . DIVEQUAL
    (125) AssignmentOperator -> . MODEQUAL

    PLUSPLUS        shift and go to state 305
    MINUSMINUS      shift and go to state 307
    EMPTY           shift and go to state 309
    PLUSEQUAL       shift and go to state 133
    MINUSEQUAL      shift and go to state 136
    MULTEQUAL       shift and go to state 139
    DIVEQUAL        shift and go to state 132
    MODEQUAL        shift and go to state 137

    AssignmentOperator             shift and go to state 306
    Options                        shift and go to state 308
    Iterator                       shift and go to state 304

state 293

    (90) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN . Body
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 310
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 294

    (148) Parameter -> dataType IDENTIFIER COMMA . Parameter
    (147) Parameter -> . dataType IDENTIFIER
    (148) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (149) Parameter -> . EMPTY
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    EMPTY           shift and go to state 238
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    dataType                       shift and go to state 236
    Parameter                      shift and go to state 311

state 295

    (37) statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    DO              reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LCURLY          reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 37 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 296

    (38) statement1 -> PRINT LPAREN content RPAREN SEMICOLON .

    END             reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    READ            reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    PRINT           reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IF              reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BAR             reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    for             reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    DO              reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_INT          reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LBRACK          reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LCURLY          reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LPAREN          reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    INT             reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    FLOAT           reduce using rule 38 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)


state 297

    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL . expression BAR SEMICOLON
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 41
    IDENTIFIER      shift and go to state 243
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28

    listEval                       shift and go to state 23
    list                           shift and go to state 39
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    union                          shift and go to state 17
    expression                     shift and go to state 312

state 298

    (49) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR . SEMICOLON

    SEMICOLON       shift and go to state 313


state 299

    (51) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .

    END             reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    DO              reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LCURLY          reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 51 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)


state 300

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 314


state 301

    (76) unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .

    END             reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    READ            reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    PRINT           reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    IF              reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    BAR             reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    WHILE           reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    for             reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    DO              reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    IDENTIFIER      reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    TC_INT          reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    TC_FLOAT        reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    RETURN          reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    LESSTHAN        reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    LBRACK          reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    LCURLY          reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    LPAREN          reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    INT             reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    BOOLEAN         reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)
    FLOAT           reduce using rule 76 (unionAdd -> IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON .)


state 302

    (100) elifClause -> ELIF Condition COLON . Body
    (86) Body -> . statementMore
    (87) statementMore -> . statementMoreCont
    (88) statementMore -> . END
    (89) statementMoreCont -> . statement1 statementMore
    (21) statement1 -> . declaration
    (22) statement1 -> . expression
    (23) statement1 -> . IfThenElse
    (24) statement1 -> . AssignmentHead
    (25) statement1 -> . WhileLoop
    (26) statement1 -> . ForLoop
    (27) statement1 -> . DoWhileLoop
    (28) statement1 -> . unionAdd
    (29) statement1 -> . unionKeys
    (30) statement1 -> . typeCastToInt
    (31) statement1 -> . typecastToFloat
    (32) statement1 -> . FunctionDefinition
    (33) statement1 -> . FunctionCall
    (34) statement1 -> . returnDec
    (35) statement1 -> . stringOpStatement
    (36) statement1 -> . listOpStatement statementTop
    (37) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (38) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (45) declaration -> . identifierDeclaration
    (46) declaration -> . listDec
    (47) declaration -> . unionDec
    (126) expression -> . ArithmeticExpression
    (127) expression -> . listEval
    (128) expression -> . list
    (129) expression -> . union
    (130) expression -> . RelationExpression
    (95) IfThenElse -> . IF Condition COLON Body addElif
    (112) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (85) WhileLoop -> . WHILE Condition COLON Body
    (90) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (91) DoWhileLoop -> . DO COLON Body WHILE Condition SEMICOLON
    (76) unionAdd -> . IDENTIFIER LBRACK STRINGVALUE RBRACK EQUAL validListUnionValues SEMICOLON
    (81) unionKeys -> . IDENTIFIER KEYS SEMICOLON
    (83) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (84) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (145) FunctionDefinition -> . dataType Function COLON Body
    (150) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (154) returnDec -> . RETURN CONSTANT SEMICOLON
    (155) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (156) returnDec -> . RETURN expression SEMICOLON
    (55) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (56) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (57) listOpStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (58) listOpStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (48) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (49) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (50) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (51) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (65) listDec -> . IDENTIFIER EQUAL list SEMICOLON
    (71) unionDec -> . IDENTIFIER EQUAL union SEMICOLON
    (132) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (70) listEval -> . IDENTIFIER LBRACK CONSTANT RBRACK
    (66) list -> . LBRACK listElem RBRACK
    (72) union -> . LCURLY unionElement RCURLY
    (131) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (52) dataType -> . INT
    (53) dataType -> . BOOLEAN
    (54) dataType -> . FLOAT

    END             shift and go to state 120
    READ            shift and go to state 109
    PRINT           shift and go to state 113
    IF              shift and go to state 31
    BAR             shift and go to state 4
    WHILE           shift and go to state 8
    for             shift and go to state 35
    DO              shift and go to state 2
    IDENTIFIER      shift and go to state 21
    TC_INT          shift and go to state 14
    TC_FLOAT        shift and go to state 37
    RETURN          shift and go to state 13
    LESSTHAN        shift and go to state 41
    LBRACK          shift and go to state 40
    LCURLY          shift and go to state 7
    LPAREN          shift and go to state 28
    INT             shift and go to state 36
    BOOLEAN         shift and go to state 18
    FLOAT           shift and go to state 38

    returnDec                      shift and go to state 108
    listDec                        shift and go to state 11
    unionAdd                       shift and go to state 110
    listOpStatement                shift and go to state 111
    unionKeys                      shift and go to state 112
    statementMoreCont              shift and go to state 124
    typecastToFloat                shift and go to state 114
    Body                           shift and go to state 315
    IfThenElse                     shift and go to state 116
    union                          shift and go to state 17
    typeCastToInt                  shift and go to state 117
    DoWhileLoop                    shift and go to state 118
    FunctionDefinition             shift and go to state 119
    listEval                       shift and go to state 23
    statementMore                  shift and go to state 121
    statement1                     shift and go to state 122
    dataType                       shift and go to state 43
    ArithmeticExpression           shift and go to state 25
    RelationExpression             shift and go to state 26
    identifierDeclaration          shift and go to state 27
    declaration                    shift and go to state 123
    ForLoop                        shift and go to state 127
    WhileLoop                      shift and go to state 125
    stringOpStatement              shift and go to state 126
    list                           shift and go to state 39
    unionDec                       shift and go to state 42
    AssignmentHead                 shift and go to state 128
    FunctionCall                   shift and go to state 129
    expression                     shift and go to state 130

state 303

    (98) addElif -> ELSE COLON Body .

    END             reduce using rule 98 (addElif -> ELSE COLON Body .)
    READ            reduce using rule 98 (addElif -> ELSE COLON Body .)
    PRINT           reduce using rule 98 (addElif -> ELSE COLON Body .)
    IF              reduce using rule 98 (addElif -> ELSE COLON Body .)
    BAR             reduce using rule 98 (addElif -> ELSE COLON Body .)
    WHILE           reduce using rule 98 (addElif -> ELSE COLON Body .)
    for             reduce using rule 98 (addElif -> ELSE COLON Body .)
    DO              reduce using rule 98 (addElif -> ELSE COLON Body .)
    IDENTIFIER      reduce using rule 98 (addElif -> ELSE COLON Body .)
    TC_INT          reduce using rule 98 (addElif -> ELSE COLON Body .)
    TC_FLOAT        reduce using rule 98 (addElif -> ELSE COLON Body .)
    RETURN          reduce using rule 98 (addElif -> ELSE COLON Body .)
    LESSTHAN        reduce using rule 98 (addElif -> ELSE COLON Body .)
    LBRACK          reduce using rule 98 (addElif -> ELSE COLON Body .)
    LCURLY          reduce using rule 98 (addElif -> ELSE COLON Body .)
    LPAREN          reduce using rule 98 (addElif -> ELSE COLON Body .)
    INT             reduce using rule 98 (addElif -> ELSE COLON Body .)
    BOOLEAN         reduce using rule 98 (addElif -> ELSE COLON Body .)
    FLOAT           reduce using rule 98 (addElif -> ELSE COLON Body .)


state 304

    (93) Options -> Iterator .

    RPAREN          reduce using rule 93 (Options -> Iterator .)


state 305

    (109) Iterator -> PLUSPLUS .

    RPAREN          reduce using rule 109 (Iterator -> PLUSPLUS .)


state 306

    (94) Options -> AssignmentOperator . Operand
    (104) Operand -> . IDENTIFIER
    (105) Operand -> . CONSTANT
    (106) Operand -> . booleanValue
    (157) booleanValue -> . TRUE
    (158) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 86
    CONSTANT        shift and go to state 85
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    Operand                        shift and go to state 316
    booleanValue                   shift and go to state 81

state 307

    (110) Iterator -> MINUSMINUS .

    RPAREN          reduce using rule 110 (Iterator -> MINUSMINUS .)


state 308

    (92) Increment -> SEMICOLON Operand Options .

    RPAREN          reduce using rule 92 (Increment -> SEMICOLON Operand Options .)


state 309

    (111) Iterator -> EMPTY .

    RPAREN          reduce using rule 111 (Iterator -> EMPTY .)


state 310

    (90) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .

    END             reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    READ            reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    PRINT           reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IF              reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BAR             reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    WHILE           reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    for             reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    DO              reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IDENTIFIER      reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_INT          reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_FLOAT        reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    RETURN          reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LESSTHAN        reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LBRACK          reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LCURLY          reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LPAREN          reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    INT             reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BOOLEAN         reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    FLOAT           reduce using rule 90 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)


state 311

    (148) Parameter -> dataType IDENTIFIER COMMA Parameter .

    RPAREN          reduce using rule 148 (Parameter -> dataType IDENTIFIER COMMA Parameter .)


state 312

    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 317


state 313

    (49) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .

    END             reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    READ            reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    PRINT           reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IF              reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BAR             reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    WHILE           reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    for             reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    DO              reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_INT          reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    RETURN          reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LESSTHAN        reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LBRACK          reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LCURLY          reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LPAREN          reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    INT             reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BOOLEAN         reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    FLOAT           reduce using rule 49 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)


state 314

    (57) listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .

    END             reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    READ            reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IF              reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BAR             reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    for             reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    DO              reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_INT          reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LBRACK          reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LCURLY          reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LPAREN          reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    INT             reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    FLOAT           reduce using rule 57 (listOpStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)


state 315

    (100) elifClause -> ELIF Condition COLON Body .

    FI              reduce using rule 100 (elifClause -> ELIF Condition COLON Body .)
    ELSE            reduce using rule 100 (elifClause -> ELIF Condition COLON Body .)
    ELIF            reduce using rule 100 (elifClause -> ELIF Condition COLON Body .)


state 316

    (94) Options -> AssignmentOperator Operand .

    RPAREN          reduce using rule 94 (Options -> AssignmentOperator Operand .)


state 317

    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 318


state 318

    (50) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .

    END             reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    DO              reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LCURLY          reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 50 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)

