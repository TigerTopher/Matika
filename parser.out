Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    COMMENT
    QUOTE
    ARROW
    KEYS

Grammar

Rule 0     S' -> statementTop
Rule 1     statementTop -> END
Rule 2     statementTop -> statement
Rule 3     statement -> declaration statementTop
Rule 4     statement -> expression statementTop
Rule 5     statement -> IfThenElse statementTop
Rule 6     statement -> AssignmentHead statementTop
Rule 7     statement -> WhileLoop statementTop
Rule 8     statement -> ForLoop statementTop
Rule 9     statement -> typeCastToInt statementTop
Rule 10    statement -> typecastToFloat statementTop
Rule 11    statement -> FunctionDefinition statementTop
Rule 12    statement -> FunctionCall statementTop
Rule 13    statement -> returnDec statementTop
Rule 14    statement -> stringOpStatement statementTop
Rule 15    statement -> listOPStatement statementTop
Rule 16    statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
Rule 17    statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop
Rule 18    statement1 -> declaration
Rule 19    statement1 -> expression
Rule 20    statement1 -> IfThenElse
Rule 21    statement1 -> AssignmentHead
Rule 22    statement1 -> WhileLoop
Rule 23    statement1 -> ForLoop
Rule 24    statement1 -> typeCastToInt
Rule 25    statement1 -> typecastToFloat
Rule 26    statement1 -> FunctionDefinition
Rule 27    statement1 -> FunctionCall
Rule 28    statement1 -> returnDec
Rule 29    statement1 -> stringOpStatement
Rule 30    statement1 -> listOPStatement statementTop
Rule 31    statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 32    statement1 -> PRINT LPAREN content RPAREN SEMICOLON
Rule 33    content -> toPrint morePrint
Rule 34    morePrint -> PLUS toPrint morePrint
Rule 35    morePrint -> EMPTY
Rule 36    toPrint -> STRINGVALUE
Rule 37    toPrint -> CONSTANT
Rule 38    toPrint -> IDENTIFIER
Rule 39    declaration -> identifierDeclaration
Rule 40    declaration -> listDec
Rule 41    identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON
Rule 42    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
Rule 43    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
Rule 44    identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
Rule 45    dataType -> INT
Rule 46    dataType -> BOOLEAN
Rule 47    dataType -> FLOAT
Rule 48    stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
Rule 49    stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 50    listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
Rule 51    listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
Rule 52    listOpChoice -> CONSTANT
Rule 53    listOpChoice -> EMPTY
Rule 54    stringOp -> SPLIT
Rule 55    stringOp -> STRIP
Rule 56    stringOp -> CONCAT
Rule 57    stringOp -> COPY
Rule 58    listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON
Rule 59    list -> LBRACK listElem RBRACK
Rule 60    listElem -> validListUnionValues
Rule 61    listElem -> validListUnionValues COMMA listElem
Rule 62    listElem -> EMPTY
Rule 63    listEval -> IDENTIFIER LISTVALUE
Rule 64    unionDec -> IDENTIFIER EQUAL union SEMICOLON
Rule 65    union -> LCURLY unionElement RCURLY
Rule 66    unionElement -> STRING EQUAL validListUnionValues
Rule 67    unionElement -> STRING EQUAL validListUnionValues COMMA unionElement
Rule 68    unionElement -> EMPTY
Rule 69    validListUnionValues -> CONSTANT
Rule 70    validListUnionValues -> FLOATVALUE
Rule 71    validListUnionValues -> booleanValue
Rule 72    validListUnionValues -> STRINGVALUE
Rule 73    validListUnionValues -> LISTVALUE
Rule 74    typeCastToInt -> TC_INT IDENTIFIER SEMICOLON
Rule 75    typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON
Rule 76    WhileLoop -> WHILE Condition COLON Body
Rule 77    Body -> statementMore
Rule 78    statementMore -> statementMoreCont
Rule 79    statementMore -> END
Rule 80    statementMoreCont -> statement1 statementMore
Rule 81    ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body
Rule 82    Increment -> SEMICOLON Operand Options
Rule 83    Options -> Iterator
Rule 84    Options -> AssignmentOperator Operand
Rule 85    IfThenElse -> IF Condition Body addElif
Rule 86    addElif -> addElif2
Rule 87    addElif -> FI
Rule 88    addElif -> ELSE Body
Rule 89    addElif2 -> elifClause addElif
Rule 90    elifClause -> ELIF Condition Body
Rule 91    Condition -> RelationExpression
Rule 92    Condition -> LPAREN Condition Compound Condition RPAREN
Rule 93    Condition -> LPAREN NOT Condition RPAREN
Rule 94    Operand -> IDENTIFIER
Rule 95    Operand -> CONSTANT
Rule 96    Operand -> booleanValue
Rule 97    Operand -> LISTVALUE
Rule 98    Compound -> AND
Rule 99    Compound -> OR
Rule 100   Iterator -> PLUSPLUS
Rule 101   Iterator -> MINUSMINUS
Rule 102   Iterator -> EMPTY
Rule 103   AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON
Rule 104   AssignmentOption -> EQUAL AssignmentOptionChain
Rule 105   AssignmentOption -> AssignmentOperator AssignmentOptions2
Rule 106   AssignmentOptions2 -> CONSTANT
Rule 107   AssignmentOptions2 -> ArithmeticExpression
Rule 108   AssignmentOptionChain -> listEval
Rule 109   AssignmentOptionChain -> IDENTIFIER
Rule 110   AssignmentOptionChain -> Function
Rule 111   AssignmentOptionChain -> AssignmentOptions2
Rule 112   AssignmentOperator -> PLUSEQUAL
Rule 113   AssignmentOperator -> MINUSEQUAL
Rule 114   AssignmentOperator -> MULTEQUAL
Rule 115   AssignmentOperator -> DIVEQUAL
Rule 116   AssignmentOperator -> MODEQUAL
Rule 117   expression -> ArithmeticExpression
Rule 118   expression -> listEval
Rule 119   expression -> list
Rule 120   expression -> union
Rule 121   expression -> RelationExpression
Rule 122   RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN
Rule 123   ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
Rule 124   ArithmeticOperator -> PLUS
Rule 125   ArithmeticOperator -> MINUS
Rule 126   ArithmeticOperator -> MULT
Rule 127   ArithmeticOperator -> DIV
Rule 128   ArithmeticOperator -> MOD
Rule 129   RelationOperator -> EQUALEQUAL
Rule 130   RelationOperator -> EQUAL
Rule 131   RelationOperator -> LESSTHAN
Rule 132   RelationOperator -> GREATERTHAN
Rule 133   RelationOperator -> GREATEREQ
Rule 134   RelationOperator -> LESSEREQ
Rule 135   RelationOperator -> NOTEQ
Rule 136   FunctionDefinition -> dataType Function COLON Body
Rule 137   Function -> IDENTIFIER LPAREN Parameter RPAREN
Rule 138   Parameter -> dataType IDENTIFIER
Rule 139   Parameter -> dataType IDENTIFIER COMMA Parameter
Rule 140   Parameter -> EMPTY
Rule 141   FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
Rule 142   FunctionCallParameter -> IDENTIFIER
Rule 143   FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter
Rule 144   FunctionCallParameter -> EMPTY
Rule 145   returnDec -> RETURN CONSTANT SEMICOLON
Rule 146   returnDec -> RETURN IDENTIFIER SEMICOLON
Rule 147   returnDec -> RETURN expression SEMICOLON
Rule 148   returnDec -> RETURN SEMICOLON
Rule 149   booleanValue -> TRUE
Rule 150   booleanValue -> FALSE

Terminals, with rules where they appear

AND                  : 98
ARROW                : 
BAR                  : 41 41 42 42 43 43 44 44 58 58 103 103
BOOLEAN              : 46
COLON                : 76 136
COMMA                : 50 61 67 139 143
COMMENT              : 
CONCAT               : 56
CONSTANT             : 37 42 43 50 52 69 95 106 145
COPY                 : 57
DIV                  : 127
DIVEQUAL             : 115
DO                   : 
ELIF                 : 90
ELSE                 : 88
EMPTY                : 35 53 62 68 102 140 144
END                  : 1 79
EQUAL                : 43 44 58 64 66 67 104 130
EQUALEQUAL           : 129
FALSE                : 150
FI                   : 87
FLOAT                : 47
FLOATVALUE           : 70
GREATEREQ            : 133
GREATERTHAN          : 123 132
IDENTIFIER           : 16 31 38 41 42 43 44 48 49 49 50 51 58 63 64 74 75 94 103 109 137 138 139 141 142 143 146
IF                   : 85
INSERT               : 50
INT                  : 45
KEYS                 : 
LBRACK               : 42 43 59
LCURLY               : 65
LESSEREQ             : 134
LESSTHAN             : 123 131
LISTVALUE            : 63 73 97
LPAREN               : 16 17 31 32 48 49 50 51 81 92 93 122 137 141
MINUS                : 125
MINUSEQUAL           : 113
MINUSMINUS           : 101
MOD                  : 128
MODEQUAL             : 116
MULT                 : 126
MULTEQUAL            : 114
NOT                  : 93
NOTEQ                : 135
OR                   : 99
PLUS                 : 34 124
PLUSEQUAL            : 112
PLUSPLUS             : 100
POP                  : 51
PRINT                : 17 32
QUOTE                : 
RBRACK               : 42 43 59
RCURLY               : 65
READ                 : 16 31
RETURN               : 145 146 147 148
RPAREN               : 16 17 31 32 48 49 50 51 81 92 93 122 137 141
SEMICOLON            : 16 17 31 32 41 42 43 44 48 49 50 51 58 64 74 75 82 103 141 145 146 147 148
SPLIT                : 54
STRING               : 48 66 67
STRINGVALUE          : 36 72
STRIP                : 55
TC_FLOAT             : 75
TC_INT               : 74
TRUE                 : 149
WHILE                : 76
error                : 
for                  : 81

Nonterminals, with rules where they appear

ArithmeticExpression : 107 117
ArithmeticOperator   : 123
AssignmentHead       : 6 21 81
AssignmentOperator   : 84 105
AssignmentOption     : 103
AssignmentOptionChain : 104
AssignmentOptions2   : 105 111
Body                 : 76 81 85 88 90 136
Compound             : 92
Condition            : 76 81 85 90 92 92 93
ForLoop              : 8 23
Function             : 110 136
FunctionCall         : 12 27
FunctionCallParameter : 141 143
FunctionDefinition   : 11 26
IfThenElse           : 5 20
Increment            : 81
Iterator             : 83
Operand              : 82 84 122 122 123 123
Options              : 82
Parameter            : 137 139
RelationExpression   : 91 121
RelationOperator     : 122
WhileLoop            : 7 22
addElif              : 85 89
addElif2             : 86
booleanValue         : 71 96
content              : 17 32
dataType             : 41 42 43 44 136 138 139
declaration          : 3 18
elifClause           : 89
expression           : 4 19 43 44 147
identifierDeclaration : 39
list                 : 58 119
listDec              : 40
listElem             : 59 61
listEval             : 108 118
listOPStatement      : 15 30
listOpChoice         : 51
morePrint            : 33 34
returnDec            : 13 28
statement            : 2
statement1           : 80
statementMore        : 77 80
statementMoreCont    : 78
statementTop         : 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 30 0
stringOp             : 48 49
stringOpStatement    : 14 29
toPrint              : 33 34
typeCastToInt        : 9 24
typecastToFloat      : 10 25
union                : 64 120
unionDec             : 
unionElement         : 65 67
validListUnionValues : 50 60 61 66 67

Parsing method: LALR

state 0

    (0) S' -> . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 1
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 1

    (0) S' -> statementTop .



state 2

    (13) statement -> returnDec . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 42
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 3

    (103) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON
    (41) identifierDeclaration -> BAR . dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR . dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> BAR . IDENTIFIER EQUAL list BAR SEMICOLON
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    IDENTIFIER      shift and go to state 44
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    dataType                       shift and go to state 43

state 4

    (16) statement -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 45


state 5

    (65) union -> LCURLY . unionElement RCURLY
    (66) unionElement -> . STRING EQUAL validListUnionValues
    (67) unionElement -> . STRING EQUAL validListUnionValues COMMA unionElement
    (68) unionElement -> . EMPTY

    STRING          shift and go to state 46
    EMPTY           shift and go to state 48

    unionElement                   shift and go to state 47

state 6

    (76) WhileLoop -> WHILE . Condition COLON Body
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 51

state 7

    (40) declaration -> listDec .

    END             reduce using rule 40 (declaration -> listDec .)
    READ            reduce using rule 40 (declaration -> listDec .)
    PRINT           reduce using rule 40 (declaration -> listDec .)
    IF              reduce using rule 40 (declaration -> listDec .)
    BAR             reduce using rule 40 (declaration -> listDec .)
    WHILE           reduce using rule 40 (declaration -> listDec .)
    for             reduce using rule 40 (declaration -> listDec .)
    TC_INT          reduce using rule 40 (declaration -> listDec .)
    TC_FLOAT        reduce using rule 40 (declaration -> listDec .)
    IDENTIFIER      reduce using rule 40 (declaration -> listDec .)
    RETURN          reduce using rule 40 (declaration -> listDec .)
    LESSTHAN        reduce using rule 40 (declaration -> listDec .)
    LBRACK          reduce using rule 40 (declaration -> listDec .)
    LCURLY          reduce using rule 40 (declaration -> listDec .)
    LPAREN          reduce using rule 40 (declaration -> listDec .)
    INT             reduce using rule 40 (declaration -> listDec .)
    BOOLEAN         reduce using rule 40 (declaration -> listDec .)
    FLOAT           reduce using rule 40 (declaration -> listDec .)


state 8

    (17) statement -> PRINT . LPAREN content RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 52


state 9

    (145) returnDec -> RETURN . CONSTANT SEMICOLON
    (146) returnDec -> RETURN . IDENTIFIER SEMICOLON
    (147) returnDec -> RETURN . expression SEMICOLON
    (148) returnDec -> RETURN . SEMICOLON
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    CONSTANT        shift and go to state 53
    IDENTIFIER      shift and go to state 55
    SEMICOLON       shift and go to state 54
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25

    listEval                       shift and go to state 19
    union                          shift and go to state 13
    list                           shift and go to state 36
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    expression                     shift and go to state 56

state 10

    (74) typeCastToInt -> TC_INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 57


state 11

    (10) statement -> typecastToFloat . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 58
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 12

    (5) statement -> IfThenElse . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 59
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 13

    (120) expression -> union .

    END             reduce using rule 120 (expression -> union .)
    READ            reduce using rule 120 (expression -> union .)
    PRINT           reduce using rule 120 (expression -> union .)
    IF              reduce using rule 120 (expression -> union .)
    BAR             reduce using rule 120 (expression -> union .)
    WHILE           reduce using rule 120 (expression -> union .)
    for             reduce using rule 120 (expression -> union .)
    TC_INT          reduce using rule 120 (expression -> union .)
    TC_FLOAT        reduce using rule 120 (expression -> union .)
    IDENTIFIER      reduce using rule 120 (expression -> union .)
    RETURN          reduce using rule 120 (expression -> union .)
    LESSTHAN        reduce using rule 120 (expression -> union .)
    LBRACK          reduce using rule 120 (expression -> union .)
    LCURLY          reduce using rule 120 (expression -> union .)
    LPAREN          reduce using rule 120 (expression -> union .)
    INT             reduce using rule 120 (expression -> union .)
    BOOLEAN         reduce using rule 120 (expression -> union .)
    FLOAT           reduce using rule 120 (expression -> union .)
    SEMICOLON       reduce using rule 120 (expression -> union .)


state 14

    (6) statement -> AssignmentHead . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 60
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 15

    (9) statement -> typeCastToInt . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 61
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 16

    (2) statementTop -> statement .

    $end            reduce using rule 2 (statementTop -> statement .)
    END             reduce using rule 2 (statementTop -> statement .)
    READ            reduce using rule 2 (statementTop -> statement .)
    PRINT           reduce using rule 2 (statementTop -> statement .)
    IF              reduce using rule 2 (statementTop -> statement .)
    BAR             reduce using rule 2 (statementTop -> statement .)
    WHILE           reduce using rule 2 (statementTop -> statement .)
    for             reduce using rule 2 (statementTop -> statement .)
    TC_INT          reduce using rule 2 (statementTop -> statement .)
    TC_FLOAT        reduce using rule 2 (statementTop -> statement .)
    IDENTIFIER      reduce using rule 2 (statementTop -> statement .)
    RETURN          reduce using rule 2 (statementTop -> statement .)
    LESSTHAN        reduce using rule 2 (statementTop -> statement .)
    LBRACK          reduce using rule 2 (statementTop -> statement .)
    LCURLY          reduce using rule 2 (statementTop -> statement .)
    LPAREN          reduce using rule 2 (statementTop -> statement .)
    INT             reduce using rule 2 (statementTop -> statement .)
    BOOLEAN         reduce using rule 2 (statementTop -> statement .)
    FLOAT           reduce using rule 2 (statementTop -> statement .)


state 17

    (141) FunctionCall -> IDENTIFIER . LPAREN FunctionCallParameter RPAREN SEMICOLON
    (48) stringOpStatement -> IDENTIFIER . stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER . stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> IDENTIFIER . INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> IDENTIFIER . POP LPAREN listOpChoice RPAREN SEMICOLON
    (63) listEval -> IDENTIFIER . LISTVALUE
    (54) stringOp -> . SPLIT
    (55) stringOp -> . STRIP
    (56) stringOp -> . CONCAT
    (57) stringOp -> . COPY

    LPAREN          shift and go to state 67
    INSERT          shift and go to state 62
    POP             shift and go to state 65
    LISTVALUE       shift and go to state 69
    SPLIT           shift and go to state 66
    STRIP           shift and go to state 68
    CONCAT          shift and go to state 70
    COPY            shift and go to state 63

    stringOp                       shift and go to state 64

state 18

    (11) statement -> FunctionDefinition . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 71
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    WhileLoop                      shift and go to state 30
    expression                     shift and go to state 41

state 19

    (118) expression -> listEval .

    END             reduce using rule 118 (expression -> listEval .)
    READ            reduce using rule 118 (expression -> listEval .)
    PRINT           reduce using rule 118 (expression -> listEval .)
    IF              reduce using rule 118 (expression -> listEval .)
    BAR             reduce using rule 118 (expression -> listEval .)
    WHILE           reduce using rule 118 (expression -> listEval .)
    for             reduce using rule 118 (expression -> listEval .)
    TC_INT          reduce using rule 118 (expression -> listEval .)
    TC_FLOAT        reduce using rule 118 (expression -> listEval .)
    IDENTIFIER      reduce using rule 118 (expression -> listEval .)
    RETURN          reduce using rule 118 (expression -> listEval .)
    LESSTHAN        reduce using rule 118 (expression -> listEval .)
    LBRACK          reduce using rule 118 (expression -> listEval .)
    LCURLY          reduce using rule 118 (expression -> listEval .)
    LPAREN          reduce using rule 118 (expression -> listEval .)
    INT             reduce using rule 118 (expression -> listEval .)
    BOOLEAN         reduce using rule 118 (expression -> listEval .)
    FLOAT           reduce using rule 118 (expression -> listEval .)
    SEMICOLON       reduce using rule 118 (expression -> listEval .)


state 20

    (1) statementTop -> END .

    $end            reduce using rule 1 (statementTop -> END .)
    END             reduce using rule 1 (statementTop -> END .)
    READ            reduce using rule 1 (statementTop -> END .)
    PRINT           reduce using rule 1 (statementTop -> END .)
    IF              reduce using rule 1 (statementTop -> END .)
    BAR             reduce using rule 1 (statementTop -> END .)
    WHILE           reduce using rule 1 (statementTop -> END .)
    for             reduce using rule 1 (statementTop -> END .)
    TC_INT          reduce using rule 1 (statementTop -> END .)
    TC_FLOAT        reduce using rule 1 (statementTop -> END .)
    IDENTIFIER      reduce using rule 1 (statementTop -> END .)
    RETURN          reduce using rule 1 (statementTop -> END .)
    LESSTHAN        reduce using rule 1 (statementTop -> END .)
    LBRACK          reduce using rule 1 (statementTop -> END .)
    LCURLY          reduce using rule 1 (statementTop -> END .)
    LPAREN          reduce using rule 1 (statementTop -> END .)
    INT             reduce using rule 1 (statementTop -> END .)
    BOOLEAN         reduce using rule 1 (statementTop -> END .)
    FLOAT           reduce using rule 1 (statementTop -> END .)


state 21

    (136) FunctionDefinition -> dataType . Function COLON Body
    (137) Function -> . IDENTIFIER LPAREN Parameter RPAREN

    IDENTIFIER      shift and go to state 73

    Function                       shift and go to state 72

state 22

    (117) expression -> ArithmeticExpression .

    END             reduce using rule 117 (expression -> ArithmeticExpression .)
    READ            reduce using rule 117 (expression -> ArithmeticExpression .)
    PRINT           reduce using rule 117 (expression -> ArithmeticExpression .)
    IF              reduce using rule 117 (expression -> ArithmeticExpression .)
    BAR             reduce using rule 117 (expression -> ArithmeticExpression .)
    WHILE           reduce using rule 117 (expression -> ArithmeticExpression .)
    for             reduce using rule 117 (expression -> ArithmeticExpression .)
    TC_INT          reduce using rule 117 (expression -> ArithmeticExpression .)
    TC_FLOAT        reduce using rule 117 (expression -> ArithmeticExpression .)
    IDENTIFIER      reduce using rule 117 (expression -> ArithmeticExpression .)
    RETURN          reduce using rule 117 (expression -> ArithmeticExpression .)
    LESSTHAN        reduce using rule 117 (expression -> ArithmeticExpression .)
    LBRACK          reduce using rule 117 (expression -> ArithmeticExpression .)
    LCURLY          reduce using rule 117 (expression -> ArithmeticExpression .)
    LPAREN          reduce using rule 117 (expression -> ArithmeticExpression .)
    INT             reduce using rule 117 (expression -> ArithmeticExpression .)
    BOOLEAN         reduce using rule 117 (expression -> ArithmeticExpression .)
    FLOAT           reduce using rule 117 (expression -> ArithmeticExpression .)
    SEMICOLON       reduce using rule 117 (expression -> ArithmeticExpression .)


state 23

    (121) expression -> RelationExpression .

    END             reduce using rule 121 (expression -> RelationExpression .)
    READ            reduce using rule 121 (expression -> RelationExpression .)
    PRINT           reduce using rule 121 (expression -> RelationExpression .)
    IF              reduce using rule 121 (expression -> RelationExpression .)
    BAR             reduce using rule 121 (expression -> RelationExpression .)
    WHILE           reduce using rule 121 (expression -> RelationExpression .)
    for             reduce using rule 121 (expression -> RelationExpression .)
    TC_INT          reduce using rule 121 (expression -> RelationExpression .)
    TC_FLOAT        reduce using rule 121 (expression -> RelationExpression .)
    IDENTIFIER      reduce using rule 121 (expression -> RelationExpression .)
    RETURN          reduce using rule 121 (expression -> RelationExpression .)
    LESSTHAN        reduce using rule 121 (expression -> RelationExpression .)
    LBRACK          reduce using rule 121 (expression -> RelationExpression .)
    LCURLY          reduce using rule 121 (expression -> RelationExpression .)
    LPAREN          reduce using rule 121 (expression -> RelationExpression .)
    INT             reduce using rule 121 (expression -> RelationExpression .)
    BOOLEAN         reduce using rule 121 (expression -> RelationExpression .)
    FLOAT           reduce using rule 121 (expression -> RelationExpression .)
    SEMICOLON       reduce using rule 121 (expression -> RelationExpression .)


state 24

    (39) declaration -> identifierDeclaration .

    END             reduce using rule 39 (declaration -> identifierDeclaration .)
    READ            reduce using rule 39 (declaration -> identifierDeclaration .)
    PRINT           reduce using rule 39 (declaration -> identifierDeclaration .)
    IF              reduce using rule 39 (declaration -> identifierDeclaration .)
    BAR             reduce using rule 39 (declaration -> identifierDeclaration .)
    WHILE           reduce using rule 39 (declaration -> identifierDeclaration .)
    for             reduce using rule 39 (declaration -> identifierDeclaration .)
    TC_INT          reduce using rule 39 (declaration -> identifierDeclaration .)
    TC_FLOAT        reduce using rule 39 (declaration -> identifierDeclaration .)
    IDENTIFIER      reduce using rule 39 (declaration -> identifierDeclaration .)
    RETURN          reduce using rule 39 (declaration -> identifierDeclaration .)
    LESSTHAN        reduce using rule 39 (declaration -> identifierDeclaration .)
    LBRACK          reduce using rule 39 (declaration -> identifierDeclaration .)
    LCURLY          reduce using rule 39 (declaration -> identifierDeclaration .)
    LPAREN          reduce using rule 39 (declaration -> identifierDeclaration .)
    INT             reduce using rule 39 (declaration -> identifierDeclaration .)
    BOOLEAN         reduce using rule 39 (declaration -> identifierDeclaration .)
    FLOAT           reduce using rule 39 (declaration -> identifierDeclaration .)


state 25

    (122) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 77
    booleanValue                   shift and go to state 74

state 26

    (3) statement -> declaration . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 81
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 27

    (8) statement -> ForLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 82
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    WhileLoop                      shift and go to state 30
    expression                     shift and go to state 41

state 28

    (46) dataType -> BOOLEAN .

    IDENTIFIER      reduce using rule 46 (dataType -> BOOLEAN .)


state 29

    (85) IfThenElse -> IF . Condition Body addElif
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 83

state 30

    (7) statement -> WhileLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 84
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 31

    (14) statement -> stringOpStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 85
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 32

    (81) ForLoop -> for . LPAREN AssignmentHead Condition Increment RPAREN Body

    LPAREN          shift and go to state 86


state 33

    (45) dataType -> INT .

    IDENTIFIER      reduce using rule 45 (dataType -> INT .)


state 34

    (75) typecastToFloat -> TC_FLOAT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 87


state 35

    (47) dataType -> FLOAT .

    IDENTIFIER      reduce using rule 47 (dataType -> FLOAT .)


state 36

    (119) expression -> list .

    END             reduce using rule 119 (expression -> list .)
    READ            reduce using rule 119 (expression -> list .)
    PRINT           reduce using rule 119 (expression -> list .)
    IF              reduce using rule 119 (expression -> list .)
    BAR             reduce using rule 119 (expression -> list .)
    WHILE           reduce using rule 119 (expression -> list .)
    for             reduce using rule 119 (expression -> list .)
    TC_INT          reduce using rule 119 (expression -> list .)
    TC_FLOAT        reduce using rule 119 (expression -> list .)
    IDENTIFIER      reduce using rule 119 (expression -> list .)
    RETURN          reduce using rule 119 (expression -> list .)
    LESSTHAN        reduce using rule 119 (expression -> list .)
    LBRACK          reduce using rule 119 (expression -> list .)
    LCURLY          reduce using rule 119 (expression -> list .)
    LPAREN          reduce using rule 119 (expression -> list .)
    INT             reduce using rule 119 (expression -> list .)
    BOOLEAN         reduce using rule 119 (expression -> list .)
    FLOAT           reduce using rule 119 (expression -> list .)
    SEMICOLON       reduce using rule 119 (expression -> list .)


state 37

    (59) list -> LBRACK . listElem RBRACK
    (60) listElem -> . validListUnionValues
    (61) listElem -> . validListUnionValues COMMA listElem
    (62) listElem -> . EMPTY
    (69) validListUnionValues -> . CONSTANT
    (70) validListUnionValues -> . FLOATVALUE
    (71) validListUnionValues -> . booleanValue
    (72) validListUnionValues -> . STRINGVALUE
    (73) validListUnionValues -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    EMPTY           shift and go to state 95
    CONSTANT        shift and go to state 89
    FLOATVALUE      shift and go to state 88
    STRINGVALUE     shift and go to state 91
    LISTVALUE       shift and go to state 93
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElem                       shift and go to state 92
    booleanValue                   shift and go to state 94
    validListUnionValues           shift and go to state 90

state 38

    (123) ArithmeticExpression -> LESSTHAN . Operand ArithmeticOperator Operand GREATERTHAN
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 96
    booleanValue                   shift and go to state 74

state 39

    (15) statement -> listOPStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 97
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    listOPStatement                shift and go to state 39
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    AssignmentHead                 shift and go to state 14
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 40

    (12) statement -> FunctionCall . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 98
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 41

    (4) statement -> expression . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 99
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 42

    (13) statement -> returnDec statementTop .

    $end            reduce using rule 13 (statement -> returnDec statementTop .)
    END             reduce using rule 13 (statement -> returnDec statementTop .)
    READ            reduce using rule 13 (statement -> returnDec statementTop .)
    PRINT           reduce using rule 13 (statement -> returnDec statementTop .)
    IF              reduce using rule 13 (statement -> returnDec statementTop .)
    BAR             reduce using rule 13 (statement -> returnDec statementTop .)
    WHILE           reduce using rule 13 (statement -> returnDec statementTop .)
    for             reduce using rule 13 (statement -> returnDec statementTop .)
    TC_INT          reduce using rule 13 (statement -> returnDec statementTop .)
    TC_FLOAT        reduce using rule 13 (statement -> returnDec statementTop .)
    IDENTIFIER      reduce using rule 13 (statement -> returnDec statementTop .)
    RETURN          reduce using rule 13 (statement -> returnDec statementTop .)
    LESSTHAN        reduce using rule 13 (statement -> returnDec statementTop .)
    LBRACK          reduce using rule 13 (statement -> returnDec statementTop .)
    LCURLY          reduce using rule 13 (statement -> returnDec statementTop .)
    LPAREN          reduce using rule 13 (statement -> returnDec statementTop .)
    INT             reduce using rule 13 (statement -> returnDec statementTop .)
    BOOLEAN         reduce using rule 13 (statement -> returnDec statementTop .)
    FLOAT           reduce using rule 13 (statement -> returnDec statementTop .)


state 43

    (41) identifierDeclaration -> BAR dataType . IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR dataType . IDENTIFIER EQUAL expression BAR SEMICOLON

    IDENTIFIER      shift and go to state 100


state 44

    (103) AssignmentHead -> BAR IDENTIFIER . AssignmentOption BAR SEMICOLON
    (58) listDec -> BAR IDENTIFIER . EQUAL list BAR SEMICOLON
    (104) AssignmentOption -> . EQUAL AssignmentOptionChain
    (105) AssignmentOption -> . AssignmentOperator AssignmentOptions2
    (112) AssignmentOperator -> . PLUSEQUAL
    (113) AssignmentOperator -> . MINUSEQUAL
    (114) AssignmentOperator -> . MULTEQUAL
    (115) AssignmentOperator -> . DIVEQUAL
    (116) AssignmentOperator -> . MODEQUAL

    EQUAL           shift and go to state 106
    PLUSEQUAL       shift and go to state 102
    MINUSEQUAL      shift and go to state 105
    MULTEQUAL       shift and go to state 107
    DIVEQUAL        shift and go to state 101
    MODEQUAL        shift and go to state 108

    AssignmentOption               shift and go to state 103
    AssignmentOperator             shift and go to state 104

state 45

    (16) statement -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON statementTop

    IDENTIFIER      shift and go to state 109


state 46

    (66) unionElement -> STRING . EQUAL validListUnionValues
    (67) unionElement -> STRING . EQUAL validListUnionValues COMMA unionElement

    EQUAL           shift and go to state 110


state 47

    (65) union -> LCURLY unionElement . RCURLY

    RCURLY          shift and go to state 111


state 48

    (68) unionElement -> EMPTY .

    RCURLY          reduce using rule 68 (unionElement -> EMPTY .)


state 49

    (91) Condition -> RelationExpression .

    SEMICOLON       reduce using rule 91 (Condition -> RelationExpression .)
    COLON           reduce using rule 91 (Condition -> RelationExpression .)
    RPAREN          reduce using rule 91 (Condition -> RelationExpression .)
    AND             reduce using rule 91 (Condition -> RelationExpression .)
    OR              reduce using rule 91 (Condition -> RelationExpression .)
    END             reduce using rule 91 (Condition -> RelationExpression .)
    READ            reduce using rule 91 (Condition -> RelationExpression .)
    PRINT           reduce using rule 91 (Condition -> RelationExpression .)
    IF              reduce using rule 91 (Condition -> RelationExpression .)
    BAR             reduce using rule 91 (Condition -> RelationExpression .)
    WHILE           reduce using rule 91 (Condition -> RelationExpression .)
    for             reduce using rule 91 (Condition -> RelationExpression .)
    TC_INT          reduce using rule 91 (Condition -> RelationExpression .)
    TC_FLOAT        reduce using rule 91 (Condition -> RelationExpression .)
    IDENTIFIER      reduce using rule 91 (Condition -> RelationExpression .)
    RETURN          reduce using rule 91 (Condition -> RelationExpression .)
    LESSTHAN        reduce using rule 91 (Condition -> RelationExpression .)
    LBRACK          reduce using rule 91 (Condition -> RelationExpression .)
    LCURLY          reduce using rule 91 (Condition -> RelationExpression .)
    LPAREN          reduce using rule 91 (Condition -> RelationExpression .)
    INT             reduce using rule 91 (Condition -> RelationExpression .)
    BOOLEAN         reduce using rule 91 (Condition -> RelationExpression .)
    FLOAT           reduce using rule 91 (Condition -> RelationExpression .)


state 50

    (92) Condition -> LPAREN . Condition Compound Condition RPAREN
    (93) Condition -> LPAREN . NOT Condition RPAREN
    (122) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    NOT             shift and go to state 112
    LPAREN          shift and go to state 50
    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    RelationExpression             shift and go to state 49
    Operand                        shift and go to state 77
    booleanValue                   shift and go to state 74
    Condition                      shift and go to state 113

state 51

    (76) WhileLoop -> WHILE Condition . COLON Body

    COLON           shift and go to state 114


state 52

    (17) statement -> PRINT LPAREN . content RPAREN SEMICOLON statementTop
    (33) content -> . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 118
    CONSTANT        shift and go to state 117
    IDENTIFIER      shift and go to state 115

    content                        shift and go to state 116
    toPrint                        shift and go to state 119

state 53

    (145) returnDec -> RETURN CONSTANT . SEMICOLON

    SEMICOLON       shift and go to state 120


state 54

    (148) returnDec -> RETURN SEMICOLON .

    END             reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    READ            reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    PRINT           reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    IF              reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    BAR             reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    WHILE           reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    for             reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    TC_INT          reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    TC_FLOAT        reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    RETURN          reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    LESSTHAN        reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    LBRACK          reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    LCURLY          reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    INT             reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    BOOLEAN         reduce using rule 148 (returnDec -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 148 (returnDec -> RETURN SEMICOLON .)


state 55

    (146) returnDec -> RETURN IDENTIFIER . SEMICOLON
    (63) listEval -> IDENTIFIER . LISTVALUE

    SEMICOLON       shift and go to state 121
    LISTVALUE       shift and go to state 69


state 56

    (147) returnDec -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 122


state 57

    (74) typeCastToInt -> TC_INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 123


state 58

    (10) statement -> typecastToFloat statementTop .

    $end            reduce using rule 10 (statement -> typecastToFloat statementTop .)
    END             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    READ            reduce using rule 10 (statement -> typecastToFloat statementTop .)
    PRINT           reduce using rule 10 (statement -> typecastToFloat statementTop .)
    IF              reduce using rule 10 (statement -> typecastToFloat statementTop .)
    BAR             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    WHILE           reduce using rule 10 (statement -> typecastToFloat statementTop .)
    for             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    TC_INT          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    TC_FLOAT        reduce using rule 10 (statement -> typecastToFloat statementTop .)
    IDENTIFIER      reduce using rule 10 (statement -> typecastToFloat statementTop .)
    RETURN          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LESSTHAN        reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LBRACK          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LCURLY          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LPAREN          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    INT             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    BOOLEAN         reduce using rule 10 (statement -> typecastToFloat statementTop .)
    FLOAT           reduce using rule 10 (statement -> typecastToFloat statementTop .)


state 59

    (5) statement -> IfThenElse statementTop .

    $end            reduce using rule 5 (statement -> IfThenElse statementTop .)
    END             reduce using rule 5 (statement -> IfThenElse statementTop .)
    READ            reduce using rule 5 (statement -> IfThenElse statementTop .)
    PRINT           reduce using rule 5 (statement -> IfThenElse statementTop .)
    IF              reduce using rule 5 (statement -> IfThenElse statementTop .)
    BAR             reduce using rule 5 (statement -> IfThenElse statementTop .)
    WHILE           reduce using rule 5 (statement -> IfThenElse statementTop .)
    for             reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_INT          reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_FLOAT        reduce using rule 5 (statement -> IfThenElse statementTop .)
    IDENTIFIER      reduce using rule 5 (statement -> IfThenElse statementTop .)
    RETURN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LESSTHAN        reduce using rule 5 (statement -> IfThenElse statementTop .)
    LBRACK          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LCURLY          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LPAREN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    INT             reduce using rule 5 (statement -> IfThenElse statementTop .)
    BOOLEAN         reduce using rule 5 (statement -> IfThenElse statementTop .)
    FLOAT           reduce using rule 5 (statement -> IfThenElse statementTop .)


state 60

    (6) statement -> AssignmentHead statementTop .

    $end            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    END             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    READ            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    PRINT           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IF              reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BAR             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    WHILE           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    for             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_INT          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_FLOAT        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IDENTIFIER      reduce using rule 6 (statement -> AssignmentHead statementTop .)
    RETURN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LESSTHAN        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LBRACK          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LCURLY          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LPAREN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    INT             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BOOLEAN         reduce using rule 6 (statement -> AssignmentHead statementTop .)
    FLOAT           reduce using rule 6 (statement -> AssignmentHead statementTop .)


state 61

    (9) statement -> typeCastToInt statementTop .

    $end            reduce using rule 9 (statement -> typeCastToInt statementTop .)
    END             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    READ            reduce using rule 9 (statement -> typeCastToInt statementTop .)
    PRINT           reduce using rule 9 (statement -> typeCastToInt statementTop .)
    IF              reduce using rule 9 (statement -> typeCastToInt statementTop .)
    BAR             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    WHILE           reduce using rule 9 (statement -> typeCastToInt statementTop .)
    for             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    TC_INT          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    TC_FLOAT        reduce using rule 9 (statement -> typeCastToInt statementTop .)
    IDENTIFIER      reduce using rule 9 (statement -> typeCastToInt statementTop .)
    RETURN          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LESSTHAN        reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LBRACK          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LCURLY          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LPAREN          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    INT             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    BOOLEAN         reduce using rule 9 (statement -> typeCastToInt statementTop .)
    FLOAT           reduce using rule 9 (statement -> typeCastToInt statementTop .)


state 62

    (50) listOPStatement -> IDENTIFIER INSERT . LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    LPAREN          shift and go to state 124


state 63

    (57) stringOp -> COPY .

    LPAREN          reduce using rule 57 (stringOp -> COPY .)


state 64

    (48) stringOpStatement -> IDENTIFIER stringOp . LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER stringOp . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 125


state 65

    (51) listOPStatement -> IDENTIFIER POP . LPAREN listOpChoice RPAREN SEMICOLON

    LPAREN          shift and go to state 126


state 66

    (54) stringOp -> SPLIT .

    LPAREN          reduce using rule 54 (stringOp -> SPLIT .)


state 67

    (141) FunctionCall -> IDENTIFIER LPAREN . FunctionCallParameter RPAREN SEMICOLON
    (142) FunctionCallParameter -> . IDENTIFIER
    (143) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (144) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 128
    EMPTY           shift and go to state 129

    FunctionCallParameter          shift and go to state 127

state 68

    (55) stringOp -> STRIP .

    LPAREN          reduce using rule 55 (stringOp -> STRIP .)


state 69

    (63) listEval -> IDENTIFIER LISTVALUE .

    END             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    READ            reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    PRINT           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    IF              reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    BAR             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    WHILE           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    for             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    TC_INT          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    TC_FLOAT        reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    IDENTIFIER      reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    RETURN          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LESSTHAN        reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LBRACK          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LCURLY          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LPAREN          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    INT             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    BOOLEAN         reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    FLOAT           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    SEMICOLON       reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)


state 70

    (56) stringOp -> CONCAT .

    LPAREN          reduce using rule 56 (stringOp -> CONCAT .)


state 71

    (11) statement -> FunctionDefinition statementTop .

    $end            reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    END             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    READ            reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    PRINT           reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    IF              reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    BAR             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    WHILE           reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    for             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    TC_INT          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    TC_FLOAT        reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    IDENTIFIER      reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    RETURN          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LESSTHAN        reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LBRACK          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LCURLY          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LPAREN          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    INT             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    BOOLEAN         reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    FLOAT           reduce using rule 11 (statement -> FunctionDefinition statementTop .)


state 72

    (136) FunctionDefinition -> dataType Function . COLON Body

    COLON           shift and go to state 130


state 73

    (137) Function -> IDENTIFIER . LPAREN Parameter RPAREN

    LPAREN          shift and go to state 131


state 74

    (96) Operand -> booleanValue .

    RPAREN          reduce using rule 96 (Operand -> booleanValue .)
    GREATERTHAN     reduce using rule 96 (Operand -> booleanValue .)
    EQUALEQUAL      reduce using rule 96 (Operand -> booleanValue .)
    EQUAL           reduce using rule 96 (Operand -> booleanValue .)
    LESSTHAN        reduce using rule 96 (Operand -> booleanValue .)
    GREATEREQ       reduce using rule 96 (Operand -> booleanValue .)
    LESSEREQ        reduce using rule 96 (Operand -> booleanValue .)
    NOTEQ           reduce using rule 96 (Operand -> booleanValue .)
    PLUS            reduce using rule 96 (Operand -> booleanValue .)
    MINUS           reduce using rule 96 (Operand -> booleanValue .)
    MULT            reduce using rule 96 (Operand -> booleanValue .)
    DIV             reduce using rule 96 (Operand -> booleanValue .)
    MOD             reduce using rule 96 (Operand -> booleanValue .)
    PLUSPLUS        reduce using rule 96 (Operand -> booleanValue .)
    MINUSMINUS      reduce using rule 96 (Operand -> booleanValue .)
    EMPTY           reduce using rule 96 (Operand -> booleanValue .)
    PLUSEQUAL       reduce using rule 96 (Operand -> booleanValue .)
    MINUSEQUAL      reduce using rule 96 (Operand -> booleanValue .)
    MULTEQUAL       reduce using rule 96 (Operand -> booleanValue .)
    DIVEQUAL        reduce using rule 96 (Operand -> booleanValue .)
    MODEQUAL        reduce using rule 96 (Operand -> booleanValue .)


state 75

    (149) booleanValue -> TRUE .

    PLUS            reduce using rule 149 (booleanValue -> TRUE .)
    MINUS           reduce using rule 149 (booleanValue -> TRUE .)
    MULT            reduce using rule 149 (booleanValue -> TRUE .)
    DIV             reduce using rule 149 (booleanValue -> TRUE .)
    MOD             reduce using rule 149 (booleanValue -> TRUE .)
    COMMA           reduce using rule 149 (booleanValue -> TRUE .)
    RBRACK          reduce using rule 149 (booleanValue -> TRUE .)
    PLUSPLUS        reduce using rule 149 (booleanValue -> TRUE .)
    MINUSMINUS      reduce using rule 149 (booleanValue -> TRUE .)
    EMPTY           reduce using rule 149 (booleanValue -> TRUE .)
    PLUSEQUAL       reduce using rule 149 (booleanValue -> TRUE .)
    MINUSEQUAL      reduce using rule 149 (booleanValue -> TRUE .)
    MULTEQUAL       reduce using rule 149 (booleanValue -> TRUE .)
    DIVEQUAL        reduce using rule 149 (booleanValue -> TRUE .)
    MODEQUAL        reduce using rule 149 (booleanValue -> TRUE .)
    RPAREN          reduce using rule 149 (booleanValue -> TRUE .)
    EQUALEQUAL      reduce using rule 149 (booleanValue -> TRUE .)
    EQUAL           reduce using rule 149 (booleanValue -> TRUE .)
    LESSTHAN        reduce using rule 149 (booleanValue -> TRUE .)
    GREATERTHAN     reduce using rule 149 (booleanValue -> TRUE .)
    GREATEREQ       reduce using rule 149 (booleanValue -> TRUE .)
    LESSEREQ        reduce using rule 149 (booleanValue -> TRUE .)
    NOTEQ           reduce using rule 149 (booleanValue -> TRUE .)
    RCURLY          reduce using rule 149 (booleanValue -> TRUE .)


state 76

    (150) booleanValue -> FALSE .

    PLUS            reduce using rule 150 (booleanValue -> FALSE .)
    MINUS           reduce using rule 150 (booleanValue -> FALSE .)
    MULT            reduce using rule 150 (booleanValue -> FALSE .)
    DIV             reduce using rule 150 (booleanValue -> FALSE .)
    MOD             reduce using rule 150 (booleanValue -> FALSE .)
    COMMA           reduce using rule 150 (booleanValue -> FALSE .)
    RBRACK          reduce using rule 150 (booleanValue -> FALSE .)
    PLUSPLUS        reduce using rule 150 (booleanValue -> FALSE .)
    MINUSMINUS      reduce using rule 150 (booleanValue -> FALSE .)
    EMPTY           reduce using rule 150 (booleanValue -> FALSE .)
    PLUSEQUAL       reduce using rule 150 (booleanValue -> FALSE .)
    MINUSEQUAL      reduce using rule 150 (booleanValue -> FALSE .)
    MULTEQUAL       reduce using rule 150 (booleanValue -> FALSE .)
    DIVEQUAL        reduce using rule 150 (booleanValue -> FALSE .)
    MODEQUAL        reduce using rule 150 (booleanValue -> FALSE .)
    RPAREN          reduce using rule 150 (booleanValue -> FALSE .)
    EQUALEQUAL      reduce using rule 150 (booleanValue -> FALSE .)
    EQUAL           reduce using rule 150 (booleanValue -> FALSE .)
    LESSTHAN        reduce using rule 150 (booleanValue -> FALSE .)
    GREATERTHAN     reduce using rule 150 (booleanValue -> FALSE .)
    GREATEREQ       reduce using rule 150 (booleanValue -> FALSE .)
    LESSEREQ        reduce using rule 150 (booleanValue -> FALSE .)
    NOTEQ           reduce using rule 150 (booleanValue -> FALSE .)
    RCURLY          reduce using rule 150 (booleanValue -> FALSE .)


state 77

    (122) RelationExpression -> LPAREN Operand . RelationOperator Operand RPAREN
    (129) RelationOperator -> . EQUALEQUAL
    (130) RelationOperator -> . EQUAL
    (131) RelationOperator -> . LESSTHAN
    (132) RelationOperator -> . GREATERTHAN
    (133) RelationOperator -> . GREATEREQ
    (134) RelationOperator -> . LESSEREQ
    (135) RelationOperator -> . NOTEQ

    EQUALEQUAL      shift and go to state 138
    EQUAL           shift and go to state 134
    LESSTHAN        shift and go to state 136
    GREATERTHAN     shift and go to state 137
    GREATEREQ       shift and go to state 135
    LESSEREQ        shift and go to state 133
    NOTEQ           shift and go to state 132

    RelationOperator               shift and go to state 139

state 78

    (95) Operand -> CONSTANT .

    RPAREN          reduce using rule 95 (Operand -> CONSTANT .)
    GREATERTHAN     reduce using rule 95 (Operand -> CONSTANT .)
    EQUALEQUAL      reduce using rule 95 (Operand -> CONSTANT .)
    EQUAL           reduce using rule 95 (Operand -> CONSTANT .)
    LESSTHAN        reduce using rule 95 (Operand -> CONSTANT .)
    GREATEREQ       reduce using rule 95 (Operand -> CONSTANT .)
    LESSEREQ        reduce using rule 95 (Operand -> CONSTANT .)
    NOTEQ           reduce using rule 95 (Operand -> CONSTANT .)
    PLUS            reduce using rule 95 (Operand -> CONSTANT .)
    MINUS           reduce using rule 95 (Operand -> CONSTANT .)
    MULT            reduce using rule 95 (Operand -> CONSTANT .)
    DIV             reduce using rule 95 (Operand -> CONSTANT .)
    MOD             reduce using rule 95 (Operand -> CONSTANT .)
    PLUSPLUS        reduce using rule 95 (Operand -> CONSTANT .)
    MINUSMINUS      reduce using rule 95 (Operand -> CONSTANT .)
    EMPTY           reduce using rule 95 (Operand -> CONSTANT .)
    PLUSEQUAL       reduce using rule 95 (Operand -> CONSTANT .)
    MINUSEQUAL      reduce using rule 95 (Operand -> CONSTANT .)
    MULTEQUAL       reduce using rule 95 (Operand -> CONSTANT .)
    DIVEQUAL        reduce using rule 95 (Operand -> CONSTANT .)
    MODEQUAL        reduce using rule 95 (Operand -> CONSTANT .)


state 79

    (97) Operand -> LISTVALUE .

    RPAREN          reduce using rule 97 (Operand -> LISTVALUE .)
    GREATERTHAN     reduce using rule 97 (Operand -> LISTVALUE .)
    EQUALEQUAL      reduce using rule 97 (Operand -> LISTVALUE .)
    EQUAL           reduce using rule 97 (Operand -> LISTVALUE .)
    LESSTHAN        reduce using rule 97 (Operand -> LISTVALUE .)
    GREATEREQ       reduce using rule 97 (Operand -> LISTVALUE .)
    LESSEREQ        reduce using rule 97 (Operand -> LISTVALUE .)
    NOTEQ           reduce using rule 97 (Operand -> LISTVALUE .)
    PLUS            reduce using rule 97 (Operand -> LISTVALUE .)
    MINUS           reduce using rule 97 (Operand -> LISTVALUE .)
    MULT            reduce using rule 97 (Operand -> LISTVALUE .)
    DIV             reduce using rule 97 (Operand -> LISTVALUE .)
    MOD             reduce using rule 97 (Operand -> LISTVALUE .)
    PLUSPLUS        reduce using rule 97 (Operand -> LISTVALUE .)
    MINUSMINUS      reduce using rule 97 (Operand -> LISTVALUE .)
    EMPTY           reduce using rule 97 (Operand -> LISTVALUE .)
    PLUSEQUAL       reduce using rule 97 (Operand -> LISTVALUE .)
    MINUSEQUAL      reduce using rule 97 (Operand -> LISTVALUE .)
    MULTEQUAL       reduce using rule 97 (Operand -> LISTVALUE .)
    DIVEQUAL        reduce using rule 97 (Operand -> LISTVALUE .)
    MODEQUAL        reduce using rule 97 (Operand -> LISTVALUE .)


state 80

    (94) Operand -> IDENTIFIER .

    RPAREN          reduce using rule 94 (Operand -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 94 (Operand -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 94 (Operand -> IDENTIFIER .)
    EQUAL           reduce using rule 94 (Operand -> IDENTIFIER .)
    LESSTHAN        reduce using rule 94 (Operand -> IDENTIFIER .)
    GREATEREQ       reduce using rule 94 (Operand -> IDENTIFIER .)
    LESSEREQ        reduce using rule 94 (Operand -> IDENTIFIER .)
    NOTEQ           reduce using rule 94 (Operand -> IDENTIFIER .)
    PLUS            reduce using rule 94 (Operand -> IDENTIFIER .)
    MINUS           reduce using rule 94 (Operand -> IDENTIFIER .)
    MULT            reduce using rule 94 (Operand -> IDENTIFIER .)
    DIV             reduce using rule 94 (Operand -> IDENTIFIER .)
    MOD             reduce using rule 94 (Operand -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 94 (Operand -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 94 (Operand -> IDENTIFIER .)
    EMPTY           reduce using rule 94 (Operand -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 94 (Operand -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 94 (Operand -> IDENTIFIER .)
    MULTEQUAL       reduce using rule 94 (Operand -> IDENTIFIER .)
    DIVEQUAL        reduce using rule 94 (Operand -> IDENTIFIER .)
    MODEQUAL        reduce using rule 94 (Operand -> IDENTIFIER .)


state 81

    (3) statement -> declaration statementTop .

    $end            reduce using rule 3 (statement -> declaration statementTop .)
    END             reduce using rule 3 (statement -> declaration statementTop .)
    READ            reduce using rule 3 (statement -> declaration statementTop .)
    PRINT           reduce using rule 3 (statement -> declaration statementTop .)
    IF              reduce using rule 3 (statement -> declaration statementTop .)
    BAR             reduce using rule 3 (statement -> declaration statementTop .)
    WHILE           reduce using rule 3 (statement -> declaration statementTop .)
    for             reduce using rule 3 (statement -> declaration statementTop .)
    TC_INT          reduce using rule 3 (statement -> declaration statementTop .)
    TC_FLOAT        reduce using rule 3 (statement -> declaration statementTop .)
    IDENTIFIER      reduce using rule 3 (statement -> declaration statementTop .)
    RETURN          reduce using rule 3 (statement -> declaration statementTop .)
    LESSTHAN        reduce using rule 3 (statement -> declaration statementTop .)
    LBRACK          reduce using rule 3 (statement -> declaration statementTop .)
    LCURLY          reduce using rule 3 (statement -> declaration statementTop .)
    LPAREN          reduce using rule 3 (statement -> declaration statementTop .)
    INT             reduce using rule 3 (statement -> declaration statementTop .)
    BOOLEAN         reduce using rule 3 (statement -> declaration statementTop .)
    FLOAT           reduce using rule 3 (statement -> declaration statementTop .)


state 82

    (8) statement -> ForLoop statementTop .

    $end            reduce using rule 8 (statement -> ForLoop statementTop .)
    END             reduce using rule 8 (statement -> ForLoop statementTop .)
    READ            reduce using rule 8 (statement -> ForLoop statementTop .)
    PRINT           reduce using rule 8 (statement -> ForLoop statementTop .)
    IF              reduce using rule 8 (statement -> ForLoop statementTop .)
    BAR             reduce using rule 8 (statement -> ForLoop statementTop .)
    WHILE           reduce using rule 8 (statement -> ForLoop statementTop .)
    for             reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_INT          reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_FLOAT        reduce using rule 8 (statement -> ForLoop statementTop .)
    IDENTIFIER      reduce using rule 8 (statement -> ForLoop statementTop .)
    RETURN          reduce using rule 8 (statement -> ForLoop statementTop .)
    LESSTHAN        reduce using rule 8 (statement -> ForLoop statementTop .)
    LBRACK          reduce using rule 8 (statement -> ForLoop statementTop .)
    LCURLY          reduce using rule 8 (statement -> ForLoop statementTop .)
    LPAREN          reduce using rule 8 (statement -> ForLoop statementTop .)
    INT             reduce using rule 8 (statement -> ForLoop statementTop .)
    BOOLEAN         reduce using rule 8 (statement -> ForLoop statementTop .)
    FLOAT           reduce using rule 8 (statement -> ForLoop statementTop .)


state 83

    (85) IfThenElse -> IF Condition . Body addElif
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    listDec                        shift and go to state 7
    statementMoreCont              shift and go to state 141
    typecastToFloat                shift and go to state 143
    Body                           shift and go to state 144
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    FunctionDefinition             shift and go to state 149
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    ForLoop                        shift and go to state 154
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 84

    (7) statement -> WhileLoop statementTop .

    $end            reduce using rule 7 (statement -> WhileLoop statementTop .)
    END             reduce using rule 7 (statement -> WhileLoop statementTop .)
    READ            reduce using rule 7 (statement -> WhileLoop statementTop .)
    PRINT           reduce using rule 7 (statement -> WhileLoop statementTop .)
    IF              reduce using rule 7 (statement -> WhileLoop statementTop .)
    BAR             reduce using rule 7 (statement -> WhileLoop statementTop .)
    WHILE           reduce using rule 7 (statement -> WhileLoop statementTop .)
    for             reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_INT          reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_FLOAT        reduce using rule 7 (statement -> WhileLoop statementTop .)
    IDENTIFIER      reduce using rule 7 (statement -> WhileLoop statementTop .)
    RETURN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LESSTHAN        reduce using rule 7 (statement -> WhileLoop statementTop .)
    LBRACK          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LCURLY          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LPAREN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    INT             reduce using rule 7 (statement -> WhileLoop statementTop .)
    BOOLEAN         reduce using rule 7 (statement -> WhileLoop statementTop .)
    FLOAT           reduce using rule 7 (statement -> WhileLoop statementTop .)


state 85

    (14) statement -> stringOpStatement statementTop .

    $end            reduce using rule 14 (statement -> stringOpStatement statementTop .)
    END             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    READ            reduce using rule 14 (statement -> stringOpStatement statementTop .)
    PRINT           reduce using rule 14 (statement -> stringOpStatement statementTop .)
    IF              reduce using rule 14 (statement -> stringOpStatement statementTop .)
    BAR             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    WHILE           reduce using rule 14 (statement -> stringOpStatement statementTop .)
    for             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    TC_INT          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    TC_FLOAT        reduce using rule 14 (statement -> stringOpStatement statementTop .)
    IDENTIFIER      reduce using rule 14 (statement -> stringOpStatement statementTop .)
    RETURN          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LESSTHAN        reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LBRACK          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LCURLY          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LPAREN          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    INT             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    BOOLEAN         reduce using rule 14 (statement -> stringOpStatement statementTop .)
    FLOAT           reduce using rule 14 (statement -> stringOpStatement statementTop .)


state 86

    (81) ForLoop -> for LPAREN . AssignmentHead Condition Increment RPAREN Body
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON

    BAR             shift and go to state 161

    AssignmentHead                 shift and go to state 160

state 87

    (75) typecastToFloat -> TC_FLOAT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 162


state 88

    (70) validListUnionValues -> FLOATVALUE .

    COMMA           reduce using rule 70 (validListUnionValues -> FLOATVALUE .)
    RBRACK          reduce using rule 70 (validListUnionValues -> FLOATVALUE .)
    RCURLY          reduce using rule 70 (validListUnionValues -> FLOATVALUE .)
    RPAREN          reduce using rule 70 (validListUnionValues -> FLOATVALUE .)


state 89

    (69) validListUnionValues -> CONSTANT .

    COMMA           reduce using rule 69 (validListUnionValues -> CONSTANT .)
    RBRACK          reduce using rule 69 (validListUnionValues -> CONSTANT .)
    RCURLY          reduce using rule 69 (validListUnionValues -> CONSTANT .)
    RPAREN          reduce using rule 69 (validListUnionValues -> CONSTANT .)


state 90

    (60) listElem -> validListUnionValues .
    (61) listElem -> validListUnionValues . COMMA listElem

    RBRACK          reduce using rule 60 (listElem -> validListUnionValues .)
    COMMA           shift and go to state 163


state 91

    (72) validListUnionValues -> STRINGVALUE .

    COMMA           reduce using rule 72 (validListUnionValues -> STRINGVALUE .)
    RBRACK          reduce using rule 72 (validListUnionValues -> STRINGVALUE .)
    RCURLY          reduce using rule 72 (validListUnionValues -> STRINGVALUE .)
    RPAREN          reduce using rule 72 (validListUnionValues -> STRINGVALUE .)


state 92

    (59) list -> LBRACK listElem . RBRACK

    RBRACK          shift and go to state 164


state 93

    (73) validListUnionValues -> LISTVALUE .

    COMMA           reduce using rule 73 (validListUnionValues -> LISTVALUE .)
    RBRACK          reduce using rule 73 (validListUnionValues -> LISTVALUE .)
    RCURLY          reduce using rule 73 (validListUnionValues -> LISTVALUE .)
    RPAREN          reduce using rule 73 (validListUnionValues -> LISTVALUE .)


state 94

    (71) validListUnionValues -> booleanValue .

    COMMA           reduce using rule 71 (validListUnionValues -> booleanValue .)
    RBRACK          reduce using rule 71 (validListUnionValues -> booleanValue .)
    RCURLY          reduce using rule 71 (validListUnionValues -> booleanValue .)
    RPAREN          reduce using rule 71 (validListUnionValues -> booleanValue .)


state 95

    (62) listElem -> EMPTY .

    RBRACK          reduce using rule 62 (listElem -> EMPTY .)


state 96

    (123) ArithmeticExpression -> LESSTHAN Operand . ArithmeticOperator Operand GREATERTHAN
    (124) ArithmeticOperator -> . PLUS
    (125) ArithmeticOperator -> . MINUS
    (126) ArithmeticOperator -> . MULT
    (127) ArithmeticOperator -> . DIV
    (128) ArithmeticOperator -> . MOD

    PLUS            shift and go to state 165
    MINUS           shift and go to state 168
    MULT            shift and go to state 169
    DIV             shift and go to state 167
    MOD             shift and go to state 170

    ArithmeticOperator             shift and go to state 166

state 97

    (15) statement -> listOPStatement statementTop .

    $end            reduce using rule 15 (statement -> listOPStatement statementTop .)
    END             reduce using rule 15 (statement -> listOPStatement statementTop .)
    READ            reduce using rule 15 (statement -> listOPStatement statementTop .)
    PRINT           reduce using rule 15 (statement -> listOPStatement statementTop .)
    IF              reduce using rule 15 (statement -> listOPStatement statementTop .)
    BAR             reduce using rule 15 (statement -> listOPStatement statementTop .)
    WHILE           reduce using rule 15 (statement -> listOPStatement statementTop .)
    for             reduce using rule 15 (statement -> listOPStatement statementTop .)
    TC_INT          reduce using rule 15 (statement -> listOPStatement statementTop .)
    TC_FLOAT        reduce using rule 15 (statement -> listOPStatement statementTop .)
    IDENTIFIER      reduce using rule 15 (statement -> listOPStatement statementTop .)
    RETURN          reduce using rule 15 (statement -> listOPStatement statementTop .)
    LESSTHAN        reduce using rule 15 (statement -> listOPStatement statementTop .)
    LBRACK          reduce using rule 15 (statement -> listOPStatement statementTop .)
    LCURLY          reduce using rule 15 (statement -> listOPStatement statementTop .)
    LPAREN          reduce using rule 15 (statement -> listOPStatement statementTop .)
    INT             reduce using rule 15 (statement -> listOPStatement statementTop .)
    BOOLEAN         reduce using rule 15 (statement -> listOPStatement statementTop .)
    FLOAT           reduce using rule 15 (statement -> listOPStatement statementTop .)


state 98

    (12) statement -> FunctionCall statementTop .

    $end            reduce using rule 12 (statement -> FunctionCall statementTop .)
    END             reduce using rule 12 (statement -> FunctionCall statementTop .)
    READ            reduce using rule 12 (statement -> FunctionCall statementTop .)
    PRINT           reduce using rule 12 (statement -> FunctionCall statementTop .)
    IF              reduce using rule 12 (statement -> FunctionCall statementTop .)
    BAR             reduce using rule 12 (statement -> FunctionCall statementTop .)
    WHILE           reduce using rule 12 (statement -> FunctionCall statementTop .)
    for             reduce using rule 12 (statement -> FunctionCall statementTop .)
    TC_INT          reduce using rule 12 (statement -> FunctionCall statementTop .)
    TC_FLOAT        reduce using rule 12 (statement -> FunctionCall statementTop .)
    IDENTIFIER      reduce using rule 12 (statement -> FunctionCall statementTop .)
    RETURN          reduce using rule 12 (statement -> FunctionCall statementTop .)
    LESSTHAN        reduce using rule 12 (statement -> FunctionCall statementTop .)
    LBRACK          reduce using rule 12 (statement -> FunctionCall statementTop .)
    LCURLY          reduce using rule 12 (statement -> FunctionCall statementTop .)
    LPAREN          reduce using rule 12 (statement -> FunctionCall statementTop .)
    INT             reduce using rule 12 (statement -> FunctionCall statementTop .)
    BOOLEAN         reduce using rule 12 (statement -> FunctionCall statementTop .)
    FLOAT           reduce using rule 12 (statement -> FunctionCall statementTop .)


state 99

    (4) statement -> expression statementTop .

    $end            reduce using rule 4 (statement -> expression statementTop .)
    END             reduce using rule 4 (statement -> expression statementTop .)
    READ            reduce using rule 4 (statement -> expression statementTop .)
    PRINT           reduce using rule 4 (statement -> expression statementTop .)
    IF              reduce using rule 4 (statement -> expression statementTop .)
    BAR             reduce using rule 4 (statement -> expression statementTop .)
    WHILE           reduce using rule 4 (statement -> expression statementTop .)
    for             reduce using rule 4 (statement -> expression statementTop .)
    TC_INT          reduce using rule 4 (statement -> expression statementTop .)
    TC_FLOAT        reduce using rule 4 (statement -> expression statementTop .)
    IDENTIFIER      reduce using rule 4 (statement -> expression statementTop .)
    RETURN          reduce using rule 4 (statement -> expression statementTop .)
    LESSTHAN        reduce using rule 4 (statement -> expression statementTop .)
    LBRACK          reduce using rule 4 (statement -> expression statementTop .)
    LCURLY          reduce using rule 4 (statement -> expression statementTop .)
    LPAREN          reduce using rule 4 (statement -> expression statementTop .)
    INT             reduce using rule 4 (statement -> expression statementTop .)
    BOOLEAN         reduce using rule 4 (statement -> expression statementTop .)
    FLOAT           reduce using rule 4 (statement -> expression statementTop .)


state 100

    (41) identifierDeclaration -> BAR dataType IDENTIFIER . BAR SEMICOLON
    (42) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR dataType IDENTIFIER . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 173
    LBRACK          shift and go to state 171
    EQUAL           shift and go to state 172


state 101

    (115) AssignmentOperator -> DIVEQUAL .

    CONSTANT        reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)
    LESSTHAN        reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)
    IDENTIFIER      reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)
    LISTVALUE       reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)
    TRUE            reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)
    FALSE           reduce using rule 115 (AssignmentOperator -> DIVEQUAL .)


state 102

    (112) AssignmentOperator -> PLUSEQUAL .

    CONSTANT        reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)
    LESSTHAN        reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)
    IDENTIFIER      reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)
    LISTVALUE       reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)
    TRUE            reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)
    FALSE           reduce using rule 112 (AssignmentOperator -> PLUSEQUAL .)


state 103

    (103) AssignmentHead -> BAR IDENTIFIER AssignmentOption . BAR SEMICOLON

    BAR             shift and go to state 174


state 104

    (105) AssignmentOption -> AssignmentOperator . AssignmentOptions2
    (106) AssignmentOptions2 -> . CONSTANT
    (107) AssignmentOptions2 -> . ArithmeticExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN

    CONSTANT        shift and go to state 175
    LESSTHAN        shift and go to state 38

    ArithmeticExpression           shift and go to state 176
    AssignmentOptions2             shift and go to state 177

state 105

    (113) AssignmentOperator -> MINUSEQUAL .

    CONSTANT        reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)
    LESSTHAN        reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)
    IDENTIFIER      reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)
    LISTVALUE       reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)
    TRUE            reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)
    FALSE           reduce using rule 113 (AssignmentOperator -> MINUSEQUAL .)


state 106

    (58) listDec -> BAR IDENTIFIER EQUAL . list BAR SEMICOLON
    (104) AssignmentOption -> EQUAL . AssignmentOptionChain
    (59) list -> . LBRACK listElem RBRACK
    (108) AssignmentOptionChain -> . listEval
    (109) AssignmentOptionChain -> . IDENTIFIER
    (110) AssignmentOptionChain -> . Function
    (111) AssignmentOptionChain -> . AssignmentOptions2
    (63) listEval -> . IDENTIFIER LISTVALUE
    (137) Function -> . IDENTIFIER LPAREN Parameter RPAREN
    (106) AssignmentOptions2 -> . CONSTANT
    (107) AssignmentOptions2 -> . ArithmeticExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN

    LBRACK          shift and go to state 37
    IDENTIFIER      shift and go to state 179
    CONSTANT        shift and go to state 175
    LESSTHAN        shift and go to state 38

    Function                       shift and go to state 178
    listEval                       shift and go to state 180
    list                           shift and go to state 182
    AssignmentOptionChain          shift and go to state 183
    AssignmentOptions2             shift and go to state 181
    ArithmeticExpression           shift and go to state 176

state 107

    (114) AssignmentOperator -> MULTEQUAL .

    CONSTANT        reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)
    LESSTHAN        reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)
    IDENTIFIER      reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)
    LISTVALUE       reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)
    TRUE            reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)
    FALSE           reduce using rule 114 (AssignmentOperator -> MULTEQUAL .)


state 108

    (116) AssignmentOperator -> MODEQUAL .

    CONSTANT        reduce using rule 116 (AssignmentOperator -> MODEQUAL .)
    LESSTHAN        reduce using rule 116 (AssignmentOperator -> MODEQUAL .)
    IDENTIFIER      reduce using rule 116 (AssignmentOperator -> MODEQUAL .)
    LISTVALUE       reduce using rule 116 (AssignmentOperator -> MODEQUAL .)
    TRUE            reduce using rule 116 (AssignmentOperator -> MODEQUAL .)
    FALSE           reduce using rule 116 (AssignmentOperator -> MODEQUAL .)


state 109

    (16) statement -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 184


state 110

    (66) unionElement -> STRING EQUAL . validListUnionValues
    (67) unionElement -> STRING EQUAL . validListUnionValues COMMA unionElement
    (69) validListUnionValues -> . CONSTANT
    (70) validListUnionValues -> . FLOATVALUE
    (71) validListUnionValues -> . booleanValue
    (72) validListUnionValues -> . STRINGVALUE
    (73) validListUnionValues -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    CONSTANT        shift and go to state 89
    FLOATVALUE      shift and go to state 88
    STRINGVALUE     shift and go to state 91
    LISTVALUE       shift and go to state 93
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleanValue                   shift and go to state 94
    validListUnionValues           shift and go to state 185

state 111

    (65) union -> LCURLY unionElement RCURLY .

    END             reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    READ            reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    PRINT           reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    IF              reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    BAR             reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    WHILE           reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    for             reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    TC_INT          reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    TC_FLOAT        reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    IDENTIFIER      reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    RETURN          reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    LESSTHAN        reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    LBRACK          reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    LCURLY          reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    LPAREN          reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    INT             reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    BOOLEAN         reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    FLOAT           reduce using rule 65 (union -> LCURLY unionElement RCURLY .)
    SEMICOLON       reduce using rule 65 (union -> LCURLY unionElement RCURLY .)


state 112

    (93) Condition -> LPAREN NOT . Condition RPAREN
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 186

state 113

    (92) Condition -> LPAREN Condition . Compound Condition RPAREN
    (98) Compound -> . AND
    (99) Compound -> . OR

    AND             shift and go to state 187
    OR              shift and go to state 189

    Compound                       shift and go to state 188

state 114

    (76) WhileLoop -> WHILE Condition COLON . Body
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 143
    Body                           shift and go to state 190
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    statementMoreCont              shift and go to state 141
    FunctionDefinition             shift and go to state 149
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    ForLoop                        shift and go to state 154
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 115

    (38) toPrint -> IDENTIFIER .

    PLUS            reduce using rule 38 (toPrint -> IDENTIFIER .)
    EMPTY           reduce using rule 38 (toPrint -> IDENTIFIER .)


state 116

    (17) statement -> PRINT LPAREN content . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 191


state 117

    (37) toPrint -> CONSTANT .

    PLUS            reduce using rule 37 (toPrint -> CONSTANT .)
    EMPTY           reduce using rule 37 (toPrint -> CONSTANT .)


state 118

    (36) toPrint -> STRINGVALUE .

    PLUS            reduce using rule 36 (toPrint -> STRINGVALUE .)
    EMPTY           reduce using rule 36 (toPrint -> STRINGVALUE .)


state 119

    (33) content -> toPrint . morePrint
    (34) morePrint -> . PLUS toPrint morePrint
    (35) morePrint -> . EMPTY

    PLUS            shift and go to state 192
    EMPTY           shift and go to state 194

    morePrint                      shift and go to state 193

state 120

    (145) returnDec -> RETURN CONSTANT SEMICOLON .

    END             reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    READ            reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    PRINT           reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IF              reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BAR             reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    WHILE           reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    for             reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_INT          reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_FLOAT        reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IDENTIFIER      reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    RETURN          reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LESSTHAN        reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LBRACK          reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LCURLY          reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LPAREN          reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    INT             reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BOOLEAN         reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)
    FLOAT           reduce using rule 145 (returnDec -> RETURN CONSTANT SEMICOLON .)


state 121

    (146) returnDec -> RETURN IDENTIFIER SEMICOLON .

    END             reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    READ            reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    for             reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    INT             reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 146 (returnDec -> RETURN IDENTIFIER SEMICOLON .)


state 122

    (147) returnDec -> RETURN expression SEMICOLON .

    END             reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    READ            reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    IF              reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    BAR             reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    for             reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    TC_INT          reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    TC_FLOAT        reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    LESSTHAN        reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    LBRACK          reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    LCURLY          reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    INT             reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 147 (returnDec -> RETURN expression SEMICOLON .)


state 123

    (74) typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .

    END             reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    for             reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 74 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)


state 124

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN . CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    CONSTANT        shift and go to state 195


state 125

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN . STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN . IDENTIFIER RPAREN SEMICOLON

    STRING          shift and go to state 196
    IDENTIFIER      shift and go to state 197


state 126

    (51) listOPStatement -> IDENTIFIER POP LPAREN . listOpChoice RPAREN SEMICOLON
    (52) listOpChoice -> . CONSTANT
    (53) listOpChoice -> . EMPTY

    CONSTANT        shift and go to state 199
    EMPTY           shift and go to state 200

    listOpChoice                   shift and go to state 198

state 127

    (141) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter . RPAREN SEMICOLON

    RPAREN          shift and go to state 201


state 128

    (142) FunctionCallParameter -> IDENTIFIER .
    (143) FunctionCallParameter -> IDENTIFIER . COMMA FunctionCallParameter

    RPAREN          reduce using rule 142 (FunctionCallParameter -> IDENTIFIER .)
    COMMA           shift and go to state 202


state 129

    (144) FunctionCallParameter -> EMPTY .

    RPAREN          reduce using rule 144 (FunctionCallParameter -> EMPTY .)


state 130

    (136) FunctionDefinition -> dataType Function COLON . Body
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    FunctionDefinition             shift and go to state 149
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 143
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    Body                           shift and go to state 203
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    statementMoreCont              shift and go to state 141
    ForLoop                        shift and go to state 154
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    WhileLoop                      shift and go to state 155
    expression                     shift and go to state 159

state 131

    (137) Function -> IDENTIFIER LPAREN . Parameter RPAREN
    (138) Parameter -> . dataType IDENTIFIER
    (139) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (140) Parameter -> . EMPTY
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    EMPTY           shift and go to state 206
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    dataType                       shift and go to state 204
    Parameter                      shift and go to state 205

state 132

    (135) RelationOperator -> NOTEQ .

    IDENTIFIER      reduce using rule 135 (RelationOperator -> NOTEQ .)
    CONSTANT        reduce using rule 135 (RelationOperator -> NOTEQ .)
    LISTVALUE       reduce using rule 135 (RelationOperator -> NOTEQ .)
    TRUE            reduce using rule 135 (RelationOperator -> NOTEQ .)
    FALSE           reduce using rule 135 (RelationOperator -> NOTEQ .)


state 133

    (134) RelationOperator -> LESSEREQ .

    IDENTIFIER      reduce using rule 134 (RelationOperator -> LESSEREQ .)
    CONSTANT        reduce using rule 134 (RelationOperator -> LESSEREQ .)
    LISTVALUE       reduce using rule 134 (RelationOperator -> LESSEREQ .)
    TRUE            reduce using rule 134 (RelationOperator -> LESSEREQ .)
    FALSE           reduce using rule 134 (RelationOperator -> LESSEREQ .)


state 134

    (130) RelationOperator -> EQUAL .

    IDENTIFIER      reduce using rule 130 (RelationOperator -> EQUAL .)
    CONSTANT        reduce using rule 130 (RelationOperator -> EQUAL .)
    LISTVALUE       reduce using rule 130 (RelationOperator -> EQUAL .)
    TRUE            reduce using rule 130 (RelationOperator -> EQUAL .)
    FALSE           reduce using rule 130 (RelationOperator -> EQUAL .)


state 135

    (133) RelationOperator -> GREATEREQ .

    IDENTIFIER      reduce using rule 133 (RelationOperator -> GREATEREQ .)
    CONSTANT        reduce using rule 133 (RelationOperator -> GREATEREQ .)
    LISTVALUE       reduce using rule 133 (RelationOperator -> GREATEREQ .)
    TRUE            reduce using rule 133 (RelationOperator -> GREATEREQ .)
    FALSE           reduce using rule 133 (RelationOperator -> GREATEREQ .)


state 136

    (131) RelationOperator -> LESSTHAN .

    IDENTIFIER      reduce using rule 131 (RelationOperator -> LESSTHAN .)
    CONSTANT        reduce using rule 131 (RelationOperator -> LESSTHAN .)
    LISTVALUE       reduce using rule 131 (RelationOperator -> LESSTHAN .)
    TRUE            reduce using rule 131 (RelationOperator -> LESSTHAN .)
    FALSE           reduce using rule 131 (RelationOperator -> LESSTHAN .)


state 137

    (132) RelationOperator -> GREATERTHAN .

    IDENTIFIER      reduce using rule 132 (RelationOperator -> GREATERTHAN .)
    CONSTANT        reduce using rule 132 (RelationOperator -> GREATERTHAN .)
    LISTVALUE       reduce using rule 132 (RelationOperator -> GREATERTHAN .)
    TRUE            reduce using rule 132 (RelationOperator -> GREATERTHAN .)
    FALSE           reduce using rule 132 (RelationOperator -> GREATERTHAN .)


state 138

    (129) RelationOperator -> EQUALEQUAL .

    IDENTIFIER      reduce using rule 129 (RelationOperator -> EQUALEQUAL .)
    CONSTANT        reduce using rule 129 (RelationOperator -> EQUALEQUAL .)
    LISTVALUE       reduce using rule 129 (RelationOperator -> EQUALEQUAL .)
    TRUE            reduce using rule 129 (RelationOperator -> EQUALEQUAL .)
    FALSE           reduce using rule 129 (RelationOperator -> EQUALEQUAL .)


state 139

    (122) RelationExpression -> LPAREN Operand RelationOperator . Operand RPAREN
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 207
    booleanValue                   shift and go to state 74

state 140

    (28) statement1 -> returnDec .

    END             reduce using rule 28 (statement1 -> returnDec .)
    READ            reduce using rule 28 (statement1 -> returnDec .)
    PRINT           reduce using rule 28 (statement1 -> returnDec .)
    IF              reduce using rule 28 (statement1 -> returnDec .)
    BAR             reduce using rule 28 (statement1 -> returnDec .)
    WHILE           reduce using rule 28 (statement1 -> returnDec .)
    for             reduce using rule 28 (statement1 -> returnDec .)
    TC_INT          reduce using rule 28 (statement1 -> returnDec .)
    TC_FLOAT        reduce using rule 28 (statement1 -> returnDec .)
    IDENTIFIER      reduce using rule 28 (statement1 -> returnDec .)
    RETURN          reduce using rule 28 (statement1 -> returnDec .)
    LESSTHAN        reduce using rule 28 (statement1 -> returnDec .)
    LBRACK          reduce using rule 28 (statement1 -> returnDec .)
    LCURLY          reduce using rule 28 (statement1 -> returnDec .)
    LPAREN          reduce using rule 28 (statement1 -> returnDec .)
    INT             reduce using rule 28 (statement1 -> returnDec .)
    BOOLEAN         reduce using rule 28 (statement1 -> returnDec .)
    FLOAT           reduce using rule 28 (statement1 -> returnDec .)


state 141

    (78) statementMore -> statementMoreCont .

    END             reduce using rule 78 (statementMore -> statementMoreCont .)
    READ            reduce using rule 78 (statementMore -> statementMoreCont .)
    PRINT           reduce using rule 78 (statementMore -> statementMoreCont .)
    IF              reduce using rule 78 (statementMore -> statementMoreCont .)
    BAR             reduce using rule 78 (statementMore -> statementMoreCont .)
    WHILE           reduce using rule 78 (statementMore -> statementMoreCont .)
    for             reduce using rule 78 (statementMore -> statementMoreCont .)
    TC_INT          reduce using rule 78 (statementMore -> statementMoreCont .)
    TC_FLOAT        reduce using rule 78 (statementMore -> statementMoreCont .)
    IDENTIFIER      reduce using rule 78 (statementMore -> statementMoreCont .)
    RETURN          reduce using rule 78 (statementMore -> statementMoreCont .)
    LESSTHAN        reduce using rule 78 (statementMore -> statementMoreCont .)
    LBRACK          reduce using rule 78 (statementMore -> statementMoreCont .)
    LCURLY          reduce using rule 78 (statementMore -> statementMoreCont .)
    LPAREN          reduce using rule 78 (statementMore -> statementMoreCont .)
    INT             reduce using rule 78 (statementMore -> statementMoreCont .)
    BOOLEAN         reduce using rule 78 (statementMore -> statementMoreCont .)
    FLOAT           reduce using rule 78 (statementMore -> statementMoreCont .)
    FI              reduce using rule 78 (statementMore -> statementMoreCont .)
    ELSE            reduce using rule 78 (statementMore -> statementMoreCont .)
    ELIF            reduce using rule 78 (statementMore -> statementMoreCont .)


state 142

    (32) statement1 -> PRINT . LPAREN content RPAREN SEMICOLON

    LPAREN          shift and go to state 208


state 143

    (25) statement1 -> typecastToFloat .

    END             reduce using rule 25 (statement1 -> typecastToFloat .)
    READ            reduce using rule 25 (statement1 -> typecastToFloat .)
    PRINT           reduce using rule 25 (statement1 -> typecastToFloat .)
    IF              reduce using rule 25 (statement1 -> typecastToFloat .)
    BAR             reduce using rule 25 (statement1 -> typecastToFloat .)
    WHILE           reduce using rule 25 (statement1 -> typecastToFloat .)
    for             reduce using rule 25 (statement1 -> typecastToFloat .)
    TC_INT          reduce using rule 25 (statement1 -> typecastToFloat .)
    TC_FLOAT        reduce using rule 25 (statement1 -> typecastToFloat .)
    IDENTIFIER      reduce using rule 25 (statement1 -> typecastToFloat .)
    RETURN          reduce using rule 25 (statement1 -> typecastToFloat .)
    LESSTHAN        reduce using rule 25 (statement1 -> typecastToFloat .)
    LBRACK          reduce using rule 25 (statement1 -> typecastToFloat .)
    LCURLY          reduce using rule 25 (statement1 -> typecastToFloat .)
    LPAREN          reduce using rule 25 (statement1 -> typecastToFloat .)
    INT             reduce using rule 25 (statement1 -> typecastToFloat .)
    BOOLEAN         reduce using rule 25 (statement1 -> typecastToFloat .)
    FLOAT           reduce using rule 25 (statement1 -> typecastToFloat .)


state 144

    (85) IfThenElse -> IF Condition Body . addElif
    (86) addElif -> . addElif2
    (87) addElif -> . FI
    (88) addElif -> . ELSE Body
    (89) addElif2 -> . elifClause addElif
    (90) elifClause -> . ELIF Condition Body

    FI              shift and go to state 213
    ELSE            shift and go to state 211
    ELIF            shift and go to state 209

    addElif                        shift and go to state 210
    elifClause                     shift and go to state 214
    addElif2                       shift and go to state 212

state 145

    (20) statement1 -> IfThenElse .

    END             reduce using rule 20 (statement1 -> IfThenElse .)
    READ            reduce using rule 20 (statement1 -> IfThenElse .)
    PRINT           reduce using rule 20 (statement1 -> IfThenElse .)
    IF              reduce using rule 20 (statement1 -> IfThenElse .)
    BAR             reduce using rule 20 (statement1 -> IfThenElse .)
    WHILE           reduce using rule 20 (statement1 -> IfThenElse .)
    for             reduce using rule 20 (statement1 -> IfThenElse .)
    TC_INT          reduce using rule 20 (statement1 -> IfThenElse .)
    TC_FLOAT        reduce using rule 20 (statement1 -> IfThenElse .)
    IDENTIFIER      reduce using rule 20 (statement1 -> IfThenElse .)
    RETURN          reduce using rule 20 (statement1 -> IfThenElse .)
    LESSTHAN        reduce using rule 20 (statement1 -> IfThenElse .)
    LBRACK          reduce using rule 20 (statement1 -> IfThenElse .)
    LCURLY          reduce using rule 20 (statement1 -> IfThenElse .)
    LPAREN          reduce using rule 20 (statement1 -> IfThenElse .)
    INT             reduce using rule 20 (statement1 -> IfThenElse .)
    BOOLEAN         reduce using rule 20 (statement1 -> IfThenElse .)
    FLOAT           reduce using rule 20 (statement1 -> IfThenElse .)


state 146

    (31) statement1 -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 215


state 147

    (21) statement1 -> AssignmentHead .

    END             reduce using rule 21 (statement1 -> AssignmentHead .)
    READ            reduce using rule 21 (statement1 -> AssignmentHead .)
    PRINT           reduce using rule 21 (statement1 -> AssignmentHead .)
    IF              reduce using rule 21 (statement1 -> AssignmentHead .)
    BAR             reduce using rule 21 (statement1 -> AssignmentHead .)
    WHILE           reduce using rule 21 (statement1 -> AssignmentHead .)
    for             reduce using rule 21 (statement1 -> AssignmentHead .)
    TC_INT          reduce using rule 21 (statement1 -> AssignmentHead .)
    TC_FLOAT        reduce using rule 21 (statement1 -> AssignmentHead .)
    IDENTIFIER      reduce using rule 21 (statement1 -> AssignmentHead .)
    RETURN          reduce using rule 21 (statement1 -> AssignmentHead .)
    LESSTHAN        reduce using rule 21 (statement1 -> AssignmentHead .)
    LBRACK          reduce using rule 21 (statement1 -> AssignmentHead .)
    LCURLY          reduce using rule 21 (statement1 -> AssignmentHead .)
    LPAREN          reduce using rule 21 (statement1 -> AssignmentHead .)
    INT             reduce using rule 21 (statement1 -> AssignmentHead .)
    BOOLEAN         reduce using rule 21 (statement1 -> AssignmentHead .)
    FLOAT           reduce using rule 21 (statement1 -> AssignmentHead .)


state 148

    (24) statement1 -> typeCastToInt .

    END             reduce using rule 24 (statement1 -> typeCastToInt .)
    READ            reduce using rule 24 (statement1 -> typeCastToInt .)
    PRINT           reduce using rule 24 (statement1 -> typeCastToInt .)
    IF              reduce using rule 24 (statement1 -> typeCastToInt .)
    BAR             reduce using rule 24 (statement1 -> typeCastToInt .)
    WHILE           reduce using rule 24 (statement1 -> typeCastToInt .)
    for             reduce using rule 24 (statement1 -> typeCastToInt .)
    TC_INT          reduce using rule 24 (statement1 -> typeCastToInt .)
    TC_FLOAT        reduce using rule 24 (statement1 -> typeCastToInt .)
    IDENTIFIER      reduce using rule 24 (statement1 -> typeCastToInt .)
    RETURN          reduce using rule 24 (statement1 -> typeCastToInt .)
    LESSTHAN        reduce using rule 24 (statement1 -> typeCastToInt .)
    LBRACK          reduce using rule 24 (statement1 -> typeCastToInt .)
    LCURLY          reduce using rule 24 (statement1 -> typeCastToInt .)
    LPAREN          reduce using rule 24 (statement1 -> typeCastToInt .)
    INT             reduce using rule 24 (statement1 -> typeCastToInt .)
    BOOLEAN         reduce using rule 24 (statement1 -> typeCastToInt .)
    FLOAT           reduce using rule 24 (statement1 -> typeCastToInt .)


state 149

    (26) statement1 -> FunctionDefinition .

    END             reduce using rule 26 (statement1 -> FunctionDefinition .)
    READ            reduce using rule 26 (statement1 -> FunctionDefinition .)
    PRINT           reduce using rule 26 (statement1 -> FunctionDefinition .)
    IF              reduce using rule 26 (statement1 -> FunctionDefinition .)
    BAR             reduce using rule 26 (statement1 -> FunctionDefinition .)
    WHILE           reduce using rule 26 (statement1 -> FunctionDefinition .)
    for             reduce using rule 26 (statement1 -> FunctionDefinition .)
    TC_INT          reduce using rule 26 (statement1 -> FunctionDefinition .)
    TC_FLOAT        reduce using rule 26 (statement1 -> FunctionDefinition .)
    IDENTIFIER      reduce using rule 26 (statement1 -> FunctionDefinition .)
    RETURN          reduce using rule 26 (statement1 -> FunctionDefinition .)
    LESSTHAN        reduce using rule 26 (statement1 -> FunctionDefinition .)
    LBRACK          reduce using rule 26 (statement1 -> FunctionDefinition .)
    LCURLY          reduce using rule 26 (statement1 -> FunctionDefinition .)
    LPAREN          reduce using rule 26 (statement1 -> FunctionDefinition .)
    INT             reduce using rule 26 (statement1 -> FunctionDefinition .)
    BOOLEAN         reduce using rule 26 (statement1 -> FunctionDefinition .)
    FLOAT           reduce using rule 26 (statement1 -> FunctionDefinition .)


state 150

    (79) statementMore -> END .

    END             reduce using rule 79 (statementMore -> END .)
    READ            reduce using rule 79 (statementMore -> END .)
    PRINT           reduce using rule 79 (statementMore -> END .)
    IF              reduce using rule 79 (statementMore -> END .)
    BAR             reduce using rule 79 (statementMore -> END .)
    WHILE           reduce using rule 79 (statementMore -> END .)
    for             reduce using rule 79 (statementMore -> END .)
    TC_INT          reduce using rule 79 (statementMore -> END .)
    TC_FLOAT        reduce using rule 79 (statementMore -> END .)
    IDENTIFIER      reduce using rule 79 (statementMore -> END .)
    RETURN          reduce using rule 79 (statementMore -> END .)
    LESSTHAN        reduce using rule 79 (statementMore -> END .)
    LBRACK          reduce using rule 79 (statementMore -> END .)
    LCURLY          reduce using rule 79 (statementMore -> END .)
    LPAREN          reduce using rule 79 (statementMore -> END .)
    INT             reduce using rule 79 (statementMore -> END .)
    BOOLEAN         reduce using rule 79 (statementMore -> END .)
    FLOAT           reduce using rule 79 (statementMore -> END .)
    FI              reduce using rule 79 (statementMore -> END .)
    ELSE            reduce using rule 79 (statementMore -> END .)
    ELIF            reduce using rule 79 (statementMore -> END .)


state 151

    (77) Body -> statementMore .

    END             reduce using rule 77 (Body -> statementMore .)
    READ            reduce using rule 77 (Body -> statementMore .)
    PRINT           reduce using rule 77 (Body -> statementMore .)
    IF              reduce using rule 77 (Body -> statementMore .)
    BAR             reduce using rule 77 (Body -> statementMore .)
    WHILE           reduce using rule 77 (Body -> statementMore .)
    for             reduce using rule 77 (Body -> statementMore .)
    TC_INT          reduce using rule 77 (Body -> statementMore .)
    TC_FLOAT        reduce using rule 77 (Body -> statementMore .)
    IDENTIFIER      reduce using rule 77 (Body -> statementMore .)
    RETURN          reduce using rule 77 (Body -> statementMore .)
    LESSTHAN        reduce using rule 77 (Body -> statementMore .)
    LBRACK          reduce using rule 77 (Body -> statementMore .)
    LCURLY          reduce using rule 77 (Body -> statementMore .)
    LPAREN          reduce using rule 77 (Body -> statementMore .)
    INT             reduce using rule 77 (Body -> statementMore .)
    BOOLEAN         reduce using rule 77 (Body -> statementMore .)
    FLOAT           reduce using rule 77 (Body -> statementMore .)
    FI              reduce using rule 77 (Body -> statementMore .)
    ELSE            reduce using rule 77 (Body -> statementMore .)
    ELIF            reduce using rule 77 (Body -> statementMore .)


state 152

    (80) statementMoreCont -> statement1 . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    FunctionDefinition             shift and go to state 149
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 143
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    ForLoop                        shift and go to state 154
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 216
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    statementMoreCont              shift and go to state 141
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 153

    (18) statement1 -> declaration .

    END             reduce using rule 18 (statement1 -> declaration .)
    READ            reduce using rule 18 (statement1 -> declaration .)
    PRINT           reduce using rule 18 (statement1 -> declaration .)
    IF              reduce using rule 18 (statement1 -> declaration .)
    BAR             reduce using rule 18 (statement1 -> declaration .)
    WHILE           reduce using rule 18 (statement1 -> declaration .)
    for             reduce using rule 18 (statement1 -> declaration .)
    TC_INT          reduce using rule 18 (statement1 -> declaration .)
    TC_FLOAT        reduce using rule 18 (statement1 -> declaration .)
    IDENTIFIER      reduce using rule 18 (statement1 -> declaration .)
    RETURN          reduce using rule 18 (statement1 -> declaration .)
    LESSTHAN        reduce using rule 18 (statement1 -> declaration .)
    LBRACK          reduce using rule 18 (statement1 -> declaration .)
    LCURLY          reduce using rule 18 (statement1 -> declaration .)
    LPAREN          reduce using rule 18 (statement1 -> declaration .)
    INT             reduce using rule 18 (statement1 -> declaration .)
    BOOLEAN         reduce using rule 18 (statement1 -> declaration .)
    FLOAT           reduce using rule 18 (statement1 -> declaration .)


state 154

    (23) statement1 -> ForLoop .

    END             reduce using rule 23 (statement1 -> ForLoop .)
    READ            reduce using rule 23 (statement1 -> ForLoop .)
    PRINT           reduce using rule 23 (statement1 -> ForLoop .)
    IF              reduce using rule 23 (statement1 -> ForLoop .)
    BAR             reduce using rule 23 (statement1 -> ForLoop .)
    WHILE           reduce using rule 23 (statement1 -> ForLoop .)
    for             reduce using rule 23 (statement1 -> ForLoop .)
    TC_INT          reduce using rule 23 (statement1 -> ForLoop .)
    TC_FLOAT        reduce using rule 23 (statement1 -> ForLoop .)
    IDENTIFIER      reduce using rule 23 (statement1 -> ForLoop .)
    RETURN          reduce using rule 23 (statement1 -> ForLoop .)
    LESSTHAN        reduce using rule 23 (statement1 -> ForLoop .)
    LBRACK          reduce using rule 23 (statement1 -> ForLoop .)
    LCURLY          reduce using rule 23 (statement1 -> ForLoop .)
    LPAREN          reduce using rule 23 (statement1 -> ForLoop .)
    INT             reduce using rule 23 (statement1 -> ForLoop .)
    BOOLEAN         reduce using rule 23 (statement1 -> ForLoop .)
    FLOAT           reduce using rule 23 (statement1 -> ForLoop .)


state 155

    (22) statement1 -> WhileLoop .

    END             reduce using rule 22 (statement1 -> WhileLoop .)
    READ            reduce using rule 22 (statement1 -> WhileLoop .)
    PRINT           reduce using rule 22 (statement1 -> WhileLoop .)
    IF              reduce using rule 22 (statement1 -> WhileLoop .)
    BAR             reduce using rule 22 (statement1 -> WhileLoop .)
    WHILE           reduce using rule 22 (statement1 -> WhileLoop .)
    for             reduce using rule 22 (statement1 -> WhileLoop .)
    TC_INT          reduce using rule 22 (statement1 -> WhileLoop .)
    TC_FLOAT        reduce using rule 22 (statement1 -> WhileLoop .)
    IDENTIFIER      reduce using rule 22 (statement1 -> WhileLoop .)
    RETURN          reduce using rule 22 (statement1 -> WhileLoop .)
    LESSTHAN        reduce using rule 22 (statement1 -> WhileLoop .)
    LBRACK          reduce using rule 22 (statement1 -> WhileLoop .)
    LCURLY          reduce using rule 22 (statement1 -> WhileLoop .)
    LPAREN          reduce using rule 22 (statement1 -> WhileLoop .)
    INT             reduce using rule 22 (statement1 -> WhileLoop .)
    BOOLEAN         reduce using rule 22 (statement1 -> WhileLoop .)
    FLOAT           reduce using rule 22 (statement1 -> WhileLoop .)


state 156

    (29) statement1 -> stringOpStatement .

    END             reduce using rule 29 (statement1 -> stringOpStatement .)
    READ            reduce using rule 29 (statement1 -> stringOpStatement .)
    PRINT           reduce using rule 29 (statement1 -> stringOpStatement .)
    IF              reduce using rule 29 (statement1 -> stringOpStatement .)
    BAR             reduce using rule 29 (statement1 -> stringOpStatement .)
    WHILE           reduce using rule 29 (statement1 -> stringOpStatement .)
    for             reduce using rule 29 (statement1 -> stringOpStatement .)
    TC_INT          reduce using rule 29 (statement1 -> stringOpStatement .)
    TC_FLOAT        reduce using rule 29 (statement1 -> stringOpStatement .)
    IDENTIFIER      reduce using rule 29 (statement1 -> stringOpStatement .)
    RETURN          reduce using rule 29 (statement1 -> stringOpStatement .)
    LESSTHAN        reduce using rule 29 (statement1 -> stringOpStatement .)
    LBRACK          reduce using rule 29 (statement1 -> stringOpStatement .)
    LCURLY          reduce using rule 29 (statement1 -> stringOpStatement .)
    LPAREN          reduce using rule 29 (statement1 -> stringOpStatement .)
    INT             reduce using rule 29 (statement1 -> stringOpStatement .)
    BOOLEAN         reduce using rule 29 (statement1 -> stringOpStatement .)
    FLOAT           reduce using rule 29 (statement1 -> stringOpStatement .)


state 157

    (30) statement1 -> listOPStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 217
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    listOPStatement                shift and go to state 39
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    AssignmentHead                 shift and go to state 14
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 158

    (27) statement1 -> FunctionCall .

    END             reduce using rule 27 (statement1 -> FunctionCall .)
    READ            reduce using rule 27 (statement1 -> FunctionCall .)
    PRINT           reduce using rule 27 (statement1 -> FunctionCall .)
    IF              reduce using rule 27 (statement1 -> FunctionCall .)
    BAR             reduce using rule 27 (statement1 -> FunctionCall .)
    WHILE           reduce using rule 27 (statement1 -> FunctionCall .)
    for             reduce using rule 27 (statement1 -> FunctionCall .)
    TC_INT          reduce using rule 27 (statement1 -> FunctionCall .)
    TC_FLOAT        reduce using rule 27 (statement1 -> FunctionCall .)
    IDENTIFIER      reduce using rule 27 (statement1 -> FunctionCall .)
    RETURN          reduce using rule 27 (statement1 -> FunctionCall .)
    LESSTHAN        reduce using rule 27 (statement1 -> FunctionCall .)
    LBRACK          reduce using rule 27 (statement1 -> FunctionCall .)
    LCURLY          reduce using rule 27 (statement1 -> FunctionCall .)
    LPAREN          reduce using rule 27 (statement1 -> FunctionCall .)
    INT             reduce using rule 27 (statement1 -> FunctionCall .)
    BOOLEAN         reduce using rule 27 (statement1 -> FunctionCall .)
    FLOAT           reduce using rule 27 (statement1 -> FunctionCall .)


state 159

    (19) statement1 -> expression .

    END             reduce using rule 19 (statement1 -> expression .)
    READ            reduce using rule 19 (statement1 -> expression .)
    PRINT           reduce using rule 19 (statement1 -> expression .)
    IF              reduce using rule 19 (statement1 -> expression .)
    BAR             reduce using rule 19 (statement1 -> expression .)
    WHILE           reduce using rule 19 (statement1 -> expression .)
    for             reduce using rule 19 (statement1 -> expression .)
    TC_INT          reduce using rule 19 (statement1 -> expression .)
    TC_FLOAT        reduce using rule 19 (statement1 -> expression .)
    IDENTIFIER      reduce using rule 19 (statement1 -> expression .)
    RETURN          reduce using rule 19 (statement1 -> expression .)
    LESSTHAN        reduce using rule 19 (statement1 -> expression .)
    LBRACK          reduce using rule 19 (statement1 -> expression .)
    LCURLY          reduce using rule 19 (statement1 -> expression .)
    LPAREN          reduce using rule 19 (statement1 -> expression .)
    INT             reduce using rule 19 (statement1 -> expression .)
    BOOLEAN         reduce using rule 19 (statement1 -> expression .)
    FLOAT           reduce using rule 19 (statement1 -> expression .)


state 160

    (81) ForLoop -> for LPAREN AssignmentHead . Condition Increment RPAREN Body
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 218

state 161

    (103) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON

    IDENTIFIER      shift and go to state 219


state 162

    (75) typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .

    END             reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    for             reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LCURLY          reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 75 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)


state 163

    (61) listElem -> validListUnionValues COMMA . listElem
    (60) listElem -> . validListUnionValues
    (61) listElem -> . validListUnionValues COMMA listElem
    (62) listElem -> . EMPTY
    (69) validListUnionValues -> . CONSTANT
    (70) validListUnionValues -> . FLOATVALUE
    (71) validListUnionValues -> . booleanValue
    (72) validListUnionValues -> . STRINGVALUE
    (73) validListUnionValues -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    EMPTY           shift and go to state 95
    CONSTANT        shift and go to state 89
    FLOATVALUE      shift and go to state 88
    STRINGVALUE     shift and go to state 91
    LISTVALUE       shift and go to state 93
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElem                       shift and go to state 220
    booleanValue                   shift and go to state 94
    validListUnionValues           shift and go to state 90

state 164

    (59) list -> LBRACK listElem RBRACK .

    END             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    READ            reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    PRINT           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    IF              reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    BAR             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    WHILE           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    for             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    TC_INT          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    TC_FLOAT        reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    IDENTIFIER      reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    RETURN          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LESSTHAN        reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LBRACK          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LCURLY          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LPAREN          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    INT             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    BOOLEAN         reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    FLOAT           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    SEMICOLON       reduce using rule 59 (list -> LBRACK listElem RBRACK .)


state 165

    (124) ArithmeticOperator -> PLUS .

    IDENTIFIER      reduce using rule 124 (ArithmeticOperator -> PLUS .)
    CONSTANT        reduce using rule 124 (ArithmeticOperator -> PLUS .)
    LISTVALUE       reduce using rule 124 (ArithmeticOperator -> PLUS .)
    TRUE            reduce using rule 124 (ArithmeticOperator -> PLUS .)
    FALSE           reduce using rule 124 (ArithmeticOperator -> PLUS .)


state 166

    (123) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator . Operand GREATERTHAN
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 221
    booleanValue                   shift and go to state 74

state 167

    (127) ArithmeticOperator -> DIV .

    IDENTIFIER      reduce using rule 127 (ArithmeticOperator -> DIV .)
    CONSTANT        reduce using rule 127 (ArithmeticOperator -> DIV .)
    LISTVALUE       reduce using rule 127 (ArithmeticOperator -> DIV .)
    TRUE            reduce using rule 127 (ArithmeticOperator -> DIV .)
    FALSE           reduce using rule 127 (ArithmeticOperator -> DIV .)


state 168

    (125) ArithmeticOperator -> MINUS .

    IDENTIFIER      reduce using rule 125 (ArithmeticOperator -> MINUS .)
    CONSTANT        reduce using rule 125 (ArithmeticOperator -> MINUS .)
    LISTVALUE       reduce using rule 125 (ArithmeticOperator -> MINUS .)
    TRUE            reduce using rule 125 (ArithmeticOperator -> MINUS .)
    FALSE           reduce using rule 125 (ArithmeticOperator -> MINUS .)


state 169

    (126) ArithmeticOperator -> MULT .

    IDENTIFIER      reduce using rule 126 (ArithmeticOperator -> MULT .)
    CONSTANT        reduce using rule 126 (ArithmeticOperator -> MULT .)
    LISTVALUE       reduce using rule 126 (ArithmeticOperator -> MULT .)
    TRUE            reduce using rule 126 (ArithmeticOperator -> MULT .)
    FALSE           reduce using rule 126 (ArithmeticOperator -> MULT .)


state 170

    (128) ArithmeticOperator -> MOD .

    IDENTIFIER      reduce using rule 128 (ArithmeticOperator -> MOD .)
    CONSTANT        reduce using rule 128 (ArithmeticOperator -> MOD .)
    LISTVALUE       reduce using rule 128 (ArithmeticOperator -> MOD .)
    TRUE            reduce using rule 128 (ArithmeticOperator -> MOD .)
    FALSE           reduce using rule 128 (ArithmeticOperator -> MOD .)


state 171

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK EQUAL expression BAR SEMICOLON

    CONSTANT        shift and go to state 222


state 172

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL . expression BAR SEMICOLON
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 38
    IDENTIFIER      shift and go to state 223
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25

    listEval                       shift and go to state 19
    list                           shift and go to state 36
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    union                          shift and go to state 13
    expression                     shift and go to state 224

state 173

    (41) identifierDeclaration -> BAR dataType IDENTIFIER BAR . SEMICOLON

    SEMICOLON       shift and go to state 225


state 174

    (103) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR . SEMICOLON

    SEMICOLON       shift and go to state 226


state 175

    (106) AssignmentOptions2 -> CONSTANT .

    BAR             reduce using rule 106 (AssignmentOptions2 -> CONSTANT .)


state 176

    (107) AssignmentOptions2 -> ArithmeticExpression .

    BAR             reduce using rule 107 (AssignmentOptions2 -> ArithmeticExpression .)


state 177

    (105) AssignmentOption -> AssignmentOperator AssignmentOptions2 .

    BAR             reduce using rule 105 (AssignmentOption -> AssignmentOperator AssignmentOptions2 .)


state 178

    (110) AssignmentOptionChain -> Function .

    BAR             reduce using rule 110 (AssignmentOptionChain -> Function .)


state 179

    (109) AssignmentOptionChain -> IDENTIFIER .
    (63) listEval -> IDENTIFIER . LISTVALUE
    (137) Function -> IDENTIFIER . LPAREN Parameter RPAREN

    BAR             reduce using rule 109 (AssignmentOptionChain -> IDENTIFIER .)
    LISTVALUE       shift and go to state 69
    LPAREN          shift and go to state 131


state 180

    (108) AssignmentOptionChain -> listEval .

    BAR             reduce using rule 108 (AssignmentOptionChain -> listEval .)


state 181

    (111) AssignmentOptionChain -> AssignmentOptions2 .

    BAR             reduce using rule 111 (AssignmentOptionChain -> AssignmentOptions2 .)


state 182

    (58) listDec -> BAR IDENTIFIER EQUAL list . BAR SEMICOLON

    BAR             shift and go to state 227


state 183

    (104) AssignmentOption -> EQUAL AssignmentOptionChain .

    BAR             reduce using rule 104 (AssignmentOption -> EQUAL AssignmentOptionChain .)


state 184

    (16) statement -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 228


state 185

    (66) unionElement -> STRING EQUAL validListUnionValues .
    (67) unionElement -> STRING EQUAL validListUnionValues . COMMA unionElement

    RCURLY          reduce using rule 66 (unionElement -> STRING EQUAL validListUnionValues .)
    COMMA           shift and go to state 229


state 186

    (93) Condition -> LPAREN NOT Condition . RPAREN

    RPAREN          shift and go to state 230


state 187

    (98) Compound -> AND .

    LPAREN          reduce using rule 98 (Compound -> AND .)


state 188

    (92) Condition -> LPAREN Condition Compound . Condition RPAREN
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 231

state 189

    (99) Compound -> OR .

    LPAREN          reduce using rule 99 (Compound -> OR .)


state 190

    (76) WhileLoop -> WHILE Condition COLON Body .

    END             reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    READ            reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    PRINT           reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    IF              reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    BAR             reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    WHILE           reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    for             reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    TC_INT          reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    TC_FLOAT        reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    IDENTIFIER      reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    RETURN          reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    LESSTHAN        reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    LBRACK          reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    LCURLY          reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    LPAREN          reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    INT             reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    BOOLEAN         reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)
    FLOAT           reduce using rule 76 (WhileLoop -> WHILE Condition COLON Body .)


state 191

    (17) statement -> PRINT LPAREN content RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 232


state 192

    (34) morePrint -> PLUS . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 118
    CONSTANT        shift and go to state 117
    IDENTIFIER      shift and go to state 115

    toPrint                        shift and go to state 233

state 193

    (33) content -> toPrint morePrint .

    RPAREN          reduce using rule 33 (content -> toPrint morePrint .)


state 194

    (35) morePrint -> EMPTY .

    RPAREN          reduce using rule 35 (morePrint -> EMPTY .)


state 195

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT . COMMA validListUnionValues RPAREN SEMICOLON

    COMMA           shift and go to state 234


state 196

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 235


state 197

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 236


state 198

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice . RPAREN SEMICOLON

    RPAREN          shift and go to state 237


state 199

    (52) listOpChoice -> CONSTANT .

    RPAREN          reduce using rule 52 (listOpChoice -> CONSTANT .)


state 200

    (53) listOpChoice -> EMPTY .

    RPAREN          reduce using rule 53 (listOpChoice -> EMPTY .)


state 201

    (141) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 238


state 202

    (143) FunctionCallParameter -> IDENTIFIER COMMA . FunctionCallParameter
    (142) FunctionCallParameter -> . IDENTIFIER
    (143) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (144) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 128
    EMPTY           shift and go to state 129

    FunctionCallParameter          shift and go to state 239

state 203

    (136) FunctionDefinition -> dataType Function COLON Body .

    END             reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    READ            reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    PRINT           reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    IF              reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    BAR             reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    WHILE           reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    for             reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    TC_INT          reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    TC_FLOAT        reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    IDENTIFIER      reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    RETURN          reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    LESSTHAN        reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    LBRACK          reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    LCURLY          reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    LPAREN          reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    INT             reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    BOOLEAN         reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)
    FLOAT           reduce using rule 136 (FunctionDefinition -> dataType Function COLON Body .)


state 204

    (138) Parameter -> dataType . IDENTIFIER
    (139) Parameter -> dataType . IDENTIFIER COMMA Parameter

    IDENTIFIER      shift and go to state 240


state 205

    (137) Function -> IDENTIFIER LPAREN Parameter . RPAREN

    RPAREN          shift and go to state 241


state 206

    (140) Parameter -> EMPTY .

    RPAREN          reduce using rule 140 (Parameter -> EMPTY .)


state 207

    (122) RelationExpression -> LPAREN Operand RelationOperator Operand . RPAREN

    RPAREN          shift and go to state 242


state 208

    (32) statement1 -> PRINT LPAREN . content RPAREN SEMICOLON
    (33) content -> . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 118
    CONSTANT        shift and go to state 117
    IDENTIFIER      shift and go to state 115

    content                        shift and go to state 243
    toPrint                        shift and go to state 119

state 209

    (90) elifClause -> ELIF . Condition Body
    (91) Condition -> . RelationExpression
    (92) Condition -> . LPAREN Condition Compound Condition RPAREN
    (93) Condition -> . LPAREN NOT Condition RPAREN
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 50

    RelationExpression             shift and go to state 49
    Condition                      shift and go to state 244

state 210

    (85) IfThenElse -> IF Condition Body addElif .

    END             reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    READ            reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    PRINT           reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    IF              reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    BAR             reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    WHILE           reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    for             reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    TC_INT          reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    TC_FLOAT        reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    IDENTIFIER      reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    RETURN          reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    LESSTHAN        reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    LBRACK          reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    LCURLY          reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    LPAREN          reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    INT             reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    BOOLEAN         reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)
    FLOAT           reduce using rule 85 (IfThenElse -> IF Condition Body addElif .)


state 211

    (88) addElif -> ELSE . Body
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 143
    Body                           shift and go to state 245
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    statementMoreCont              shift and go to state 141
    FunctionDefinition             shift and go to state 149
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    ForLoop                        shift and go to state 154
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 212

    (86) addElif -> addElif2 .

    END             reduce using rule 86 (addElif -> addElif2 .)
    READ            reduce using rule 86 (addElif -> addElif2 .)
    PRINT           reduce using rule 86 (addElif -> addElif2 .)
    IF              reduce using rule 86 (addElif -> addElif2 .)
    BAR             reduce using rule 86 (addElif -> addElif2 .)
    WHILE           reduce using rule 86 (addElif -> addElif2 .)
    for             reduce using rule 86 (addElif -> addElif2 .)
    TC_INT          reduce using rule 86 (addElif -> addElif2 .)
    TC_FLOAT        reduce using rule 86 (addElif -> addElif2 .)
    IDENTIFIER      reduce using rule 86 (addElif -> addElif2 .)
    RETURN          reduce using rule 86 (addElif -> addElif2 .)
    LESSTHAN        reduce using rule 86 (addElif -> addElif2 .)
    LBRACK          reduce using rule 86 (addElif -> addElif2 .)
    LCURLY          reduce using rule 86 (addElif -> addElif2 .)
    LPAREN          reduce using rule 86 (addElif -> addElif2 .)
    INT             reduce using rule 86 (addElif -> addElif2 .)
    BOOLEAN         reduce using rule 86 (addElif -> addElif2 .)
    FLOAT           reduce using rule 86 (addElif -> addElif2 .)


state 213

    (87) addElif -> FI .

    END             reduce using rule 87 (addElif -> FI .)
    READ            reduce using rule 87 (addElif -> FI .)
    PRINT           reduce using rule 87 (addElif -> FI .)
    IF              reduce using rule 87 (addElif -> FI .)
    BAR             reduce using rule 87 (addElif -> FI .)
    WHILE           reduce using rule 87 (addElif -> FI .)
    for             reduce using rule 87 (addElif -> FI .)
    TC_INT          reduce using rule 87 (addElif -> FI .)
    TC_FLOAT        reduce using rule 87 (addElif -> FI .)
    IDENTIFIER      reduce using rule 87 (addElif -> FI .)
    RETURN          reduce using rule 87 (addElif -> FI .)
    LESSTHAN        reduce using rule 87 (addElif -> FI .)
    LBRACK          reduce using rule 87 (addElif -> FI .)
    LCURLY          reduce using rule 87 (addElif -> FI .)
    LPAREN          reduce using rule 87 (addElif -> FI .)
    INT             reduce using rule 87 (addElif -> FI .)
    BOOLEAN         reduce using rule 87 (addElif -> FI .)
    FLOAT           reduce using rule 87 (addElif -> FI .)


state 214

    (89) addElif2 -> elifClause . addElif
    (86) addElif -> . addElif2
    (87) addElif -> . FI
    (88) addElif -> . ELSE Body
    (89) addElif2 -> . elifClause addElif
    (90) elifClause -> . ELIF Condition Body

    FI              shift and go to state 213
    ELSE            shift and go to state 211
    ELIF            shift and go to state 209

    addElif                        shift and go to state 246
    addElif2                       shift and go to state 212
    elifClause                     shift and go to state 214

state 215

    (31) statement1 -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 247


state 216

    (80) statementMoreCont -> statement1 statementMore .

    FI              reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    ELSE            reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    ELIF            reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    END             reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    READ            reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    PRINT           reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    IF              reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    BAR             reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    WHILE           reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    for             reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    TC_INT          reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    TC_FLOAT        reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    IDENTIFIER      reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    RETURN          reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    LESSTHAN        reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    LBRACK          reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    LCURLY          reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    LPAREN          reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    INT             reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    BOOLEAN         reduce using rule 80 (statementMoreCont -> statement1 statementMore .)
    FLOAT           reduce using rule 80 (statementMoreCont -> statement1 statementMore .)


state 217

    (30) statement1 -> listOPStatement statementTop .

    END             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    READ            reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    PRINT           reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    IF              reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    BAR             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    WHILE           reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    for             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    TC_INT          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    TC_FLOAT        reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    IDENTIFIER      reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    RETURN          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LESSTHAN        reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LBRACK          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LCURLY          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LPAREN          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    INT             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    BOOLEAN         reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    FLOAT           reduce using rule 30 (statement1 -> listOPStatement statementTop .)


state 218

    (81) ForLoop -> for LPAREN AssignmentHead Condition . Increment RPAREN Body
    (82) Increment -> . SEMICOLON Operand Options

    SEMICOLON       shift and go to state 248

    Increment                      shift and go to state 249

state 219

    (103) AssignmentHead -> BAR IDENTIFIER . AssignmentOption BAR SEMICOLON
    (104) AssignmentOption -> . EQUAL AssignmentOptionChain
    (105) AssignmentOption -> . AssignmentOperator AssignmentOptions2
    (112) AssignmentOperator -> . PLUSEQUAL
    (113) AssignmentOperator -> . MINUSEQUAL
    (114) AssignmentOperator -> . MULTEQUAL
    (115) AssignmentOperator -> . DIVEQUAL
    (116) AssignmentOperator -> . MODEQUAL

    EQUAL           shift and go to state 250
    PLUSEQUAL       shift and go to state 102
    MINUSEQUAL      shift and go to state 105
    MULTEQUAL       shift and go to state 107
    DIVEQUAL        shift and go to state 101
    MODEQUAL        shift and go to state 108

    AssignmentOption               shift and go to state 103
    AssignmentOperator             shift and go to state 104

state 220

    (61) listElem -> validListUnionValues COMMA listElem .

    RBRACK          reduce using rule 61 (listElem -> validListUnionValues COMMA listElem .)


state 221

    (123) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand . GREATERTHAN

    GREATERTHAN     shift and go to state 251


state 222

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK EQUAL expression BAR SEMICOLON

    RBRACK          shift and go to state 252


state 223

    (63) listEval -> IDENTIFIER . LISTVALUE

    LISTVALUE       shift and go to state 69


state 224

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 253


state 225

    (41) identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .

    END             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    READ            reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    PRINT           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IF              reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BAR             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    WHILE           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    for             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_INT          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    RETURN          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LESSTHAN        reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LBRACK          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LCURLY          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LPAREN          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    INT             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BOOLEAN         reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    FLOAT           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)


state 226

    (103) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .

    END             reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    READ            reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    PRINT           reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IF              reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BAR             reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    WHILE           reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    for             reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_INT          reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    RETURN          reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LESSTHAN        reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LBRACK          reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LCURLY          reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LPAREN          reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    INT             reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BOOLEAN         reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    FLOAT           reduce using rule 103 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)


state 227

    (58) listDec -> BAR IDENTIFIER EQUAL list BAR . SEMICOLON

    SEMICOLON       shift and go to state 254


state 228

    (16) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 255
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 229

    (67) unionElement -> STRING EQUAL validListUnionValues COMMA . unionElement
    (66) unionElement -> . STRING EQUAL validListUnionValues
    (67) unionElement -> . STRING EQUAL validListUnionValues COMMA unionElement
    (68) unionElement -> . EMPTY

    STRING          shift and go to state 46
    EMPTY           shift and go to state 48

    unionElement                   shift and go to state 256

state 230

    (93) Condition -> LPAREN NOT Condition RPAREN .

    SEMICOLON       reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    COLON           reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    RPAREN          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    AND             reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    OR              reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    END             reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    READ            reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    PRINT           reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    IF              reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    BAR             reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    WHILE           reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    for             reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    TC_INT          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    TC_FLOAT        reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    IDENTIFIER      reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    RETURN          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    LESSTHAN        reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    LBRACK          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    LCURLY          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    LPAREN          reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    INT             reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    BOOLEAN         reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)
    FLOAT           reduce using rule 93 (Condition -> LPAREN NOT Condition RPAREN .)


state 231

    (92) Condition -> LPAREN Condition Compound Condition . RPAREN

    RPAREN          shift and go to state 257


state 232

    (17) statement -> PRINT LPAREN content RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 20
    READ            shift and go to state 4
    PRINT           shift and go to state 8
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    statementTop                   shift and go to state 258
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 11
    IfThenElse                     shift and go to state 12
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 14
    typeCastToInt                  shift and go to state 15
    statement                      shift and go to state 16
    FunctionDefinition             shift and go to state 18
    listEval                       shift and go to state 19
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 26
    ForLoop                        shift and go to state 27
    WhileLoop                      shift and go to state 30
    stringOpStatement              shift and go to state 31
    list                           shift and go to state 36
    listOPStatement                shift and go to state 39
    FunctionCall                   shift and go to state 40
    expression                     shift and go to state 41

state 233

    (34) morePrint -> PLUS toPrint . morePrint
    (34) morePrint -> . PLUS toPrint morePrint
    (35) morePrint -> . EMPTY

    PLUS            shift and go to state 192
    EMPTY           shift and go to state 194

    morePrint                      shift and go to state 259

state 234

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA . validListUnionValues RPAREN SEMICOLON
    (69) validListUnionValues -> . CONSTANT
    (70) validListUnionValues -> . FLOATVALUE
    (71) validListUnionValues -> . booleanValue
    (72) validListUnionValues -> . STRINGVALUE
    (73) validListUnionValues -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    CONSTANT        shift and go to state 89
    FLOATVALUE      shift and go to state 88
    STRINGVALUE     shift and go to state 91
    LISTVALUE       shift and go to state 93
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    booleanValue                   shift and go to state 94
    validListUnionValues           shift and go to state 260

state 235

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 236

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 262


state 237

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 238

    (141) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .

    END             reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    READ            reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    PRINT           reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IF              reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BAR             reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    WHILE           reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    for             reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_INT          reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    RETURN          reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LBRACK          reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LCURLY          reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LPAREN          reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    INT             reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    FLOAT           reduce using rule 141 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)


state 239

    (143) FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .

    RPAREN          reduce using rule 143 (FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .)


state 240

    (138) Parameter -> dataType IDENTIFIER .
    (139) Parameter -> dataType IDENTIFIER . COMMA Parameter

    RPAREN          reduce using rule 138 (Parameter -> dataType IDENTIFIER .)
    COMMA           shift and go to state 264


state 241

    (137) Function -> IDENTIFIER LPAREN Parameter RPAREN .

    BAR             reduce using rule 137 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)
    COLON           reduce using rule 137 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)


state 242

    (122) RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .

    END             reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    READ            reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    PRINT           reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IF              reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BAR             reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    WHILE           reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    for             reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_INT          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_FLOAT        reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IDENTIFIER      reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RETURN          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LESSTHAN        reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LBRACK          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LCURLY          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LPAREN          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    INT             reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BOOLEAN         reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    FLOAT           reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RPAREN          reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    SEMICOLON       reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    AND             reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    OR              reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    COLON           reduce using rule 122 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)


state 243

    (32) statement1 -> PRINT LPAREN content . RPAREN SEMICOLON

    RPAREN          shift and go to state 265


state 244

    (90) elifClause -> ELIF Condition . Body
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    listDec                        shift and go to state 7
    typecastToFloat                shift and go to state 143
    Body                           shift and go to state 266
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    statementMoreCont              shift and go to state 141
    FunctionDefinition             shift and go to state 149
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    ForLoop                        shift and go to state 154
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 245

    (88) addElif -> ELSE Body .

    END             reduce using rule 88 (addElif -> ELSE Body .)
    READ            reduce using rule 88 (addElif -> ELSE Body .)
    PRINT           reduce using rule 88 (addElif -> ELSE Body .)
    IF              reduce using rule 88 (addElif -> ELSE Body .)
    BAR             reduce using rule 88 (addElif -> ELSE Body .)
    WHILE           reduce using rule 88 (addElif -> ELSE Body .)
    for             reduce using rule 88 (addElif -> ELSE Body .)
    TC_INT          reduce using rule 88 (addElif -> ELSE Body .)
    TC_FLOAT        reduce using rule 88 (addElif -> ELSE Body .)
    IDENTIFIER      reduce using rule 88 (addElif -> ELSE Body .)
    RETURN          reduce using rule 88 (addElif -> ELSE Body .)
    LESSTHAN        reduce using rule 88 (addElif -> ELSE Body .)
    LBRACK          reduce using rule 88 (addElif -> ELSE Body .)
    LCURLY          reduce using rule 88 (addElif -> ELSE Body .)
    LPAREN          reduce using rule 88 (addElif -> ELSE Body .)
    INT             reduce using rule 88 (addElif -> ELSE Body .)
    BOOLEAN         reduce using rule 88 (addElif -> ELSE Body .)
    FLOAT           reduce using rule 88 (addElif -> ELSE Body .)


state 246

    (89) addElif2 -> elifClause addElif .

    END             reduce using rule 89 (addElif2 -> elifClause addElif .)
    READ            reduce using rule 89 (addElif2 -> elifClause addElif .)
    PRINT           reduce using rule 89 (addElif2 -> elifClause addElif .)
    IF              reduce using rule 89 (addElif2 -> elifClause addElif .)
    BAR             reduce using rule 89 (addElif2 -> elifClause addElif .)
    WHILE           reduce using rule 89 (addElif2 -> elifClause addElif .)
    for             reduce using rule 89 (addElif2 -> elifClause addElif .)
    TC_INT          reduce using rule 89 (addElif2 -> elifClause addElif .)
    TC_FLOAT        reduce using rule 89 (addElif2 -> elifClause addElif .)
    IDENTIFIER      reduce using rule 89 (addElif2 -> elifClause addElif .)
    RETURN          reduce using rule 89 (addElif2 -> elifClause addElif .)
    LESSTHAN        reduce using rule 89 (addElif2 -> elifClause addElif .)
    LBRACK          reduce using rule 89 (addElif2 -> elifClause addElif .)
    LCURLY          reduce using rule 89 (addElif2 -> elifClause addElif .)
    LPAREN          reduce using rule 89 (addElif2 -> elifClause addElif .)
    INT             reduce using rule 89 (addElif2 -> elifClause addElif .)
    BOOLEAN         reduce using rule 89 (addElif2 -> elifClause addElif .)
    FLOAT           reduce using rule 89 (addElif2 -> elifClause addElif .)


state 247

    (31) statement1 -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 267


state 248

    (82) Increment -> SEMICOLON . Operand Options
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 268
    booleanValue                   shift and go to state 74

state 249

    (81) ForLoop -> for LPAREN AssignmentHead Condition Increment . RPAREN Body

    RPAREN          shift and go to state 269


state 250

    (104) AssignmentOption -> EQUAL . AssignmentOptionChain
    (108) AssignmentOptionChain -> . listEval
    (109) AssignmentOptionChain -> . IDENTIFIER
    (110) AssignmentOptionChain -> . Function
    (111) AssignmentOptionChain -> . AssignmentOptions2
    (63) listEval -> . IDENTIFIER LISTVALUE
    (137) Function -> . IDENTIFIER LPAREN Parameter RPAREN
    (106) AssignmentOptions2 -> . CONSTANT
    (107) AssignmentOptions2 -> . ArithmeticExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN

    IDENTIFIER      shift and go to state 179
    CONSTANT        shift and go to state 175
    LESSTHAN        shift and go to state 38

    Function                       shift and go to state 178
    listEval                       shift and go to state 180
    ArithmeticExpression           shift and go to state 176
    AssignmentOptions2             shift and go to state 181
    AssignmentOptionChain          shift and go to state 183

state 251

    (123) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .

    END             reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    READ            reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    PRINT           reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IF              reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BAR             reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    WHILE           reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    for             reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_INT          reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_FLOAT        reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IDENTIFIER      reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    RETURN          reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LESSTHAN        reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LBRACK          reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LCURLY          reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LPAREN          reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    INT             reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BOOLEAN         reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    FLOAT           reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    SEMICOLON       reduce using rule 123 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)


state 252

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 271
    EQUAL           shift and go to state 270


state 253

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 272


state 254

    (58) listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .

    END             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    READ            reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    PRINT           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    IF              reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    BAR             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    WHILE           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    for             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    TC_INT          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    RETURN          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LESSTHAN        reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LBRACK          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LCURLY          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LPAREN          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    INT             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    BOOLEAN         reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    FLOAT           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)


state 255

    (16) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .

    $end            reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    END             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    for             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LCURLY          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)


state 256

    (67) unionElement -> STRING EQUAL validListUnionValues COMMA unionElement .

    RCURLY          reduce using rule 67 (unionElement -> STRING EQUAL validListUnionValues COMMA unionElement .)


state 257

    (92) Condition -> LPAREN Condition Compound Condition RPAREN .

    SEMICOLON       reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    COLON           reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    RPAREN          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    AND             reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    OR              reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    END             reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    READ            reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    PRINT           reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    IF              reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    BAR             reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    WHILE           reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    for             reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    TC_INT          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    TC_FLOAT        reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    IDENTIFIER      reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    RETURN          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LESSTHAN        reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LBRACK          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LCURLY          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LPAREN          reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    INT             reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    BOOLEAN         reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    FLOAT           reduce using rule 92 (Condition -> LPAREN Condition Compound Condition RPAREN .)


state 258

    (17) statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .

    $end            reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    END             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    for             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LCURLY          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)


state 259

    (34) morePrint -> PLUS toPrint morePrint .

    RPAREN          reduce using rule 34 (morePrint -> PLUS toPrint morePrint .)


state 260

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 273


state 261

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .

    END             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    READ            reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IF              reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BAR             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    for             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_INT          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LBRACK          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LCURLY          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    INT             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)


state 262

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LCURLY          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 263

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .

    END             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    READ            reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    PRINT           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IF              reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BAR             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    WHILE           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    for             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_INT          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    RETURN          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LBRACK          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LCURLY          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LPAREN          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    INT             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    FLOAT           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)


state 264

    (139) Parameter -> dataType IDENTIFIER COMMA . Parameter
    (138) Parameter -> . dataType IDENTIFIER
    (139) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (140) Parameter -> . EMPTY
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    EMPTY           shift and go to state 206
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    dataType                       shift and go to state 204
    Parameter                      shift and go to state 274

state 265

    (32) statement1 -> PRINT LPAREN content RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 275


state 266

    (90) elifClause -> ELIF Condition Body .

    FI              reduce using rule 90 (elifClause -> ELIF Condition Body .)
    ELSE            reduce using rule 90 (elifClause -> ELIF Condition Body .)
    ELIF            reduce using rule 90 (elifClause -> ELIF Condition Body .)


state 267

    (31) statement1 -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 276


state 268

    (82) Increment -> SEMICOLON Operand . Options
    (83) Options -> . Iterator
    (84) Options -> . AssignmentOperator Operand
    (100) Iterator -> . PLUSPLUS
    (101) Iterator -> . MINUSMINUS
    (102) Iterator -> . EMPTY
    (112) AssignmentOperator -> . PLUSEQUAL
    (113) AssignmentOperator -> . MINUSEQUAL
    (114) AssignmentOperator -> . MULTEQUAL
    (115) AssignmentOperator -> . DIVEQUAL
    (116) AssignmentOperator -> . MODEQUAL

    PLUSPLUS        shift and go to state 278
    MINUSMINUS      shift and go to state 280
    EMPTY           shift and go to state 282
    PLUSEQUAL       shift and go to state 102
    MINUSEQUAL      shift and go to state 105
    MULTEQUAL       shift and go to state 107
    DIVEQUAL        shift and go to state 101
    MODEQUAL        shift and go to state 108

    AssignmentOperator             shift and go to state 279
    Options                        shift and go to state 281
    Iterator                       shift and go to state 277

state 269

    (81) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN . Body
    (77) Body -> . statementMore
    (78) statementMore -> . statementMoreCont
    (79) statementMore -> . END
    (80) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (85) IfThenElse -> . IF Condition Body addElif
    (103) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (76) WhileLoop -> . WHILE Condition COLON Body
    (81) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (74) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (75) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (136) FunctionDefinition -> . dataType Function COLON Body
    (141) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (145) returnDec -> . RETURN CONSTANT SEMICOLON
    (146) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (147) returnDec -> . RETURN expression SEMICOLON
    (148) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 150
    READ            shift and go to state 146
    PRINT           shift and go to state 142
    IF              shift and go to state 29
    BAR             shift and go to state 3
    WHILE           shift and go to state 6
    for             shift and go to state 32
    TC_INT          shift and go to state 10
    TC_FLOAT        shift and go to state 34
    IDENTIFIER      shift and go to state 17
    RETURN          shift and go to state 9
    LESSTHAN        shift and go to state 38
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25
    INT             shift and go to state 33
    BOOLEAN         shift and go to state 28
    FLOAT           shift and go to state 35

    returnDec                      shift and go to state 140
    listDec                        shift and go to state 7
    statementMoreCont              shift and go to state 141
    typecastToFloat                shift and go to state 143
    Body                           shift and go to state 283
    IfThenElse                     shift and go to state 145
    union                          shift and go to state 13
    AssignmentHead                 shift and go to state 147
    typeCastToInt                  shift and go to state 148
    FunctionDefinition             shift and go to state 149
    listEval                       shift and go to state 19
    statementMore                  shift and go to state 151
    statement1                     shift and go to state 152
    dataType                       shift and go to state 21
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    identifierDeclaration          shift and go to state 24
    declaration                    shift and go to state 153
    ForLoop                        shift and go to state 154
    WhileLoop                      shift and go to state 155
    stringOpStatement              shift and go to state 156
    list                           shift and go to state 36
    listOPStatement                shift and go to state 157
    FunctionCall                   shift and go to state 158
    expression                     shift and go to state 159

state 270

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL . expression BAR SEMICOLON
    (117) expression -> . ArithmeticExpression
    (118) expression -> . listEval
    (119) expression -> . list
    (120) expression -> . union
    (121) expression -> . RelationExpression
    (123) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (65) union -> . LCURLY unionElement RCURLY
    (122) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 38
    IDENTIFIER      shift and go to state 223
    LBRACK          shift and go to state 37
    LCURLY          shift and go to state 5
    LPAREN          shift and go to state 25

    listEval                       shift and go to state 19
    list                           shift and go to state 36
    ArithmeticExpression           shift and go to state 22
    RelationExpression             shift and go to state 23
    union                          shift and go to state 13
    expression                     shift and go to state 284

state 271

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR . SEMICOLON

    SEMICOLON       shift and go to state 285


state 272

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .

    END             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LCURLY          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)


state 273

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 286


state 274

    (139) Parameter -> dataType IDENTIFIER COMMA Parameter .

    RPAREN          reduce using rule 139 (Parameter -> dataType IDENTIFIER COMMA Parameter .)


state 275

    (32) statement1 -> PRINT LPAREN content RPAREN SEMICOLON .

    END             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    READ            reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IF              reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BAR             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    for             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_INT          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LBRACK          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LCURLY          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LPAREN          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    INT             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    FLOAT           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)


state 276

    (31) statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LCURLY          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 277

    (83) Options -> Iterator .

    RPAREN          reduce using rule 83 (Options -> Iterator .)


state 278

    (100) Iterator -> PLUSPLUS .

    RPAREN          reduce using rule 100 (Iterator -> PLUSPLUS .)


state 279

    (84) Options -> AssignmentOperator . Operand
    (94) Operand -> . IDENTIFIER
    (95) Operand -> . CONSTANT
    (96) Operand -> . booleanValue
    (97) Operand -> . LISTVALUE
    (149) booleanValue -> . TRUE
    (150) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 80
    CONSTANT        shift and go to state 78
    LISTVALUE       shift and go to state 79
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    Operand                        shift and go to state 287
    booleanValue                   shift and go to state 74

state 280

    (101) Iterator -> MINUSMINUS .

    RPAREN          reduce using rule 101 (Iterator -> MINUSMINUS .)


state 281

    (82) Increment -> SEMICOLON Operand Options .

    RPAREN          reduce using rule 82 (Increment -> SEMICOLON Operand Options .)


state 282

    (102) Iterator -> EMPTY .

    RPAREN          reduce using rule 102 (Iterator -> EMPTY .)


state 283

    (81) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .

    END             reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    READ            reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    PRINT           reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IF              reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BAR             reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    WHILE           reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    for             reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_INT          reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_FLOAT        reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IDENTIFIER      reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    RETURN          reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LESSTHAN        reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LBRACK          reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LCURLY          reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LPAREN          reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    INT             reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BOOLEAN         reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    FLOAT           reduce using rule 81 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)


state 284

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 288


state 285

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .

    END             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    READ            reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    PRINT           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IF              reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BAR             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    WHILE           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    for             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_INT          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    RETURN          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LESSTHAN        reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LBRACK          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LCURLY          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LPAREN          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    INT             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BOOLEAN         reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    FLOAT           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)


state 286

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .

    END             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    READ            reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IF              reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BAR             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    for             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_INT          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LBRACK          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LCURLY          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LPAREN          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    INT             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    FLOAT           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)


state 287

    (84) Options -> AssignmentOperator Operand .

    RPAREN          reduce using rule 84 (Options -> AssignmentOperator Operand .)


state 288

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 289


state 289

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .

    END             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LCURLY          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)

